{"version":3,"sources":["../../src/index.ts","../../src/SalinaPDFViewer.ts","../../src/highlighting/HighlightEngine.ts","../../src/search/SearchEngine.ts","../../src/rendering/PDFRenderer.ts","../../src/utils/helpers.ts","../../src/utils/performance.ts"],"sourcesContent":["// Main exports\nexport { SalinaPDFViewer } from './SalinaPDFViewer'\n\n// Type exports\nexport type {\n  SalinaPDFViewerOptions,\n  Highlight,\n  SearchResult,\n  PDFPage,\n  ViewerState,\n  SalinaPDFPlugin,\n  EventMap\n} from './types'\n\n// Engine exports\nexport { HighlightEngine } from './highlighting/HighlightEngine'\nexport { SearchEngine } from './search/SearchEngine'\nexport { PDFRenderer } from './rendering/PDFRenderer'\n\n// Utility exports\nexport * from './utils/helpers'\nexport { PerformanceOptimizer, MemoryManager, VirtualScrolling } from './utils/performance'\n\n// Version\nexport const VERSION = '1.0.0'\n\n","import { EventEmitter } from 'eventemitter3'\nimport type { \n  SalinaPDFViewerOptions, \n  ViewerState, \n  Highlight, \n  SearchResult, \n  SalinaPDFPlugin\n} from './types'\nimport { HighlightEngine } from './highlighting/HighlightEngine'\nimport { SearchEngine } from './search/SearchEngine'\nimport { PDFRenderer } from './rendering/PDFRenderer'\nimport { generateId } from './utils/helpers'\n\nexport class SalinaPDFViewer extends EventEmitter {\n  private container: HTMLElement\n  private options: Required<SalinaPDFViewerOptions>\n  private state: ViewerState\n  private pdfRenderer: PDFRenderer\n  private highlightEngine: HighlightEngine\n  private searchEngine: SearchEngine\n  private plugins: Map<string, SalinaPDFPlugin> = new Map()\n  private resizeObserver?: ResizeObserver\n\n  constructor(options: SalinaPDFViewerOptions) {\n    super()\n    \n    this.container = options.container\n    this.options = this.mergeOptions(options)\n    this.state = this.initializeState()\n    \n    // Initialize engines\n    this.pdfRenderer = new PDFRenderer(this.container, this.options)\n    this.highlightEngine = new HighlightEngine({\n      defaultColor: this.options.highlighting.defaultColor || 'rgba(255, 255, 0, 0.4)',\n      allowMultipleColors: this.options.highlighting.allowMultipleColors || true,\n      persistHighlights: this.options.highlighting.persistHighlights || true\n    })\n    this.searchEngine = new SearchEngine({\n      highlightColor: this.options.search.highlightColor || 'rgba(255, 165, 0, 0.6)',\n      caseSensitive: this.options.search.caseSensitive || false,\n      wholeWords: this.options.search.wholeWords || false\n    })\n    \n    // Setup\n    this.setupContainer()\n    this.setupEventListeners()\n    this.setupResizeObserver()\n    \n    // Load file if provided\n    if (options.file) {\n      this.loadDocument(options.file)\n    }\n  }\n\n  // Public API Methods\n\n  async loadDocument(file: File | string | ArrayBuffer): Promise<void> {\n    try {\n      this.setState({ isLoading: true, error: null })\n      \n      const totalPages = await this.pdfRenderer.loadDocument(file)\n      \n      this.setState({\n        totalPages,\n        currentPage: 1,\n        isLoading: false\n      })\n      \n      this.emit('document:loaded', totalPages)\n      this.options.callbacks.onLoad?.(totalPages)\n      \n    } catch (error) {\n      const errorObj = error instanceof Error ? error : new Error(String(error))\n      this.setState({ error: errorObj.message, isLoading: false })\n      this.emit('document:error', errorObj)\n      this.options.callbacks.onError?.(errorObj)\n      throw errorObj\n    }\n  }\n\n  destroy(): void {\n    this.resizeObserver?.disconnect()\n    this.pdfRenderer.destroy()\n    this.highlightEngine.destroy()\n    this.searchEngine.destroy()\n    this.removeAllListeners()\n    this.container.innerHTML = ''\n  }\n\n  // Navigation\n  goToPage(page: number): void {\n    if (page < 1 || page > this.state.totalPages) return\n    \n    this.setState({ currentPage: page })\n    this.pdfRenderer.goToPage(page)\n    this.emit('page:changed', page, this.state.totalPages)\n    this.options.callbacks.onPageChange?.(page, this.state.totalPages)\n  }\n\n  nextPage(): void {\n    this.goToPage(this.state.currentPage + 1)\n  }\n\n  prevPage(): void {\n    this.goToPage(this.state.currentPage - 1)\n  }\n\n  // Zoom controls\n  zoomIn(): void {\n    const newScale = Math.min(this.options.zoom.max, this.state.scale + this.options.zoom.step)\n    this.setZoom(newScale)\n  }\n\n  zoomOut(): void {\n    const newScale = Math.max(this.options.zoom.min, this.state.scale - this.options.zoom.step)\n    this.setZoom(newScale)\n  }\n\n  setZoom(scale: number): void {\n    const clampedScale = Math.max(this.options.zoom.min, Math.min(this.options.zoom.max, scale))\n    \n    if (clampedScale !== this.state.scale) {\n      this.state.scale = clampedScale\n      \n      // Update highlight engine scale for accurate positioning\n      this.highlightEngine.updateScale(clampedScale)\n      \n      // Update PDF renderer scale to re-render pages\n      this.pdfRenderer.setScale(clampedScale)\n      \n      // Emit zoom change event\n      this.emit('zoom:changed', clampedScale)\n      this.options.callbacks.onZoom?.(clampedScale)\n    }\n  }\n\n  fitToWidth(): void {\n    if (!this.container) return\n    \n    // Use PDFRenderer method to calculate and apply scale\n    const scale = this.pdfRenderer.calculateFitToWidthScale()\n    this.setZoom(scale)\n  }\n\n  fitToHeight(): void {\n    if (!this.container) return\n    \n    // Use PDFRenderer method to calculate and apply scale  \n    const scale = this.pdfRenderer.calculateFitToHeightScale()\n    this.setZoom(scale)\n  }\n\n  // Search\n  search(query: string): SearchResult[] {\n    if (!query.trim()) {\n      this.clearSearch()\n      return []\n    }\n\n    this.setState({ searchQuery: query })\n    const results = this.searchEngine.search(query, this.pdfRenderer.getTextContent())\n    \n    this.setState({ \n      searchResults: results, \n      currentSearchIndex: results.length > 0 ? 0 : -1 \n    })\n    \n    this.emit('search:results', results)\n    this.options.callbacks.onSearch?.(results)\n    \n    return results\n  }\n\n  clearSearch(): void {\n    this.setState({\n      searchQuery: '',\n      searchResults: [],\n      currentSearchIndex: -1\n    })\n    \n    this.searchEngine.clearResults()\n    this.emit('search:cleared')\n  }\n\n  nextSearchResult(): void {\n    if (this.state.searchResults.length === 0) return\n    \n    const nextIndex = (this.state.currentSearchIndex + 1) % this.state.searchResults.length\n    this.setState({ currentSearchIndex: nextIndex })\n    \n    const result = this.state.searchResults[nextIndex]\n    this.goToPage(result.pageNumber)\n  }\n\n  prevSearchResult(): void {\n    if (this.state.searchResults.length === 0) return\n    \n    const prevIndex = this.state.currentSearchIndex === 0 \n      ? this.state.searchResults.length - 1 \n      : this.state.currentSearchIndex - 1\n    \n    this.setState({ currentSearchIndex: prevIndex })\n    \n    const result = this.state.searchResults[prevIndex]\n    this.goToPage(result.pageNumber)\n  }\n\n  // Highlighting\n  addHighlight(highlight: Omit<Highlight, 'id' | 'timestamp'>): Highlight {\n    const fullHighlight: Highlight = {\n      ...highlight,\n      id: generateId(),\n      timestamp: Date.now()\n    }\n    \n    this.state.highlights.set(fullHighlight.id, fullHighlight)\n    this.highlightEngine.addHighlight(fullHighlight)\n    \n    this.emit('highlight:added', fullHighlight)\n    this.options.callbacks.onHighlight?.(fullHighlight)\n    \n    return fullHighlight\n  }\n\n  removeHighlight(id: string): boolean {\n    const removed = this.state.highlights.delete(id)\n    if (removed) {\n      this.highlightEngine.removeHighlight(id)\n      this.emit('highlight:removed', id)\n      this.options.callbacks.onHighlightRemove?.(id)\n    }\n    return removed\n  }\n\n  clearHighlights(): void {\n    this.state.highlights.clear()\n    this.highlightEngine.clearHighlights()\n    this.emit('highlight:cleared')\n  }\n\n  getHighlights(): Highlight[] {\n    return Array.from(this.state.highlights.values())\n  }\n\n  exportHighlights(format: 'json' | 'csv' = 'json'): string {\n    const highlights = this.getHighlights()\n    \n    if (format === 'json') {\n      return JSON.stringify(highlights, null, 2)\n    }\n    \n    // CSV format\n    const headers = ['id', 'text', 'pageNumber', 'x', 'y', 'width', 'height', 'color', 'timestamp']\n    const csvData = highlights.map(h => [\n      h.id,\n      `\"${h.text.replace(/\"/g, '\"\"')}\"`,\n      h.pageNumber,\n      h.position.x,\n      h.position.y,\n      h.position.width,\n      h.position.height,\n      h.color,\n      h.timestamp\n    ].join(','))\n    \n    return [headers.join(','), ...csvData].join('\\n')\n  }\n\n  importHighlights(data: string, format: 'json' | 'csv' = 'json'): void {\n    try {\n      let highlights: Highlight[]\n      \n      if (format === 'json') {\n        highlights = JSON.parse(data)\n      } else {\n        // Parse CSV with better error handling\n        const lines = data.split('\\n').filter(line => line.trim())\n        if (lines.length < 2) throw new Error('Invalid CSV format')\n        \n        highlights = lines.slice(1).map(line => {\n          const values = this.parseCSVLine(line)\n          if (values.length < 8) throw new Error('Invalid CSV row format')\n          \n          return {\n            id: values[0],\n            text: values[1].replace(/^\"|\"$/g, '').replace(/\"\"/g, '\"'),\n            pageNumber: parseInt(values[2]),\n            position: {\n              x: parseFloat(values[3]),\n              y: parseFloat(values[4]),\n              width: parseFloat(values[5]),\n              height: parseFloat(values[6])\n            },\n            color: values[7],\n            timestamp: parseInt(values[8])\n          }\n        })\n      }\n      \n      // Validate highlights before importing\n      const validHighlights = highlights.filter(h => \n        h.id && h.text && h.pageNumber > 0 && h.position && h.color\n      )\n      \n      if (validHighlights.length !== highlights.length) {\n        console.warn(`Filtered out ${highlights.length - validHighlights.length} invalid highlights`)\n      }\n      \n      // Clear existing and add imported highlights in batch\n      this.clearHighlights()\n      validHighlights.forEach(highlight => {\n        this.state.highlights.set(highlight.id, highlight)\n        this.highlightEngine.addHighlight(highlight)\n      })\n      \n    } catch (error) {\n      throw new Error(`Failed to import highlights: ${error}`)\n    }\n  }\n\n  private parseCSVLine(line: string): string[] {\n    const result: string[] = []\n    let current = ''\n    let inQuotes = false\n    \n    for (let i = 0; i < line.length; i++) {\n      const char = line[i]\n      \n      if (char === '\"') {\n        if (inQuotes && line[i + 1] === '\"') {\n          current += '\"'\n          i++ // Skip next quote\n        } else {\n          inQuotes = !inQuotes\n        }\n      } else if (char === ',' && !inQuotes) {\n        result.push(current)\n        current = ''\n      } else {\n        current += char\n      }\n    }\n    \n    result.push(current)\n    return result\n  }\n\n  // Plugin System\n  use(plugin: SalinaPDFPlugin): void {\n    if (this.plugins.has(plugin.name)) {\n      throw new Error(`Plugin '${plugin.name}' is already installed`)\n    }\n    \n    plugin.install(this)\n    this.plugins.set(plugin.name, plugin)\n  }\n\n  unuse(pluginName: string): void {\n    const plugin = this.plugins.get(pluginName)\n    if (plugin) {\n      plugin.uninstall(this)\n      this.plugins.delete(pluginName)\n    }\n  }\n\n  // Getters\n  getCurrentPage(): number {\n    return this.state.currentPage\n  }\n\n  getTotalPages(): number {\n    return this.state.totalPages\n  }\n\n  getScale(): number {\n    return this.state.scale\n  }\n\n  getSearchResults(): SearchResult[] {\n    return this.state.searchResults\n  }\n\n  getCurrentSearchIndex(): number {\n    return this.state.currentSearchIndex\n  }\n\n  isLoading(): boolean {\n    return this.state.isLoading\n  }\n\n  getError(): string | null {\n    return this.state.error\n  }\n\n  // Private Methods\n\n  private mergeOptions(options: SalinaPDFViewerOptions): Required<SalinaPDFViewerOptions> {\n    return {\n      container: options.container,\n      file: options.file ?? undefined,\n      theme: options.theme ?? 'light',\n      width: options.width ?? '100%',\n      height: options.height ?? '100%',\n      features: {\n        highlighting: true,\n        search: true,\n        zoom: true,\n        export: true,\n        annotations: false,\n        ...options.features\n      },\n      highlighting: {\n        defaultColor: 'rgba(255, 255, 0, 0.4)',\n        allowMultipleColors: true,\n        persistHighlights: true,\n        ...options.highlighting\n      },\n      search: {\n        highlightColor: 'rgba(255, 165, 0, 0.6)',\n        caseSensitive: false,\n        wholeWords: false,\n        ...options.search\n      },\n      zoom: {\n        min: options.zoom?.min ?? 0.5,\n        max: options.zoom?.max ?? 3.0,\n        step: options.zoom?.step ?? 0.2,\n        fitToWidth: options.zoom?.fitToWidth ?? true,\n        fitToHeight: options.zoom?.fitToHeight ?? true,\n        ...options.zoom\n      },\n      callbacks: {\n        onHighlight: () => {},\n        onHighlightRemove: () => {},\n        onSearch: () => {},\n        onPageChange: () => {},\n        onLoad: () => {},\n        onError: () => {},\n        onZoom: () => {},\n        ...options.callbacks\n      }\n    }\n  }\n\n  private initializeState(): ViewerState {\n    return {\n      currentPage: 1,\n      totalPages: 0,\n      scale: 1.0,\n      isLoading: false,\n      error: null,\n      searchQuery: '',\n      searchResults: [],\n      currentSearchIndex: -1,\n      highlights: new Map()\n    }\n  }\n\n  private setState(updates: Partial<ViewerState>): void {\n    Object.assign(this.state, updates)\n  }\n\n  private setupContainer(): void {\n    this.container.classList.add('salina-pdf-viewer')\n    this.container.setAttribute('data-theme', this.options.theme)\n    \n    // Set container dimensions\n    if (typeof this.options.width === 'number') {\n      this.container.style.width = `${this.options.width}px`\n    } else {\n      this.container.style.width = this.options.width\n    }\n    \n    if (typeof this.options.height === 'number') {\n      this.container.style.height = `${this.options.height}px`\n    } else {\n      this.container.style.height = this.options.height\n    }\n  }\n\n  private setupEventListeners(): void {\n    // Text selection for highlighting\n    if (this.options.features.highlighting) {\n      document.addEventListener('mouseup', () => this.handleTextSelection())\n    }\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case 'f':\n          case 'F':\n            if (this.options.features.search) {\n              e.preventDefault()\n              // Emit search focus event\n              this.emit('search:focus')\n            }\n            break\n          case '+':\n          case '=':\n            e.preventDefault()\n            this.zoomIn()\n            break\n          case '-':\n            e.preventDefault()\n            this.zoomOut()\n            break\n          case '0':\n            e.preventDefault()\n            this.setZoom(1.0)\n            break\n        }\n      }\n    })\n\n    // Handle viewport changes for highlight accuracy\n    let scrollTimeout: number\n    const handleScroll = () => {\n      clearTimeout(scrollTimeout)\n      scrollTimeout = window.setTimeout(() => {\n        if (this.options.features.highlighting) {\n          this.highlightEngine.updateVisibleHighlights()\n        }\n      }, 100)\n    }\n\n    // Listen for scroll events on the container and window\n    this.container.addEventListener('scroll', handleScroll)\n    window.addEventListener('scroll', handleScroll)\n\n    // Handle resize events\n    window.addEventListener('resize', () => {\n      if (this.options.features.highlighting) {\n        this.highlightEngine.handleViewportChange()\n      }\n      this.pdfRenderer.handleResize()\n    })\n  }\n\n  private setupResizeObserver(): void {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.resizeObserver = new ResizeObserver(() => {\n        this.pdfRenderer.handleResize()\n      })\n      this.resizeObserver.observe(this.container)\n    }\n  }\n\n  private async handleTextSelection(): Promise<void> {\n    const selection = window.getSelection()\n    if (!selection || !selection.toString().trim()) return\n\n    const range = selection.getRangeAt(0)\n    const text = selection.toString()\n    \n    // Find which page this selection belongs to\n    const pageElement = range.commonAncestorContainer.nodeType === Node.TEXT_NODE\n      ? range.commonAncestorContainer.parentElement?.closest('.salina-pdf-page')\n      : (range.commonAncestorContainer as Element).closest('.salina-pdf-page')\n    \n    if (!pageElement) return\n    \n    const pageNumberAttr = pageElement.getAttribute('data-page-number')\n    const pageNumber = parseInt(pageNumberAttr || '1')\n    \n    // Use the improved HighlightEngine method for accurate coordinate calculation\n    const highlights = this.highlightEngine.createHighlightFromSelection(\n      selection,\n      pageNumber,\n      this.options.highlighting.defaultColor\n    )\n    \n    if (highlights) {\n      // Emit events for each highlight created\n      highlights.forEach(highlight => {\n        this.state.highlights.set(highlight.id, highlight)\n        this.emit('highlight:added', highlight)\n        this.options.callbacks.onHighlight?.(highlight)\n      })\n    }\n    \n    // Clear selection\n    selection.removeAllRanges()\n  }\n}","import type { Highlight } from '../types'\n\nexport interface HighlightOptions {\n  defaultColor: string\n  allowMultipleColors: boolean\n  persistHighlights: boolean\n}\n\ninterface PositionInfo {\n  pageContainer: HTMLElement\n  textLayer: HTMLElement | null\n  containerRect: DOMRect\n  textLayerRect: DOMRect | null\n  scrollOffset: { x: number; y: number }\n}\n\nexport class HighlightEngine {\n  private highlights: Map<string, Highlight> = new Map()\n  private highlightElements: Map<string, HTMLElement> = new Map()\n  private scale: number = 1.0\n  private options: HighlightOptions\n\n  constructor(options: HighlightOptions) {\n    this.options = options\n    console.log('HighlightEngine initialized with options:', options)\n  }\n\n  addHighlight(highlight: Highlight): void {\n    this.highlights.set(highlight.id, highlight)\n    this.renderHighlight(highlight)\n  }\n\n  removeHighlight(id: string): void {\n    this.highlights.delete(id)\n    const element = this.highlightElements.get(id)\n    if (element) {\n      element.remove()\n      this.highlightElements.delete(id)\n    }\n  }\n\n  clearHighlights(): void {\n    this.highlights.clear()\n    this.highlightElements.forEach(element => element.remove())\n    this.highlightElements.clear()\n  }\n\n  updateScale(scale: number): void {\n    this.scale = scale\n    // Re-render all highlights with new scale\n    this.highlights.forEach(highlight => this.renderHighlight(highlight))\n  }\n\n  getHighlights(): Highlight[] {\n    return Array.from(this.highlights.values())\n  }\n\n  getHighlightById(id: string): Highlight | undefined {\n    return this.highlights.get(id)\n  }\n\n  destroy(): void {\n    this.clearHighlights()\n  }\n\n  /**\n   * Handle viewport changes (scroll, resize) to maintain highlight accuracy\n   */\n  public handleViewportChange(): void {\n    // Re-render all highlights to account for viewport changes\n    this.highlights.forEach(highlight => this.renderHighlight(highlight))\n  }\n\n  /**\n   * Optimize highlight rendering by only updating visible highlights\n   */\n  public updateVisibleHighlights(): void {\n    const viewportRect = {\n      top: window.scrollY,\n      bottom: window.scrollY + window.innerHeight,\n      left: window.scrollX,\n      right: window.scrollX + window.innerWidth\n    }\n\n    this.highlights.forEach((highlight, id) => {\n      const element = this.highlightElements.get(id)\n      if (element) {\n        const elementRect = element.getBoundingClientRect()\n        const isVisible = !(\n          elementRect.bottom < viewportRect.top ||\n          elementRect.top > viewportRect.bottom ||\n          elementRect.right < viewportRect.left ||\n          elementRect.left > viewportRect.right\n        )\n\n        // Only re-render visible highlights for performance\n        if (isVisible) {\n          this.renderHighlight(highlight)\n        }\n      }\n    })\n  }\n\n  /**\n   * Get comprehensive positioning information for a page\n   */\n  private getPositionInfo(pageNumber: number): PositionInfo | null {\n    const pageContainer = document.querySelector(\n      `[data-page-number=\"${pageNumber}\"]`\n    ) as HTMLElement\n    \n    if (!pageContainer) return null\n\n    // Try multiple selectors for text layer (different PDF libraries use different classes)\n    const textLayer = pageContainer.querySelector('.textLayer') as HTMLElement ||\n                     pageContainer.querySelector('.react-pdf__Page__textContent') as HTMLElement ||\n                     pageContainer.querySelector('.salina-pdf-text-layer') as HTMLElement\n\n    const containerRect = pageContainer.getBoundingClientRect()\n    const textLayerRect = textLayer?.getBoundingClientRect() || null\n\n    // Get scroll offset from the PDF viewer container\n    const viewerContainer = pageContainer.closest('.salina-pdf-viewer, .pdf-container, .pdf-viewer') as HTMLElement\n    const scrollOffset = {\n      x: viewerContainer?.scrollLeft || 0,\n      y: viewerContainer?.scrollTop || 0\n    }\n\n    return {\n      pageContainer,\n      textLayer,\n      containerRect,\n      textLayerRect,\n      scrollOffset\n    }\n  }\n\n  /**\n   * Calculate accurate highlight position with proper coordinate transformation\n   */\n  private renderHighlight(highlight: Highlight): void {\n    // Remove existing element if it exists\n    const existingElement = this.highlightElements.get(highlight.id)\n    if (existingElement) {\n      existingElement.remove()\n    }\n\n    const positionInfo = this.getPositionInfo(highlight.pageNumber)\n    if (!positionInfo) return\n\n    const { pageContainer, textLayer, containerRect, textLayerRect, scrollOffset } = positionInfo\n\n    // Create highlight element\n    const highlightElement = document.createElement('div')\n    highlightElement.className = 'salina-highlight'\n    highlightElement.setAttribute('data-highlight-id', highlight.id)\n    highlightElement.title = highlight.text\n    \n    // Calculate positioning with proper coordinate system and viewport compensation\n    // Highlights should be positioned relative to the page container\n    // The stored coordinates are already normalized to the page coordinate system\n    const scaledPosition = {\n      x: highlight.position.x * this.scale,\n      y: highlight.position.y * this.scale,\n      width: highlight.position.width * this.scale,\n      height: highlight.position.height * this.scale\n    }\n\n    // Apply styles with accurate positioning\n    Object.assign(highlightElement.style, {\n      position: 'absolute',\n      left: `${scaledPosition.x}px`,\n      top: `${scaledPosition.y}px`,\n      width: `${scaledPosition.width}px`,\n      height: `${scaledPosition.height}px`,\n      backgroundColor: highlight.color,\n      pointerEvents: 'auto',\n      borderRadius: '2px',\n      zIndex: '10',\n      mixBlendMode: 'multiply',\n      opacity: '0.4',\n      transition: 'opacity 0.2s ease, transform 0.2s ease',\n      cursor: 'pointer',\n      // Add a subtle outline to improve visibility\n      outline: '1px solid transparent',\n      boxSizing: 'border-box'\n    })\n\n    // Enhanced interaction handlers\n    highlightElement.addEventListener('click', (e) => {\n      e.stopPropagation()\n      this.handleHighlightClick(highlight)\n    })\n\n    highlightElement.addEventListener('mouseenter', () => {\n      highlightElement.style.opacity = '0.6'\n      highlightElement.style.transform = 'scale(1.01)'\n      highlightElement.style.outline = '1px solid rgba(0, 123, 255, 0.3)'\n    })\n\n    highlightElement.addEventListener('mouseleave', () => {\n      highlightElement.style.opacity = '0.4'\n      highlightElement.style.transform = 'scale(1)'\n      highlightElement.style.outline = '1px solid transparent'\n    })\n\n    // Add to page container\n    pageContainer.appendChild(highlightElement)\n    this.highlightElements.set(highlight.id, highlightElement)\n  }\n\n  /**\n   * Create highlight from text selection with accurate coordinate calculation\n   */\n  public createHighlightFromSelection(\n    selection: Selection,\n    pageNumber: number,\n    color: string = this.options.defaultColor\n  ): Highlight[] | null {\n    if (!selection.rangeCount) return null\n\n    const range = selection.getRangeAt(0)\n    const text = selection.toString().trim()\n    if (!text) return null\n\n    const positionInfo = this.getPositionInfo(pageNumber)\n    if (!positionInfo) return null\n\n    const { pageContainer, containerRect } = positionInfo\n    const rects = range.getClientRects()\n    const highlights: Highlight[] = []\n\n    Array.from(rects).forEach((rect, index) => {\n      if (rect.width > 0 && rect.height > 0) {\n        // Calculate coordinates relative to the page container\n        const relativeX = rect.left - containerRect.left\n        const relativeY = rect.top - containerRect.top\n\n        // Store coordinates normalized by scale (so they remain consistent across zoom levels)\n        const normalizedPosition = {\n          x: relativeX / this.scale,\n          y: relativeY / this.scale,\n          width: rect.width / this.scale,\n          height: rect.height / this.scale\n        }\n\n        const highlight: Highlight = {\n          id: this.generateHighlightId(),\n          text,\n          color,\n          position: normalizedPosition,\n          pageNumber,\n          timestamp: Date.now()\n        }\n\n        highlights.push(highlight)\n        this.addHighlight(highlight)\n      }\n    })\n\n    return highlights.length > 0 ? highlights : null\n  }\n\n  private generateHighlightId(): string {\n    return `highlight_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private handleHighlightClick(highlight: Highlight): void {\n    // Emit custom event for highlight interaction\n    const event = new CustomEvent('salina:highlight:click', {\n      detail: { highlight },\n      bubbles: true\n    })\n    document.dispatchEvent(event)\n  }\n}","import type { SearchResult } from '../types'\n\nexport interface SearchOptions {\n  highlightColor: string\n  caseSensitive: boolean\n  wholeWords: boolean\n}\n\nexport interface TextContent {\n  pageNumber: number\n  items: Array<{\n    str: string\n    x: number\n    y: number\n    width: number\n    height: number\n  }>\n}\n\nexport class SearchEngine {\n  private searchResults: SearchResult[] = []\n  private searchElements: HTMLElement[] = []\n  private options: SearchOptions\n\n  constructor(options: SearchOptions) {\n    this.options = options\n  }\n\n  search(query: string, textContent: TextContent[]): SearchResult[] {\n    this.clearResults()\n    \n    if (!query.trim()) return []\n\n    const results: SearchResult[] = []\n    let globalIndex = 0\n    \n    // Optimize search by preprocessing query once\n    const searchQuery = this.options.caseSensitive ? query : query.toLowerCase()\n    const regex = this.options.wholeWords ? \n      new RegExp(`\\\\b${this.escapeRegExp(searchQuery)}\\\\b`, 'g') : null\n\n    textContent.forEach(pageContent => {\n      pageContent.items.forEach(item => {\n        // Skip empty items early\n        if (!item.str.trim()) return\n        \n        const text = this.options.caseSensitive ? item.str : item.str.toLowerCase()\n        const indices = this.findMatchIndices(text, searchQuery, regex)\n\n        indices.forEach(index => {\n          results.push({\n            pageNumber: pageContent.pageNumber,\n            text: item.str.substr(index, query.length),\n            position: {\n              x: item.x,\n              y: item.y,\n              width: item.width,\n              height: item.height\n            },\n            textIndex: globalIndex,\n            context: this.getContext(item.str, index, query.length)\n          })\n          globalIndex++\n        })\n      })\n    })\n\n    this.searchResults = results\n    this.renderSearchResultsOptimized()\n    return results\n  }\n\n  private findMatchIndices(text: string, searchQuery: string, regex: RegExp | null): number[] {\n    const indices: number[] = []\n    \n    if (regex) {\n      regex.lastIndex = 0 // Reset regex state\n      let match\n      while ((match = regex.exec(text)) !== null) {\n        indices.push(match.index)\n      }\n    } else {\n      let index = text.indexOf(searchQuery)\n      while (index !== -1) {\n        indices.push(index)\n        index = text.indexOf(searchQuery, index + 1)\n      }\n    }\n    \n    return indices\n  }\n\n  clearResults(): void {\n    this.searchResults = []\n    this.clearSearchHighlights()\n  }\n\n  getResults(): SearchResult[] {\n    return this.searchResults\n  }\n\n  destroy(): void {\n    this.clearResults()\n  }\n\n\n  private renderSearchResultsOptimized(): void {\n    // Group results by page for batch DOM operations\n    const resultsByPage = new Map<number, SearchResult[]>()\n    \n    this.searchResults.forEach((result, index) => {\n      if (!resultsByPage.has(result.pageNumber)) {\n        resultsByPage.set(result.pageNumber, [])\n      }\n      resultsByPage.get(result.pageNumber)!.push({ ...result, originalIndex: index } as any)\n    })\n\n    // Render highlights for each page in batch\n    resultsByPage.forEach((pageResults, pageNumber) => {\n      this.renderPageHighlights(pageNumber, pageResults)\n    })\n  }\n\n  private renderPageHighlights(pageNumber: number, results: any[]): void {\n    const pageContainer = document.querySelector(\n      `[data-page-number=\"${pageNumber}\"]`\n    ) as HTMLElement\n    \n    if (!pageContainer) return\n\n    const fragment = document.createDocumentFragment()\n    \n    results.forEach(result => {\n      const highlightElement = document.createElement('div')\n      highlightElement.className = 'salina-search-highlight'\n      highlightElement.setAttribute('data-search-index', result.originalIndex.toString())\n      \n      // Use CSS class for styling instead of inline styles for better performance\n      highlightElement.style.cssText = `\n        position: absolute;\n        left: ${result.position.x}px;\n        top: ${result.position.y}px;\n        width: ${result.position.width}px;\n        height: ${result.position.height}px;\n        background-color: ${this.options.highlightColor};\n        pointer-events: none;\n        border-radius: 2px;\n        z-index: 15;\n      `\n\n      fragment.appendChild(highlightElement)\n      this.searchElements.push(highlightElement)\n    })\n    \n    pageContainer.appendChild(fragment)\n  }\n\n  private clearSearchHighlights(): void {\n    this.searchElements.forEach(element => element.remove())\n    this.searchElements = []\n  }\n\n  private getContext(text: string, index: number, length: number): string {\n    const contextLength = 50\n    const start = Math.max(0, index - contextLength)\n    const end = Math.min(text.length, index + length + contextLength)\n    \n    let context = text.substring(start, end)\n    \n    if (start > 0) context = '...' + context\n    if (end < text.length) context = context + '...'\n    \n    return context\n  }\n\n  private escapeRegExp(string: string): string {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n  }\n\n  highlightSearchResult(index: number): void {\n    // Remove previous highlighting\n    this.searchElements.forEach(el => el.classList.remove('current'))\n    \n    // Highlight current result\n    const element = this.searchElements[index]\n    if (element) {\n      element.classList.add('current')\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n  }\n}","import type { SalinaPDFViewerOptions, PDFPage } from '../types'\nimport type { TextContent } from '../search/SearchEngine'\n\n// PDF.js types and declarations\ninterface PDFJSLib {\n  getDocument: (src: any) => any\n  GlobalWorkerOptions: {\n    workerSrc: string\n  }\n  Util: {\n    transform: (matrix1: number[], matrix2: number[]) => number[]\n  }\n}\n\n// Global PDF.js reference\nlet pdfjsLib: PDFJSLib | null = null\n\n// Load PDF.js dynamically\nfunction loadPDFJS(): Promise<PDFJSLib> {\n  return new Promise((resolve, reject) => {\n    if (pdfjsLib) {\n      resolve(pdfjsLib)\n      return\n    }\n\n    // Check if already loaded globally\n    if (typeof window !== 'undefined' && (window as any).pdfjsLib) {\n      pdfjsLib = (window as any).pdfjsLib\n      // Setup worker if not already set\n      if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = \n          'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js'\n      }\n      resolve(pdfjsLib)\n      return\n    }\n\n    // Try to load from CDN\n    const script = document.createElement('script')\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js'\n    script.onload = () => {\n      if ((window as any).pdfjsLib) {\n        pdfjsLib = (window as any).pdfjsLib\n        // Setup worker\n        pdfjsLib!.GlobalWorkerOptions.workerSrc = \n          'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js'\n        resolve(pdfjsLib!)\n      } else {\n        reject(new Error('PDF.js failed to load'))\n      }\n    }\n    script.onerror = () => reject(new Error('Failed to load PDF.js script'))\n    document.head.appendChild(script)\n  })\n}\n\nexport class PDFRenderer {\n  private container: HTMLElement\n  private options: Required<SalinaPDFViewerOptions>\n  private pdfDocument: any = null\n  private pages: Map<number, PDFPage> = new Map()\n  private scale: number = 1.0\n  private textContent: TextContent[] = []\n\n  constructor(container: HTMLElement, options: Required<SalinaPDFViewerOptions>) {\n    this.container = container\n    this.options = options\n    this.setupPDFWorker()\n  }\n\n  async loadDocument(file: File | string | ArrayBuffer): Promise<number> {\n    try {\n      // Ensure PDF.js is loaded\n      const pdfjs = await loadPDFJS()\n      \n      // Convert file to appropriate format for PDF.js\n      let data: any\n      \n      if (file instanceof File) {\n        data = await this.fileToArrayBuffer(file)\n      } else if (typeof file === 'string') {\n        // URL or base64\n        data = file\n      } else {\n        data = file\n      }\n\n      const loadingTask = pdfjs.getDocument(data)\n      this.pdfDocument = await loadingTask.promise\n      \n      // Extract text content for search\n      await this.extractTextContent()\n      \n      // Render all pages\n      await this.renderAllPages()\n      \n      return this.pdfDocument.numPages\n      \n    } catch (error) {\n      throw new Error(`Failed to load PDF: ${error}`)\n    }\n  }\n\n  async renderAllPages(): Promise<void> {\n    if (!this.pdfDocument) return\n\n    // Use request animation frame to prevent blocking UI\n    await new Promise(resolve => requestAnimationFrame(resolve))\n\n    const fragment = document.createDocumentFragment()\n    \n    for (let pageNum = 1; pageNum <= this.pdfDocument.numPages; pageNum++) {\n      const pageElement = await this.renderPage(pageNum)\n      fragment.appendChild(pageElement)\n      \n      // Yield control every 3 pages to prevent blocking\n      if (pageNum % 3 === 0) {\n        await new Promise(resolve => setTimeout(resolve, 0))\n      }\n    }\n    \n    // Clear container and add all pages\n    this.container.innerHTML = ''\n    this.container.appendChild(fragment)\n  }\n\n  async renderPage(pageNumber: number): Promise<HTMLElement> {\n    if (!pdfjsLib) {\n      await loadPDFJS()\n    }\n\n    const page = await this.pdfDocument.getPage(pageNumber)\n    const viewport = page.getViewport({ scale: this.scale })\n    \n    // Create page container\n    const pageContainer = document.createElement('div')\n    pageContainer.className = 'salina-pdf-page'\n    pageContainer.setAttribute('data-page-number', pageNumber.toString())\n    pageContainer.style.cssText = `\n      position: relative;\n      display: inline-block;\n      margin: 10px;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      background: white;\n    `\n    \n    // Create and setup canvas\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')!\n    canvas.width = viewport.width\n    canvas.height = viewport.height\n    canvas.style.display = 'block'\n    \n    pageContainer.appendChild(canvas)\n    \n    // Render PDF page\n    const renderTask = page.render({\n      canvasContext: context,\n      viewport: viewport\n    })\n    await renderTask.promise\n    \n    // Create text layer if enabled\n    let textLayer: HTMLElement | null = null\n    if (this.options.features.search || this.options.features.highlighting) {\n      textLayer = await this.createTextLayer(page, viewport, pageContainer)\n    }\n    \n    // Store page info\n    const pdfPage: PDFPage = {\n      pageNumber,\n      canvas,\n      textLayer: textLayer!,\n      scale: this.scale,\n      viewport\n    }\n    \n    this.pages.set(pageNumber, pdfPage)\n    return pageContainer\n  }\n\n  async createTextLayer(page: any, viewport: any, container: HTMLElement): Promise<HTMLElement> {\n    if (!pdfjsLib) {\n      await loadPDFJS()\n    }\n\n    const textContent = await page.getTextContent()\n    \n    const textLayer = document.createElement('div')\n    textLayer.className = 'salina-pdf-text-layer'\n    textLayer.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: auto;\n      user-select: text;\n    `\n    \n    // Render text items\n    textContent.items.forEach((item: any) => {\n      const pdfjs = pdfjsLib!\n      const tx = pdfjs.Util.transform(\n        pdfjs.Util.transform(viewport.transform, item.transform),\n        [1, 0, 0, -1, 0, 0]\n      )\n      \n      const textElement = document.createElement('span')\n      textElement.textContent = item.str\n      textElement.style.cssText = `\n        position: absolute;\n        left: ${tx[4]}px;\n        top: ${tx[5]}px;\n        font-size: ${Math.sqrt(tx[0] * tx[0] + tx[1] * tx[1])}px;\n        font-family: sans-serif;\n        pointer-events: auto;\n        user-select: text;\n      `\n      \n      textLayer.appendChild(textElement)\n    })\n    \n    container.appendChild(textLayer)\n    return textLayer\n  }\n\n  setScale(scale: number): void {\n    this.scale = scale\n    this.updatePageScale()\n  }\n\n  private updatePageScale(): void {\n    // Optimize by only updating visible pages when possible\n    if (this.isInViewport()) {\n      this.renderVisiblePages()\n    } else {\n      this.renderAllPages()\n    }\n  }\n\n  private renderVisiblePages(): void {\n    const visiblePages = this.getVisiblePages()\n    visiblePages.forEach(pageNum => {\n      const pageElement = this.container.querySelector(`[data-page-number=\"${pageNum}\"]`) as HTMLElement\n      if (pageElement) {\n        this.updatePageElement(pageElement, pageNum)\n      }\n    })\n  }\n\n  private getVisiblePages(): number[] {\n    const containerRect = this.container.getBoundingClientRect()\n    const visiblePages: number[] = []\n    \n    this.pages.forEach((_, pageNum) => {\n      const pageElement = this.container.querySelector(`[data-page-number=\"${pageNum}\"]`) as HTMLElement\n      if (pageElement) {\n        const pageRect = pageElement.getBoundingClientRect()\n        if (pageRect.bottom >= containerRect.top && pageRect.top <= containerRect.bottom) {\n          visiblePages.push(pageNum)\n        }\n      }\n    })\n    \n    return visiblePages\n  }\n\n  private async updatePageElement(pageElement: HTMLElement, pageNumber: number): Promise<void> {\n    const page = await this.pdfDocument.getPage(pageNumber)\n    const viewport = page.getViewport({ scale: this.scale })\n    \n    const canvas = pageElement.querySelector('canvas') as HTMLCanvasElement\n    if (canvas) {\n      canvas.width = viewport.width\n      canvas.height = viewport.height\n      \n      const context = canvas.getContext('2d')!\n      const renderTask = page.render({\n        canvasContext: context,\n        viewport: viewport\n      })\n      await renderTask.promise\n    }\n  }\n\n  private isInViewport(): boolean {\n    return this.container.clientHeight > 0 && this.container.clientWidth > 0\n  }\n\n  goToPage(pageNumber: number): void {\n    const pageElement = this.container.querySelector(\n      `[data-page-number=\"${pageNumber}\"]`\n    ) as HTMLElement\n    \n    if (pageElement) {\n      pageElement.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n  }\n\n  calculateFitToWidthScale(): number {\n    if (!this.pdfDocument || this.pages.size === 0) return 1.0\n    \n    const firstPage = this.pages.values().next().value as PDFPage\n    const containerWidth = this.container.clientWidth - 40 // margin\n    const pageWidth = firstPage.viewport.width\n    \n    return containerWidth / pageWidth\n  }\n\n  calculateFitToHeightScale(): number {\n    if (!this.pdfDocument || this.pages.size === 0) return 1.0\n    \n    const firstPage = this.pages.values().next().value as PDFPage\n    const containerHeight = this.container.clientHeight - 40 // margin\n    const pageHeight = firstPage.viewport.height\n    \n    return containerHeight / pageHeight\n  }\n\n  getTextContent(): TextContent[] {\n    return this.textContent\n  }\n\n  handleResize(): void {\n    // Re-render if fit-to-width/height is enabled\n    if (this.options.zoom.fitToWidth) {\n      const scale = this.calculateFitToWidthScale()\n      this.setScale(scale)\n    } else if (this.options.zoom.fitToHeight) {\n      const scale = this.calculateFitToHeightScale()\n      this.setScale(scale)\n    }\n  }\n\n  destroy(): void {\n    if (this.pdfDocument) {\n      this.pdfDocument.destroy()\n    }\n    this.pages.clear()\n    this.textContent = []\n  }\n\n  private async extractTextContent(): Promise<void> {\n    if (!this.pdfDocument) return\n    \n    this.textContent = []\n    \n    // Process pages in chunks to avoid blocking the main thread\n    const chunkSize = 5\n    const totalPages = this.pdfDocument.numPages\n    \n    for (let startPage = 1; startPage <= totalPages; startPage += chunkSize) {\n      const endPage = Math.min(startPage + chunkSize - 1, totalPages)\n      \n      const chunkPromises = []\n      for (let pageNum = startPage; pageNum <= endPage; pageNum++) {\n        chunkPromises.push(this.extractPageTextContent(pageNum))\n      }\n      \n      const chunkResults = await Promise.all(chunkPromises)\n      this.textContent.push(...chunkResults)\n      \n      // Yield control between chunks\n      if (endPage < totalPages) {\n        await new Promise(resolve => setTimeout(resolve, 0))\n      }\n    }\n  }\n\n  private async extractPageTextContent(pageNum: number): Promise<TextContent> {\n    if (!pdfjsLib) {\n      await loadPDFJS()\n    }\n\n    const page = await this.pdfDocument.getPage(pageNum)\n    const textContent = await page.getTextContent()\n    const viewport = page.getViewport({ scale: 1.0 })\n    \n    return {\n      pageNumber: pageNum,\n      items: textContent.items.map((item: any) => {\n        const pdfjs = pdfjsLib!\n        const tx = pdfjs.Util.transform(\n          pdfjs.Util.transform(viewport.transform, item.transform),\n          [1, 0, 0, -1, 0, 0]\n        )\n        \n        return {\n          str: item.str,\n          x: tx[4],\n          y: tx[5],\n          width: item.width,\n          height: item.height\n        }\n      })\n    }\n  }\n\n  private setupPDFWorker(): void {\n    // PDF.js worker will be setup in loadPDFJS function\n    // This ensures proper initialization order\n  }\n\n  private async fileToArrayBuffer(file: File): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => resolve(reader.result as ArrayBuffer)\n      reader.onerror = () => reject(reader.error)\n      reader.readAsArrayBuffer(file)\n    })\n  }\n}","/**\n * Generate a unique ID for highlights and other entities\n */\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9) + Date.now().toString(36)\n}\n\n/**\n * Debounce function calls\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: any\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => func(...args), wait)\n  }\n}\n\n/**\n * Throttle function calls\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args)\n      inThrottle = true\n      setTimeout(() => inThrottle = false, limit)\n    }\n  }\n}\n\n/**\n * Clamp a number between min and max values\n */\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max)\n}\n\n/**\n * Check if an element is in viewport\n */\nexport function isInViewport(element: HTMLElement): boolean {\n  const rect = element.getBoundingClientRect()\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  )\n}\n\n/**\n * Get the bounding rect of a text range\n */\nexport function getRangeRect(range: Range): DOMRect {\n  const rects = range.getClientRects()\n  if (rects.length === 0) {\n    throw new Error('Range has no client rects')\n  }\n  \n  // Get the combined bounding rect\n  let left = Infinity\n  let top = Infinity\n  let right = -Infinity\n  let bottom = -Infinity\n  \n  for (let i = 0; i < rects.length; i++) {\n    const rect = rects[i]\n    left = Math.min(left, rect.left)\n    top = Math.min(top, rect.top)\n    right = Math.max(right, rect.right)\n    bottom = Math.max(bottom, rect.bottom)\n  }\n  \n  return new DOMRect(left, top, right - left, bottom - top)\n}\n\n/**\n * Download a blob as a file\n */\nexport function downloadBlob(blob: Blob, filename: string): void {\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n}\n\n/**\n * Convert data to blob and download\n */\nexport function downloadData(data: string, filename: string, mimeType: string = 'application/json'): void {\n  const blob = new Blob([data], { type: mimeType })\n  downloadBlob(blob, filename)\n}\n\n/**\n * Load a file and return its content as text\n */\nexport function loadFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = () => resolve(reader.result as string)\n    reader.onerror = () => reject(reader.error)\n    reader.readAsText(file)\n  })\n}\n\n/**\n * Deep merge two objects\n */\nexport function deepMerge<T extends Record<string, any>>(target: T, source: Partial<T>): T {\n  const result = { ...target }\n  \n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const sourceValue = source[key]\n      const targetValue = result[key]\n      \n      if (\n        sourceValue && \n        typeof sourceValue === 'object' && \n        !Array.isArray(sourceValue) &&\n        targetValue &&\n        typeof targetValue === 'object' &&\n        !Array.isArray(targetValue)\n      ) {\n        result[key] = deepMerge(targetValue, sourceValue)\n      } else {\n        result[key] = sourceValue as any\n      }\n    }\n  }\n  \n  return result\n}\n\n/**\n * Check if code is running in browser environment\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined'\n}\n\n/**\n * Check if touch events are supported\n */\nexport function isTouchDevice(): boolean {\n  return isBrowser() && ('ontouchstart' in window || navigator.maxTouchPoints > 0)\n}\n\n/**\n * Format file size in human readable format\n */\nexport function formatFileSize(bytes: number): string {\n  const units = ['B', 'KB', 'MB', 'GB']\n  let size = bytes\n  let unitIndex = 0\n  \n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024\n    unitIndex++\n  }\n  \n  return `${size.toFixed(1)} ${units[unitIndex]}`\n}\n\n/**\n * Create a promise that resolves after a delay\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Retry a function with exponential backoff\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  maxAttempts: number = 3,\n  baseDelay: number = 1000\n): Promise<T> {\n  let lastError: Error\n  \n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn()\n    } catch (error) {\n      lastError = error as Error\n      if (attempt === maxAttempts) break\n      \n      const delayTime = baseDelay * Math.pow(2, attempt - 1)\n      await delay(delayTime)\n    }\n  }\n  \n  throw lastError!\n}","// Performance utilities for the PDF viewer\nexport class PerformanceOptimizer {\n  private static rafId: number | null = null\n  private static taskQueue: (() => void)[] = []\n  \n  /**\n   * Debounce function calls to improve performance\n   */\n  static debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: any\n    \n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => func(...args), wait)\n    }\n  }\n  \n  /**\n   * Throttle function calls to limit execution frequency\n   */\n  static throttle<T extends (...args: any[]) => any>(\n    func: T,\n    limit: number\n  ): (...args: Parameters<T>) => void {\n    let inThrottle: boolean\n    \n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args)\n        inThrottle = true\n        setTimeout(() => inThrottle = false, limit)\n      }\n    }\n  }\n  \n  /**\n   * Queue tasks to be executed on next animation frame\n   */\n  static queueTask(task: () => void): void {\n    this.taskQueue.push(task)\n    \n    if (this.rafId === null) {\n      this.rafId = requestAnimationFrame(() => {\n        this.processTasks()\n        this.rafId = null\n      })\n    }\n  }\n  \n  private static processTasks(): void {\n    const tasks = this.taskQueue.splice(0)\n    tasks.forEach(task => {\n      try {\n        task()\n      } catch (error) {\n        console.error('Task execution error:', error)\n      }\n    })\n  }\n  \n  /**\n   * Create a cancellable timeout\n   */\n  static createCancellableTimeout(\n    callback: () => void,\n    delay: number\n  ): { cancel: () => void } {\n    const timeoutId = setTimeout(callback, delay)\n    \n    return {\n      cancel: () => clearTimeout(timeoutId)\n    }\n  }\n  \n  /**\n   * Measure and log performance metrics\n   */\n  static measurePerformance<T>(\n    name: string,\n    fn: () => T\n  ): T {\n    const start = performance.now()\n    const result = fn()\n    const end = performance.now()\n    \n    console.log(`${name} took ${end - start} milliseconds`)\n    return result\n  }\n  \n  /**\n   * Create a performance observer for monitoring\n   */\n  static createPerformanceObserver(\n    callback: (entries: PerformanceEntry[]) => void\n  ): PerformanceObserver | null {\n    if (typeof PerformanceObserver === 'undefined') {\n      return null\n    }\n    \n    const observer = new PerformanceObserver((list) => {\n      callback(list.getEntries())\n    })\n    \n    try {\n      observer.observe({ entryTypes: ['measure', 'navigation', 'paint'] } as any)\n      return observer\n    } catch (error) {\n      console.warn('Performance observer not supported:', error)\n      return null\n    }\n  }\n}\n\n/**\n * Memory management utilities\n */\nexport class MemoryManager {\n  private static cache = new Map<string, any>()\n  private static maxCacheSize = 50\n  \n  /**\n   * Store item in cache with automatic cleanup\n   */\n  static setCache(key: string, value: any): void {\n    if (this.cache.size >= this.maxCacheSize) {\n      const firstKey = this.cache.keys().next().value\n      this.cache.delete(firstKey)\n    }\n    \n    this.cache.set(key, value)\n  }\n  \n  /**\n   * Get item from cache\n   */\n  static getCache(key: string): any {\n    return this.cache.get(key) || null\n  }\n  \n  /**\n   * Clear cache\n   */\n  static clearCache(): void {\n    this.cache.clear()\n  }\n  \n  /**\n   * Get current memory usage (if available)\n   */\n  static getMemoryUsage(): any {\n    if ('memory' in performance) {\n      return (performance as any).memory\n    }\n    return null\n  }\n  \n  /**\n   * Force garbage collection (development only)\n   */\n  static forceGC(): void {\n    if ('gc' in window && typeof (window as any).gc === 'function') {\n      (window as any).gc()\n    }\n  }\n}\n\n/**\n * Virtual scrolling utilities for large PDF documents\n */\nexport class VirtualScrolling {\n  private container: HTMLElement\n  private itemHeight: number\n  private visibleRange: { start: number; end: number } = { start: 0, end: 0 }\n  private totalItems: number = 0\n  \n  constructor(container: HTMLElement, itemHeight: number) {\n    this.container = container\n    this.itemHeight = itemHeight\n    console.log('VirtualScrolling initialized for container:', container.tagName)\n  }\n  \n  /**\n   * Calculate visible range based on scroll position\n   */\n  calculateVisibleRange(scrollTop: number, containerHeight: number): { start: number; end: number } {\n    const start = Math.floor(scrollTop / this.itemHeight)\n    const visibleCount = Math.ceil(containerHeight / this.itemHeight)\n    const end = Math.min(start + visibleCount + 1, this.totalItems - 1)\n    \n    this.visibleRange = { start: Math.max(0, start - 1), end }\n    return this.visibleRange\n  }\n  \n  /**\n   * Get current visible range\n   */\n  getVisibleRange(): { start: number; end: number } {\n    return this.visibleRange\n  }\n  \n  /**\n   * Set total number of items\n   */\n  setTotalItems(count: number): void {\n    this.totalItems = count\n  }\n  \n  /**\n   * Get total height of all items\n   */\n  getTotalHeight(): number {\n    return this.totalItems * this.itemHeight\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,2BAA6B;;;ACgBtB,IAAM,kBAAN,MAAsB;AAAA,EAM3B,YAAY,SAA2B;AALvC,SAAQ,aAAqC,oBAAI,IAAI;AACrD,SAAQ,oBAA8C,oBAAI,IAAI;AAC9D,SAAQ,QAAgB;AAItB,SAAK,UAAU;AACf,YAAQ,IAAI,6CAA6C,OAAO;AAAA,EAClE;AAAA,EAEA,aAAa,WAA4B;AACvC,SAAK,WAAW,IAAI,UAAU,IAAI,SAAS;AAC3C,SAAK,gBAAgB,SAAS;AAAA,EAChC;AAAA,EAEA,gBAAgB,IAAkB;AAChC,SAAK,WAAW,OAAO,EAAE;AACzB,UAAM,UAAU,KAAK,kBAAkB,IAAI,EAAE;AAC7C,QAAI,SAAS;AACX,cAAQ,OAAO;AACf,WAAK,kBAAkB,OAAO,EAAE;AAAA,IAClC;AAAA,EACF;AAAA,EAEA,kBAAwB;AACtB,SAAK,WAAW,MAAM;AACtB,SAAK,kBAAkB,QAAQ,aAAW,QAAQ,OAAO,CAAC;AAC1D,SAAK,kBAAkB,MAAM;AAAA,EAC/B;AAAA,EAEA,YAAY,OAAqB;AAC/B,SAAK,QAAQ;AAEb,SAAK,WAAW,QAAQ,eAAa,KAAK,gBAAgB,SAAS,CAAC;AAAA,EACtE;AAAA,EAEA,gBAA6B;AAC3B,WAAO,MAAM,KAAK,KAAK,WAAW,OAAO,CAAC;AAAA,EAC5C;AAAA,EAEA,iBAAiB,IAAmC;AAClD,WAAO,KAAK,WAAW,IAAI,EAAE;AAAA,EAC/B;AAAA,EAEA,UAAgB;AACd,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAKO,uBAA6B;AAElC,SAAK,WAAW,QAAQ,eAAa,KAAK,gBAAgB,SAAS,CAAC;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA,EAKO,0BAAgC;AACrC,UAAM,eAAe;AAAA,MACnB,KAAK,OAAO;AAAA,MACZ,QAAQ,OAAO,UAAU,OAAO;AAAA,MAChC,MAAM,OAAO;AAAA,MACb,OAAO,OAAO,UAAU,OAAO;AAAA,IACjC;AAEA,SAAK,WAAW,QAAQ,CAAC,WAAW,OAAO;AACzC,YAAM,UAAU,KAAK,kBAAkB,IAAI,EAAE;AAC7C,UAAI,SAAS;AACX,cAAM,cAAc,QAAQ,sBAAsB;AAClD,cAAM,YAAY,EAChB,YAAY,SAAS,aAAa,OAClC,YAAY,MAAM,aAAa,UAC/B,YAAY,QAAQ,aAAa,QACjC,YAAY,OAAO,aAAa;AAIlC,YAAI,WAAW;AACb,eAAK,gBAAgB,SAAS;AAAA,QAChC;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,gBAAgB,YAAyC;AAC/D,UAAM,gBAAgB,SAAS;AAAA,MAC7B,sBAAsB,UAAU;AAAA,IAClC;AAEA,QAAI,CAAC,cAAe,QAAO;AAG3B,UAAM,YAAY,cAAc,cAAc,YAAY,KACzC,cAAc,cAAc,+BAA+B,KAC3D,cAAc,cAAc,wBAAwB;AAErE,UAAM,gBAAgB,cAAc,sBAAsB;AAC1D,UAAM,gBAAgB,WAAW,sBAAsB,KAAK;AAG5D,UAAM,kBAAkB,cAAc,QAAQ,iDAAiD;AAC/F,UAAM,eAAe;AAAA,MACnB,GAAG,iBAAiB,cAAc;AAAA,MAClC,GAAG,iBAAiB,aAAa;AAAA,IACnC;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,gBAAgB,WAA4B;AAElD,UAAM,kBAAkB,KAAK,kBAAkB,IAAI,UAAU,EAAE;AAC/D,QAAI,iBAAiB;AACnB,sBAAgB,OAAO;AAAA,IACzB;AAEA,UAAM,eAAe,KAAK,gBAAgB,UAAU,UAAU;AAC9D,QAAI,CAAC,aAAc;AAEnB,UAAM,EAAE,eAAe,WAAW,eAAe,eAAe,aAAa,IAAI;AAGjF,UAAM,mBAAmB,SAAS,cAAc,KAAK;AACrD,qBAAiB,YAAY;AAC7B,qBAAiB,aAAa,qBAAqB,UAAU,EAAE;AAC/D,qBAAiB,QAAQ,UAAU;AAKnC,UAAM,iBAAiB;AAAA,MACrB,GAAG,UAAU,SAAS,IAAI,KAAK;AAAA,MAC/B,GAAG,UAAU,SAAS,IAAI,KAAK;AAAA,MAC/B,OAAO,UAAU,SAAS,QAAQ,KAAK;AAAA,MACvC,QAAQ,UAAU,SAAS,SAAS,KAAK;AAAA,IAC3C;AAGA,WAAO,OAAO,iBAAiB,OAAO;AAAA,MACpC,UAAU;AAAA,MACV,MAAM,GAAG,eAAe,CAAC;AAAA,MACzB,KAAK,GAAG,eAAe,CAAC;AAAA,MACxB,OAAO,GAAG,eAAe,KAAK;AAAA,MAC9B,QAAQ,GAAG,eAAe,MAAM;AAAA,MAChC,iBAAiB,UAAU;AAAA,MAC3B,eAAe;AAAA,MACf,cAAc;AAAA,MACd,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA;AAAA,MAER,SAAS;AAAA,MACT,WAAW;AAAA,IACb,CAAC;AAGD,qBAAiB,iBAAiB,SAAS,CAAC,MAAM;AAChD,QAAE,gBAAgB;AAClB,WAAK,qBAAqB,SAAS;AAAA,IACrC,CAAC;AAED,qBAAiB,iBAAiB,cAAc,MAAM;AACpD,uBAAiB,MAAM,UAAU;AACjC,uBAAiB,MAAM,YAAY;AACnC,uBAAiB,MAAM,UAAU;AAAA,IACnC,CAAC;AAED,qBAAiB,iBAAiB,cAAc,MAAM;AACpD,uBAAiB,MAAM,UAAU;AACjC,uBAAiB,MAAM,YAAY;AACnC,uBAAiB,MAAM,UAAU;AAAA,IACnC,CAAC;AAGD,kBAAc,YAAY,gBAAgB;AAC1C,SAAK,kBAAkB,IAAI,UAAU,IAAI,gBAAgB;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA,EAKO,6BACL,WACA,YACA,QAAgB,KAAK,QAAQ,cACT;AACpB,QAAI,CAAC,UAAU,WAAY,QAAO;AAElC,UAAM,QAAQ,UAAU,WAAW,CAAC;AACpC,UAAM,OAAO,UAAU,SAAS,EAAE,KAAK;AACvC,QAAI,CAAC,KAAM,QAAO;AAElB,UAAM,eAAe,KAAK,gBAAgB,UAAU;AACpD,QAAI,CAAC,aAAc,QAAO;AAE1B,UAAM,EAAE,eAAe,cAAc,IAAI;AACzC,UAAM,QAAQ,MAAM,eAAe;AACnC,UAAM,aAA0B,CAAC;AAEjC,UAAM,KAAK,KAAK,EAAE,QAAQ,CAAC,MAAM,UAAU;AACzC,UAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,GAAG;AAErC,cAAM,YAAY,KAAK,OAAO,cAAc;AAC5C,cAAM,YAAY,KAAK,MAAM,cAAc;AAG3C,cAAM,qBAAqB;AAAA,UACzB,GAAG,YAAY,KAAK;AAAA,UACpB,GAAG,YAAY,KAAK;AAAA,UACpB,OAAO,KAAK,QAAQ,KAAK;AAAA,UACzB,QAAQ,KAAK,SAAS,KAAK;AAAA,QAC7B;AAEA,cAAM,YAAuB;AAAA,UAC3B,IAAI,KAAK,oBAAoB;AAAA,UAC7B;AAAA,UACA;AAAA,UACA,UAAU;AAAA,UACV;AAAA,UACA,WAAW,KAAK,IAAI;AAAA,QACtB;AAEA,mBAAW,KAAK,SAAS;AACzB,aAAK,aAAa,SAAS;AAAA,MAC7B;AAAA,IACF,CAAC;AAED,WAAO,WAAW,SAAS,IAAI,aAAa;AAAA,EAC9C;AAAA,EAEQ,sBAA8B;AACpC,WAAO,aAAa,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC;AAAA,EAC3E;AAAA,EAEQ,qBAAqB,WAA4B;AAEvD,UAAM,QAAQ,IAAI,YAAY,0BAA0B;AAAA,MACtD,QAAQ,EAAE,UAAU;AAAA,MACpB,SAAS;AAAA,IACX,CAAC;AACD,aAAS,cAAc,KAAK;AAAA,EAC9B;AACF;;;AChQO,IAAM,eAAN,MAAmB;AAAA,EAKxB,YAAY,SAAwB;AAJpC,SAAQ,gBAAgC,CAAC;AACzC,SAAQ,iBAAgC,CAAC;AAIvC,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,OAAe,aAA4C;AAChE,SAAK,aAAa;AAElB,QAAI,CAAC,MAAM,KAAK,EAAG,QAAO,CAAC;AAE3B,UAAM,UAA0B,CAAC;AACjC,QAAI,cAAc;AAGlB,UAAM,cAAc,KAAK,QAAQ,gBAAgB,QAAQ,MAAM,YAAY;AAC3E,UAAM,QAAQ,KAAK,QAAQ,aACzB,IAAI,OAAO,MAAM,KAAK,aAAa,WAAW,CAAC,OAAO,GAAG,IAAI;AAE/D,gBAAY,QAAQ,iBAAe;AACjC,kBAAY,MAAM,QAAQ,UAAQ;AAEhC,YAAI,CAAC,KAAK,IAAI,KAAK,EAAG;AAEtB,cAAM,OAAO,KAAK,QAAQ,gBAAgB,KAAK,MAAM,KAAK,IAAI,YAAY;AAC1E,cAAM,UAAU,KAAK,iBAAiB,MAAM,aAAa,KAAK;AAE9D,gBAAQ,QAAQ,WAAS;AACvB,kBAAQ,KAAK;AAAA,YACX,YAAY,YAAY;AAAA,YACxB,MAAM,KAAK,IAAI,OAAO,OAAO,MAAM,MAAM;AAAA,YACzC,UAAU;AAAA,cACR,GAAG,KAAK;AAAA,cACR,GAAG,KAAK;AAAA,cACR,OAAO,KAAK;AAAA,cACZ,QAAQ,KAAK;AAAA,YACf;AAAA,YACA,WAAW;AAAA,YACX,SAAS,KAAK,WAAW,KAAK,KAAK,OAAO,MAAM,MAAM;AAAA,UACxD,CAAC;AACD;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAED,SAAK,gBAAgB;AACrB,SAAK,6BAA6B;AAClC,WAAO;AAAA,EACT;AAAA,EAEQ,iBAAiB,MAAc,aAAqB,OAAgC;AAC1F,UAAM,UAAoB,CAAC;AAE3B,QAAI,OAAO;AACT,YAAM,YAAY;AAClB,UAAI;AACJ,cAAQ,QAAQ,MAAM,KAAK,IAAI,OAAO,MAAM;AAC1C,gBAAQ,KAAK,MAAM,KAAK;AAAA,MAC1B;AAAA,IACF,OAAO;AACL,UAAI,QAAQ,KAAK,QAAQ,WAAW;AACpC,aAAO,UAAU,IAAI;AACnB,gBAAQ,KAAK,KAAK;AAClB,gBAAQ,KAAK,QAAQ,aAAa,QAAQ,CAAC;AAAA,MAC7C;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,eAAqB;AACnB,SAAK,gBAAgB,CAAC;AACtB,SAAK,sBAAsB;AAAA,EAC7B;AAAA,EAEA,aAA6B;AAC3B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,UAAgB;AACd,SAAK,aAAa;AAAA,EACpB;AAAA,EAGQ,+BAAqC;AAE3C,UAAM,gBAAgB,oBAAI,IAA4B;AAEtD,SAAK,cAAc,QAAQ,CAAC,QAAQ,UAAU;AAC5C,UAAI,CAAC,cAAc,IAAI,OAAO,UAAU,GAAG;AACzC,sBAAc,IAAI,OAAO,YAAY,CAAC,CAAC;AAAA,MACzC;AACA,oBAAc,IAAI,OAAO,UAAU,EAAG,KAAK,EAAE,GAAG,QAAQ,eAAe,MAAM,CAAQ;AAAA,IACvF,CAAC;AAGD,kBAAc,QAAQ,CAAC,aAAa,eAAe;AACjD,WAAK,qBAAqB,YAAY,WAAW;AAAA,IACnD,CAAC;AAAA,EACH;AAAA,EAEQ,qBAAqB,YAAoB,SAAsB;AACrE,UAAM,gBAAgB,SAAS;AAAA,MAC7B,sBAAsB,UAAU;AAAA,IAClC;AAEA,QAAI,CAAC,cAAe;AAEpB,UAAM,WAAW,SAAS,uBAAuB;AAEjD,YAAQ,QAAQ,YAAU;AACxB,YAAM,mBAAmB,SAAS,cAAc,KAAK;AACrD,uBAAiB,YAAY;AAC7B,uBAAiB,aAAa,qBAAqB,OAAO,cAAc,SAAS,CAAC;AAGlF,uBAAiB,MAAM,UAAU;AAAA;AAAA,gBAEvB,OAAO,SAAS,CAAC;AAAA,eAClB,OAAO,SAAS,CAAC;AAAA,iBACf,OAAO,SAAS,KAAK;AAAA,kBACpB,OAAO,SAAS,MAAM;AAAA,4BACZ,KAAK,QAAQ,cAAc;AAAA;AAAA;AAAA;AAAA;AAMjD,eAAS,YAAY,gBAAgB;AACrC,WAAK,eAAe,KAAK,gBAAgB;AAAA,IAC3C,CAAC;AAED,kBAAc,YAAY,QAAQ;AAAA,EACpC;AAAA,EAEQ,wBAA8B;AACpC,SAAK,eAAe,QAAQ,aAAW,QAAQ,OAAO,CAAC;AACvD,SAAK,iBAAiB,CAAC;AAAA,EACzB;AAAA,EAEQ,WAAW,MAAc,OAAe,QAAwB;AACtE,UAAM,gBAAgB;AACtB,UAAM,QAAQ,KAAK,IAAI,GAAG,QAAQ,aAAa;AAC/C,UAAM,MAAM,KAAK,IAAI,KAAK,QAAQ,QAAQ,SAAS,aAAa;AAEhE,QAAI,UAAU,KAAK,UAAU,OAAO,GAAG;AAEvC,QAAI,QAAQ,EAAG,WAAU,QAAQ;AACjC,QAAI,MAAM,KAAK,OAAQ,WAAU,UAAU;AAE3C,WAAO;AAAA,EACT;AAAA,EAEQ,aAAa,QAAwB;AAC3C,WAAO,OAAO,QAAQ,uBAAuB,MAAM;AAAA,EACrD;AAAA,EAEA,sBAAsB,OAAqB;AAEzC,SAAK,eAAe,QAAQ,QAAM,GAAG,UAAU,OAAO,SAAS,CAAC;AAGhE,UAAM,UAAU,KAAK,eAAe,KAAK;AACzC,QAAI,SAAS;AACX,cAAQ,UAAU,IAAI,SAAS;AAC/B,cAAQ,eAAe,EAAE,UAAU,UAAU,OAAO,SAAS,CAAC;AAAA,IAChE;AAAA,EACF;AACF;;;AC/KA,IAAI,WAA4B;AAGhC,SAAS,YAA+B;AACtC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,UAAU;AACZ,cAAQ,QAAQ;AAChB;AAAA,IACF;AAGA,QAAI,OAAO,WAAW,eAAgB,OAAe,UAAU;AAC7D,iBAAY,OAAe;AAE3B,UAAI,CAAC,SAAS,oBAAoB,WAAW;AAC3C,iBAAS,oBAAoB,YAC3B;AAAA,MACJ;AACA,cAAQ,QAAQ;AAChB;AAAA,IACF;AAGA,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,MAAM;AACb,WAAO,SAAS,MAAM;AACpB,UAAK,OAAe,UAAU;AAC5B,mBAAY,OAAe;AAE3B,iBAAU,oBAAoB,YAC5B;AACF,gBAAQ,QAAS;AAAA,MACnB,OAAO;AACL,eAAO,IAAI,MAAM,uBAAuB,CAAC;AAAA,MAC3C;AAAA,IACF;AACA,WAAO,UAAU,MAAM,OAAO,IAAI,MAAM,8BAA8B,CAAC;AACvE,aAAS,KAAK,YAAY,MAAM;AAAA,EAClC,CAAC;AACH;AAEO,IAAM,cAAN,MAAkB;AAAA,EAQvB,YAAY,WAAwB,SAA2C;AAL/E,SAAQ,cAAmB;AAC3B,SAAQ,QAA8B,oBAAI,IAAI;AAC9C,SAAQ,QAAgB;AACxB,SAAQ,cAA6B,CAAC;AAGpC,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,MAAM,aAAa,MAAoD;AACrE,QAAI;AAEF,YAAM,QAAQ,MAAM,UAAU;AAG9B,UAAI;AAEJ,UAAI,gBAAgB,MAAM;AACxB,eAAO,MAAM,KAAK,kBAAkB,IAAI;AAAA,MAC1C,WAAW,OAAO,SAAS,UAAU;AAEnC,eAAO;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAEA,YAAM,cAAc,MAAM,YAAY,IAAI;AAC1C,WAAK,cAAc,MAAM,YAAY;AAGrC,YAAM,KAAK,mBAAmB;AAG9B,YAAM,KAAK,eAAe;AAE1B,aAAO,KAAK,YAAY;AAAA,IAE1B,SAAS,OAAO;AACd,YAAM,IAAI,MAAM,uBAAuB,KAAK,EAAE;AAAA,IAChD;AAAA,EACF;AAAA,EAEA,MAAM,iBAAgC;AACpC,QAAI,CAAC,KAAK,YAAa;AAGvB,UAAM,IAAI,QAAQ,aAAW,sBAAsB,OAAO,CAAC;AAE3D,UAAM,WAAW,SAAS,uBAAuB;AAEjD,aAAS,UAAU,GAAG,WAAW,KAAK,YAAY,UAAU,WAAW;AACrE,YAAM,cAAc,MAAM,KAAK,WAAW,OAAO;AACjD,eAAS,YAAY,WAAW;AAGhC,UAAI,UAAU,MAAM,GAAG;AACrB,cAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,CAAC,CAAC;AAAA,MACrD;AAAA,IACF;AAGA,SAAK,UAAU,YAAY;AAC3B,SAAK,UAAU,YAAY,QAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,WAAW,YAA0C;AACzD,QAAI,CAAC,UAAU;AACb,YAAM,UAAU;AAAA,IAClB;AAEA,UAAM,OAAO,MAAM,KAAK,YAAY,QAAQ,UAAU;AACtD,UAAM,WAAW,KAAK,YAAY,EAAE,OAAO,KAAK,MAAM,CAAC;AAGvD,UAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,kBAAc,YAAY;AAC1B,kBAAc,aAAa,oBAAoB,WAAW,SAAS,CAAC;AACpE,kBAAc,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,UAAM,UAAU,OAAO,WAAW,IAAI;AACtC,WAAO,QAAQ,SAAS;AACxB,WAAO,SAAS,SAAS;AACzB,WAAO,MAAM,UAAU;AAEvB,kBAAc,YAAY,MAAM;AAGhC,UAAM,aAAa,KAAK,OAAO;AAAA,MAC7B,eAAe;AAAA,MACf;AAAA,IACF,CAAC;AACD,UAAM,WAAW;AAGjB,QAAI,YAAgC;AACpC,QAAI,KAAK,QAAQ,SAAS,UAAU,KAAK,QAAQ,SAAS,cAAc;AACtE,kBAAY,MAAM,KAAK,gBAAgB,MAAM,UAAU,aAAa;AAAA,IACtE;AAGA,UAAM,UAAmB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO,KAAK;AAAA,MACZ;AAAA,IACF;AAEA,SAAK,MAAM,IAAI,YAAY,OAAO;AAClC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,gBAAgB,MAAW,UAAe,WAA8C;AAC5F,QAAI,CAAC,UAAU;AACb,YAAM,UAAU;AAAA,IAClB;AAEA,UAAM,cAAc,MAAM,KAAK,eAAe;AAE9C,UAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,cAAU,YAAY;AACtB,cAAU,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW1B,gBAAY,MAAM,QAAQ,CAAC,SAAc;AACvC,YAAM,QAAQ;AACd,YAAM,KAAK,MAAM,KAAK;AAAA,QACpB,MAAM,KAAK,UAAU,SAAS,WAAW,KAAK,SAAS;AAAA,QACvD,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;AAAA,MACpB;AAEA,YAAM,cAAc,SAAS,cAAc,MAAM;AACjD,kBAAY,cAAc,KAAK;AAC/B,kBAAY,MAAM,UAAU;AAAA;AAAA,gBAElB,GAAG,CAAC,CAAC;AAAA,eACN,GAAG,CAAC,CAAC;AAAA,qBACC,KAAK,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAMvD,gBAAU,YAAY,WAAW;AAAA,IACnC,CAAC;AAED,cAAU,YAAY,SAAS;AAC/B,WAAO;AAAA,EACT;AAAA,EAEA,SAAS,OAAqB;AAC5B,SAAK,QAAQ;AACb,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEQ,kBAAwB;AAE9B,QAAI,KAAK,aAAa,GAAG;AACvB,WAAK,mBAAmB;AAAA,IAC1B,OAAO;AACL,WAAK,eAAe;AAAA,IACtB;AAAA,EACF;AAAA,EAEQ,qBAA2B;AACjC,UAAM,eAAe,KAAK,gBAAgB;AAC1C,iBAAa,QAAQ,aAAW;AAC9B,YAAM,cAAc,KAAK,UAAU,cAAc,sBAAsB,OAAO,IAAI;AAClF,UAAI,aAAa;AACf,aAAK,kBAAkB,aAAa,OAAO;AAAA,MAC7C;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEQ,kBAA4B;AAClC,UAAM,gBAAgB,KAAK,UAAU,sBAAsB;AAC3D,UAAM,eAAyB,CAAC;AAEhC,SAAK,MAAM,QAAQ,CAAC,GAAG,YAAY;AACjC,YAAM,cAAc,KAAK,UAAU,cAAc,sBAAsB,OAAO,IAAI;AAClF,UAAI,aAAa;AACf,cAAM,WAAW,YAAY,sBAAsB;AACnD,YAAI,SAAS,UAAU,cAAc,OAAO,SAAS,OAAO,cAAc,QAAQ;AAChF,uBAAa,KAAK,OAAO;AAAA,QAC3B;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAc,kBAAkB,aAA0B,YAAmC;AAC3F,UAAM,OAAO,MAAM,KAAK,YAAY,QAAQ,UAAU;AACtD,UAAM,WAAW,KAAK,YAAY,EAAE,OAAO,KAAK,MAAM,CAAC;AAEvD,UAAM,SAAS,YAAY,cAAc,QAAQ;AACjD,QAAI,QAAQ;AACV,aAAO,QAAQ,SAAS;AACxB,aAAO,SAAS,SAAS;AAEzB,YAAM,UAAU,OAAO,WAAW,IAAI;AACtC,YAAM,aAAa,KAAK,OAAO;AAAA,QAC7B,eAAe;AAAA,QACf;AAAA,MACF,CAAC;AACD,YAAM,WAAW;AAAA,IACnB;AAAA,EACF;AAAA,EAEQ,eAAwB;AAC9B,WAAO,KAAK,UAAU,eAAe,KAAK,KAAK,UAAU,cAAc;AAAA,EACzE;AAAA,EAEA,SAAS,YAA0B;AACjC,UAAM,cAAc,KAAK,UAAU;AAAA,MACjC,sBAAsB,UAAU;AAAA,IAClC;AAEA,QAAI,aAAa;AACf,kBAAY,eAAe,EAAE,UAAU,UAAU,OAAO,QAAQ,CAAC;AAAA,IACnE;AAAA,EACF;AAAA,EAEA,2BAAmC;AACjC,QAAI,CAAC,KAAK,eAAe,KAAK,MAAM,SAAS,EAAG,QAAO;AAEvD,UAAM,YAAY,KAAK,MAAM,OAAO,EAAE,KAAK,EAAE;AAC7C,UAAM,iBAAiB,KAAK,UAAU,cAAc;AACpD,UAAM,YAAY,UAAU,SAAS;AAErC,WAAO,iBAAiB;AAAA,EAC1B;AAAA,EAEA,4BAAoC;AAClC,QAAI,CAAC,KAAK,eAAe,KAAK,MAAM,SAAS,EAAG,QAAO;AAEvD,UAAM,YAAY,KAAK,MAAM,OAAO,EAAE,KAAK,EAAE;AAC7C,UAAM,kBAAkB,KAAK,UAAU,eAAe;AACtD,UAAM,aAAa,UAAU,SAAS;AAEtC,WAAO,kBAAkB;AAAA,EAC3B;AAAA,EAEA,iBAAgC;AAC9B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,eAAqB;AAEnB,QAAI,KAAK,QAAQ,KAAK,YAAY;AAChC,YAAM,QAAQ,KAAK,yBAAyB;AAC5C,WAAK,SAAS,KAAK;AAAA,IACrB,WAAW,KAAK,QAAQ,KAAK,aAAa;AACxC,YAAM,QAAQ,KAAK,0BAA0B;AAC7C,WAAK,SAAS,KAAK;AAAA,IACrB;AAAA,EACF;AAAA,EAEA,UAAgB;AACd,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,QAAQ;AAAA,IAC3B;AACA,SAAK,MAAM,MAAM;AACjB,SAAK,cAAc,CAAC;AAAA,EACtB;AAAA,EAEA,MAAc,qBAAoC;AAChD,QAAI,CAAC,KAAK,YAAa;AAEvB,SAAK,cAAc,CAAC;AAGpB,UAAM,YAAY;AAClB,UAAM,aAAa,KAAK,YAAY;AAEpC,aAAS,YAAY,GAAG,aAAa,YAAY,aAAa,WAAW;AACvE,YAAM,UAAU,KAAK,IAAI,YAAY,YAAY,GAAG,UAAU;AAE9D,YAAM,gBAAgB,CAAC;AACvB,eAAS,UAAU,WAAW,WAAW,SAAS,WAAW;AAC3D,sBAAc,KAAK,KAAK,uBAAuB,OAAO,CAAC;AAAA,MACzD;AAEA,YAAM,eAAe,MAAM,QAAQ,IAAI,aAAa;AACpD,WAAK,YAAY,KAAK,GAAG,YAAY;AAGrC,UAAI,UAAU,YAAY;AACxB,cAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,CAAC,CAAC;AAAA,MACrD;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAc,uBAAuB,SAAuC;AAC1E,QAAI,CAAC,UAAU;AACb,YAAM,UAAU;AAAA,IAClB;AAEA,UAAM,OAAO,MAAM,KAAK,YAAY,QAAQ,OAAO;AACnD,UAAM,cAAc,MAAM,KAAK,eAAe;AAC9C,UAAM,WAAW,KAAK,YAAY,EAAE,OAAO,EAAI,CAAC;AAEhD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,OAAO,YAAY,MAAM,IAAI,CAAC,SAAc;AAC1C,cAAM,QAAQ;AACd,cAAM,KAAK,MAAM,KAAK;AAAA,UACpB,MAAM,KAAK,UAAU,SAAS,WAAW,KAAK,SAAS;AAAA,UACvD,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;AAAA,QACpB;AAEA,eAAO;AAAA,UACL,KAAK,KAAK;AAAA,UACV,GAAG,GAAG,CAAC;AAAA,UACP,GAAG,GAAG,CAAC;AAAA,UACP,OAAO,KAAK;AAAA,UACZ,QAAQ,KAAK;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEQ,iBAAuB;AAAA,EAG/B;AAAA,EAEA,MAAc,kBAAkB,MAAkC;AAChE,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAM,SAAS,IAAI,WAAW;AAC9B,aAAO,SAAS,MAAM,QAAQ,OAAO,MAAqB;AAC1D,aAAO,UAAU,MAAM,OAAO,OAAO,KAAK;AAC1C,aAAO,kBAAkB,IAAI;AAAA,IAC/B,CAAC;AAAA,EACH;AACF;;;ACzZO,SAAS,aAAqB;AACnC,SAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE,SAAS,EAAE;AACzE;AAKO,SAAS,SACd,MACA,MACkC;AAClC,MAAI;AACJ,SAAO,IAAI,SAAwB;AACjC,iBAAa,OAAO;AACpB,cAAU,WAAW,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI;AAAA,EAChD;AACF;AAKO,SAAS,SACd,MACA,OACkC;AAClC,MAAI;AACJ,SAAO,IAAI,SAAwB;AACjC,QAAI,CAAC,YAAY;AACf,WAAK,GAAG,IAAI;AACZ,mBAAa;AACb,iBAAW,MAAM,aAAa,OAAO,KAAK;AAAA,IAC5C;AAAA,EACF;AACF;AAKO,SAAS,MAAM,OAAe,KAAa,KAAqB;AACrE,SAAO,KAAK,IAAI,KAAK,IAAI,OAAO,GAAG,GAAG,GAAG;AAC3C;AAKO,SAAS,aAAa,SAA+B;AAC1D,QAAM,OAAO,QAAQ,sBAAsB;AAC3C,SACE,KAAK,OAAO,KACZ,KAAK,QAAQ,KACb,KAAK,WAAW,OAAO,eAAe,SAAS,gBAAgB,iBAC/D,KAAK,UAAU,OAAO,cAAc,SAAS,gBAAgB;AAEjE;AAKO,SAAS,aAAa,OAAuB;AAClD,QAAM,QAAQ,MAAM,eAAe;AACnC,MAAI,MAAM,WAAW,GAAG;AACtB,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AAGA,MAAI,OAAO;AACX,MAAI,MAAM;AACV,MAAI,QAAQ;AACZ,MAAI,SAAS;AAEb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM,CAAC;AACpB,WAAO,KAAK,IAAI,MAAM,KAAK,IAAI;AAC/B,UAAM,KAAK,IAAI,KAAK,KAAK,GAAG;AAC5B,YAAQ,KAAK,IAAI,OAAO,KAAK,KAAK;AAClC,aAAS,KAAK,IAAI,QAAQ,KAAK,MAAM;AAAA,EACvC;AAEA,SAAO,IAAI,QAAQ,MAAM,KAAK,QAAQ,MAAM,SAAS,GAAG;AAC1D;AAKO,SAAS,aAAa,MAAY,UAAwB;AAC/D,QAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,QAAM,OAAO,SAAS,cAAc,GAAG;AACvC,OAAK,OAAO;AACZ,OAAK,WAAW;AAChB,WAAS,KAAK,YAAY,IAAI;AAC9B,OAAK,MAAM;AACX,WAAS,KAAK,YAAY,IAAI;AAC9B,MAAI,gBAAgB,GAAG;AACzB;AAKO,SAAS,aAAa,MAAc,UAAkB,WAAmB,oBAA0B;AACxG,QAAM,OAAO,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,MAAM,SAAS,CAAC;AAChD,eAAa,MAAM,QAAQ;AAC7B;AAKO,SAAS,SAAS,MAA6B;AACpD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,SAAS,IAAI,WAAW;AAC9B,WAAO,SAAS,MAAM,QAAQ,OAAO,MAAgB;AACrD,WAAO,UAAU,MAAM,OAAO,OAAO,KAAK;AAC1C,WAAO,WAAW,IAAI;AAAA,EACxB,CAAC;AACH;AAKO,SAAS,UAAyC,QAAW,QAAuB;AACzF,QAAM,SAAS,EAAE,GAAG,OAAO;AAE3B,aAAW,OAAO,QAAQ;AACxB,QAAI,OAAO,eAAe,GAAG,GAAG;AAC9B,YAAM,cAAc,OAAO,GAAG;AAC9B,YAAM,cAAc,OAAO,GAAG;AAE9B,UACE,eACA,OAAO,gBAAgB,YACvB,CAAC,MAAM,QAAQ,WAAW,KAC1B,eACA,OAAO,gBAAgB,YACvB,CAAC,MAAM,QAAQ,WAAW,GAC1B;AACA,eAAO,GAAG,IAAI,UAAU,aAAa,WAAW;AAAA,MAClD,OAAO;AACL,eAAO,GAAG,IAAI;AAAA,MAChB;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAKO,SAAS,YAAqB;AACnC,SAAO,OAAO,WAAW,eAAe,OAAO,aAAa;AAC9D;AAKO,SAAS,gBAAyB;AACvC,SAAO,UAAU,MAAM,kBAAkB,UAAU,UAAU,iBAAiB;AAChF;AAKO,SAAS,eAAe,OAAuB;AACpD,QAAM,QAAQ,CAAC,KAAK,MAAM,MAAM,IAAI;AACpC,MAAI,OAAO;AACX,MAAI,YAAY;AAEhB,SAAO,QAAQ,QAAQ,YAAY,MAAM,SAAS,GAAG;AACnD,YAAQ;AACR;AAAA,EACF;AAEA,SAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,IAAI,MAAM,SAAS,CAAC;AAC/C;AAKO,SAAS,MAAM,IAA2B;AAC/C,SAAO,IAAI,QAAQ,aAAW,WAAW,SAAS,EAAE,CAAC;AACvD;AAKA,eAAsB,MACpB,IACA,cAAsB,GACtB,YAAoB,KACR;AACZ,MAAI;AAEJ,WAAS,UAAU,GAAG,WAAW,aAAa,WAAW;AACvD,QAAI;AACF,aAAO,MAAM,GAAG;AAAA,IAClB,SAAS,OAAO;AACd,kBAAY;AACZ,UAAI,YAAY,YAAa;AAE7B,YAAM,YAAY,YAAY,KAAK,IAAI,GAAG,UAAU,CAAC;AACrD,YAAM,MAAM,SAAS;AAAA,IACvB;AAAA,EACF;AAEA,QAAM;AACR;;;AJlMO,IAAM,kBAAN,cAA8B,kCAAa;AAAA,EAUhD,YAAY,SAAiC;AAC3C,UAAM;AAJR,SAAQ,UAAwC,oBAAI,IAAI;AAMtD,SAAK,YAAY,QAAQ;AACzB,SAAK,UAAU,KAAK,aAAa,OAAO;AACxC,SAAK,QAAQ,KAAK,gBAAgB;AAGlC,SAAK,cAAc,IAAI,YAAY,KAAK,WAAW,KAAK,OAAO;AAC/D,SAAK,kBAAkB,IAAI,gBAAgB;AAAA,MACzC,cAAc,KAAK,QAAQ,aAAa,gBAAgB;AAAA,MACxD,qBAAqB,KAAK,QAAQ,aAAa,uBAAuB;AAAA,MACtE,mBAAmB,KAAK,QAAQ,aAAa,qBAAqB;AAAA,IACpE,CAAC;AACD,SAAK,eAAe,IAAI,aAAa;AAAA,MACnC,gBAAgB,KAAK,QAAQ,OAAO,kBAAkB;AAAA,MACtD,eAAe,KAAK,QAAQ,OAAO,iBAAiB;AAAA,MACpD,YAAY,KAAK,QAAQ,OAAO,cAAc;AAAA,IAChD,CAAC;AAGD,SAAK,eAAe;AACpB,SAAK,oBAAoB;AACzB,SAAK,oBAAoB;AAGzB,QAAI,QAAQ,MAAM;AAChB,WAAK,aAAa,QAAQ,IAAI;AAAA,IAChC;AAAA,EACF;AAAA;AAAA,EAIA,MAAM,aAAa,MAAkD;AACnE,QAAI;AACF,WAAK,SAAS,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAE9C,YAAM,aAAa,MAAM,KAAK,YAAY,aAAa,IAAI;AAE3D,WAAK,SAAS;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,QACb,WAAW;AAAA,MACb,CAAC;AAED,WAAK,KAAK,mBAAmB,UAAU;AACvC,WAAK,QAAQ,UAAU,SAAS,UAAU;AAAA,IAE5C,SAAS,OAAO;AACd,YAAM,WAAW,iBAAiB,QAAQ,QAAQ,IAAI,MAAM,OAAO,KAAK,CAAC;AACzE,WAAK,SAAS,EAAE,OAAO,SAAS,SAAS,WAAW,MAAM,CAAC;AAC3D,WAAK,KAAK,kBAAkB,QAAQ;AACpC,WAAK,QAAQ,UAAU,UAAU,QAAQ;AACzC,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,UAAgB;AACd,SAAK,gBAAgB,WAAW;AAChC,SAAK,YAAY,QAAQ;AACzB,SAAK,gBAAgB,QAAQ;AAC7B,SAAK,aAAa,QAAQ;AAC1B,SAAK,mBAAmB;AACxB,SAAK,UAAU,YAAY;AAAA,EAC7B;AAAA;AAAA,EAGA,SAAS,MAAoB;AAC3B,QAAI,OAAO,KAAK,OAAO,KAAK,MAAM,WAAY;AAE9C,SAAK,SAAS,EAAE,aAAa,KAAK,CAAC;AACnC,SAAK,YAAY,SAAS,IAAI;AAC9B,SAAK,KAAK,gBAAgB,MAAM,KAAK,MAAM,UAAU;AACrD,SAAK,QAAQ,UAAU,eAAe,MAAM,KAAK,MAAM,UAAU;AAAA,EACnE;AAAA,EAEA,WAAiB;AACf,SAAK,SAAS,KAAK,MAAM,cAAc,CAAC;AAAA,EAC1C;AAAA,EAEA,WAAiB;AACf,SAAK,SAAS,KAAK,MAAM,cAAc,CAAC;AAAA,EAC1C;AAAA;AAAA,EAGA,SAAe;AACb,UAAM,WAAW,KAAK,IAAI,KAAK,QAAQ,KAAK,KAAK,KAAK,MAAM,QAAQ,KAAK,QAAQ,KAAK,IAAI;AAC1F,SAAK,QAAQ,QAAQ;AAAA,EACvB;AAAA,EAEA,UAAgB;AACd,UAAM,WAAW,KAAK,IAAI,KAAK,QAAQ,KAAK,KAAK,KAAK,MAAM,QAAQ,KAAK,QAAQ,KAAK,IAAI;AAC1F,SAAK,QAAQ,QAAQ;AAAA,EACvB;AAAA,EAEA,QAAQ,OAAqB;AAC3B,UAAM,eAAe,KAAK,IAAI,KAAK,QAAQ,KAAK,KAAK,KAAK,IAAI,KAAK,QAAQ,KAAK,KAAK,KAAK,CAAC;AAE3F,QAAI,iBAAiB,KAAK,MAAM,OAAO;AACrC,WAAK,MAAM,QAAQ;AAGnB,WAAK,gBAAgB,YAAY,YAAY;AAG7C,WAAK,YAAY,SAAS,YAAY;AAGtC,WAAK,KAAK,gBAAgB,YAAY;AACtC,WAAK,QAAQ,UAAU,SAAS,YAAY;AAAA,IAC9C;AAAA,EACF;AAAA,EAEA,aAAmB;AACjB,QAAI,CAAC,KAAK,UAAW;AAGrB,UAAM,QAAQ,KAAK,YAAY,yBAAyB;AACxD,SAAK,QAAQ,KAAK;AAAA,EACpB;AAAA,EAEA,cAAoB;AAClB,QAAI,CAAC,KAAK,UAAW;AAGrB,UAAM,QAAQ,KAAK,YAAY,0BAA0B;AACzD,SAAK,QAAQ,KAAK;AAAA,EACpB;AAAA;AAAA,EAGA,OAAO,OAA+B;AACpC,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,WAAK,YAAY;AACjB,aAAO,CAAC;AAAA,IACV;AAEA,SAAK,SAAS,EAAE,aAAa,MAAM,CAAC;AACpC,UAAM,UAAU,KAAK,aAAa,OAAO,OAAO,KAAK,YAAY,eAAe,CAAC;AAEjF,SAAK,SAAS;AAAA,MACZ,eAAe;AAAA,MACf,oBAAoB,QAAQ,SAAS,IAAI,IAAI;AAAA,IAC/C,CAAC;AAED,SAAK,KAAK,kBAAkB,OAAO;AACnC,SAAK,QAAQ,UAAU,WAAW,OAAO;AAEzC,WAAO;AAAA,EACT;AAAA,EAEA,cAAoB;AAClB,SAAK,SAAS;AAAA,MACZ,aAAa;AAAA,MACb,eAAe,CAAC;AAAA,MAChB,oBAAoB;AAAA,IACtB,CAAC;AAED,SAAK,aAAa,aAAa;AAC/B,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAAA,EAEA,mBAAyB;AACvB,QAAI,KAAK,MAAM,cAAc,WAAW,EAAG;AAE3C,UAAM,aAAa,KAAK,MAAM,qBAAqB,KAAK,KAAK,MAAM,cAAc;AACjF,SAAK,SAAS,EAAE,oBAAoB,UAAU,CAAC;AAE/C,UAAM,SAAS,KAAK,MAAM,cAAc,SAAS;AACjD,SAAK,SAAS,OAAO,UAAU;AAAA,EACjC;AAAA,EAEA,mBAAyB;AACvB,QAAI,KAAK,MAAM,cAAc,WAAW,EAAG;AAE3C,UAAM,YAAY,KAAK,MAAM,uBAAuB,IAChD,KAAK,MAAM,cAAc,SAAS,IAClC,KAAK,MAAM,qBAAqB;AAEpC,SAAK,SAAS,EAAE,oBAAoB,UAAU,CAAC;AAE/C,UAAM,SAAS,KAAK,MAAM,cAAc,SAAS;AACjD,SAAK,SAAS,OAAO,UAAU;AAAA,EACjC;AAAA;AAAA,EAGA,aAAa,WAA2D;AACtE,UAAM,gBAA2B;AAAA,MAC/B,GAAG;AAAA,MACH,IAAI,WAAW;AAAA,MACf,WAAW,KAAK,IAAI;AAAA,IACtB;AAEA,SAAK,MAAM,WAAW,IAAI,cAAc,IAAI,aAAa;AACzD,SAAK,gBAAgB,aAAa,aAAa;AAE/C,SAAK,KAAK,mBAAmB,aAAa;AAC1C,SAAK,QAAQ,UAAU,cAAc,aAAa;AAElD,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB,IAAqB;AACnC,UAAM,UAAU,KAAK,MAAM,WAAW,OAAO,EAAE;AAC/C,QAAI,SAAS;AACX,WAAK,gBAAgB,gBAAgB,EAAE;AACvC,WAAK,KAAK,qBAAqB,EAAE;AACjC,WAAK,QAAQ,UAAU,oBAAoB,EAAE;AAAA,IAC/C;AACA,WAAO;AAAA,EACT;AAAA,EAEA,kBAAwB;AACtB,SAAK,MAAM,WAAW,MAAM;AAC5B,SAAK,gBAAgB,gBAAgB;AACrC,SAAK,KAAK,mBAAmB;AAAA,EAC/B;AAAA,EAEA,gBAA6B;AAC3B,WAAO,MAAM,KAAK,KAAK,MAAM,WAAW,OAAO,CAAC;AAAA,EAClD;AAAA,EAEA,iBAAiB,SAAyB,QAAgB;AACxD,UAAM,aAAa,KAAK,cAAc;AAEtC,QAAI,WAAW,QAAQ;AACrB,aAAO,KAAK,UAAU,YAAY,MAAM,CAAC;AAAA,IAC3C;AAGA,UAAM,UAAU,CAAC,MAAM,QAAQ,cAAc,KAAK,KAAK,SAAS,UAAU,SAAS,WAAW;AAC9F,UAAM,UAAU,WAAW,IAAI,OAAK;AAAA,MAClC,EAAE;AAAA,MACF,IAAI,EAAE,KAAK,QAAQ,MAAM,IAAI,CAAC;AAAA,MAC9B,EAAE;AAAA,MACF,EAAE,SAAS;AAAA,MACX,EAAE,SAAS;AAAA,MACX,EAAE,SAAS;AAAA,MACX,EAAE,SAAS;AAAA,MACX,EAAE;AAAA,MACF,EAAE;AAAA,IACJ,EAAE,KAAK,GAAG,CAAC;AAEX,WAAO,CAAC,QAAQ,KAAK,GAAG,GAAG,GAAG,OAAO,EAAE,KAAK,IAAI;AAAA,EAClD;AAAA,EAEA,iBAAiB,MAAc,SAAyB,QAAc;AACpE,QAAI;AACF,UAAI;AAEJ,UAAI,WAAW,QAAQ;AACrB,qBAAa,KAAK,MAAM,IAAI;AAAA,MAC9B,OAAO;AAEL,cAAM,QAAQ,KAAK,MAAM,IAAI,EAAE,OAAO,UAAQ,KAAK,KAAK,CAAC;AACzD,YAAI,MAAM,SAAS,EAAG,OAAM,IAAI,MAAM,oBAAoB;AAE1D,qBAAa,MAAM,MAAM,CAAC,EAAE,IAAI,UAAQ;AACtC,gBAAM,SAAS,KAAK,aAAa,IAAI;AACrC,cAAI,OAAO,SAAS,EAAG,OAAM,IAAI,MAAM,wBAAwB;AAE/D,iBAAO;AAAA,YACL,IAAI,OAAO,CAAC;AAAA,YACZ,MAAM,OAAO,CAAC,EAAE,QAAQ,UAAU,EAAE,EAAE,QAAQ,OAAO,GAAG;AAAA,YACxD,YAAY,SAAS,OAAO,CAAC,CAAC;AAAA,YAC9B,UAAU;AAAA,cACR,GAAG,WAAW,OAAO,CAAC,CAAC;AAAA,cACvB,GAAG,WAAW,OAAO,CAAC,CAAC;AAAA,cACvB,OAAO,WAAW,OAAO,CAAC,CAAC;AAAA,cAC3B,QAAQ,WAAW,OAAO,CAAC,CAAC;AAAA,YAC9B;AAAA,YACA,OAAO,OAAO,CAAC;AAAA,YACf,WAAW,SAAS,OAAO,CAAC,CAAC;AAAA,UAC/B;AAAA,QACF,CAAC;AAAA,MACH;AAGA,YAAM,kBAAkB,WAAW;AAAA,QAAO,OACxC,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,KAAK,EAAE,YAAY,EAAE;AAAA,MACxD;AAEA,UAAI,gBAAgB,WAAW,WAAW,QAAQ;AAChD,gBAAQ,KAAK,gBAAgB,WAAW,SAAS,gBAAgB,MAAM,qBAAqB;AAAA,MAC9F;AAGA,WAAK,gBAAgB;AACrB,sBAAgB,QAAQ,eAAa;AACnC,aAAK,MAAM,WAAW,IAAI,UAAU,IAAI,SAAS;AACjD,aAAK,gBAAgB,aAAa,SAAS;AAAA,MAC7C,CAAC;AAAA,IAEH,SAAS,OAAO;AACd,YAAM,IAAI,MAAM,gCAAgC,KAAK,EAAE;AAAA,IACzD;AAAA,EACF;AAAA,EAEQ,aAAa,MAAwB;AAC3C,UAAM,SAAmB,CAAC;AAC1B,QAAI,UAAU;AACd,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,OAAO,KAAK,CAAC;AAEnB,UAAI,SAAS,KAAK;AAChB,YAAI,YAAY,KAAK,IAAI,CAAC,MAAM,KAAK;AACnC,qBAAW;AACX;AAAA,QACF,OAAO;AACL,qBAAW,CAAC;AAAA,QACd;AAAA,MACF,WAAW,SAAS,OAAO,CAAC,UAAU;AACpC,eAAO,KAAK,OAAO;AACnB,kBAAU;AAAA,MACZ,OAAO;AACL,mBAAW;AAAA,MACb;AAAA,IACF;AAEA,WAAO,KAAK,OAAO;AACnB,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,IAAI,QAA+B;AACjC,QAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,GAAG;AACjC,YAAM,IAAI,MAAM,WAAW,OAAO,IAAI,wBAAwB;AAAA,IAChE;AAEA,WAAO,QAAQ,IAAI;AACnB,SAAK,QAAQ,IAAI,OAAO,MAAM,MAAM;AAAA,EACtC;AAAA,EAEA,MAAM,YAA0B;AAC9B,UAAM,SAAS,KAAK,QAAQ,IAAI,UAAU;AAC1C,QAAI,QAAQ;AACV,aAAO,UAAU,IAAI;AACrB,WAAK,QAAQ,OAAO,UAAU;AAAA,IAChC;AAAA,EACF;AAAA;AAAA,EAGA,iBAAyB;AACvB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EAEA,gBAAwB;AACtB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EAEA,WAAmB;AACjB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EAEA,mBAAmC;AACjC,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EAEA,wBAAgC;AAC9B,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EAEA,YAAqB;AACnB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EAEA,WAA0B;AACxB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA;AAAA,EAIQ,aAAa,SAAmE;AACtF,WAAO;AAAA,MACL,WAAW,QAAQ;AAAA,MACnB,MAAM,QAAQ,QAAQ;AAAA,MACtB,OAAO,QAAQ,SAAS;AAAA,MACxB,OAAO,QAAQ,SAAS;AAAA,MACxB,QAAQ,QAAQ,UAAU;AAAA,MAC1B,UAAU;AAAA,QACR,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,GAAG,QAAQ;AAAA,MACb;AAAA,MACA,cAAc;AAAA,QACZ,cAAc;AAAA,QACd,qBAAqB;AAAA,QACrB,mBAAmB;AAAA,QACnB,GAAG,QAAQ;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,GAAG,QAAQ;AAAA,MACb;AAAA,MACA,MAAM;AAAA,QACJ,KAAK,QAAQ,MAAM,OAAO;AAAA,QAC1B,KAAK,QAAQ,MAAM,OAAO;AAAA,QAC1B,MAAM,QAAQ,MAAM,QAAQ;AAAA,QAC5B,YAAY,QAAQ,MAAM,cAAc;AAAA,QACxC,aAAa,QAAQ,MAAM,eAAe;AAAA,QAC1C,GAAG,QAAQ;AAAA,MACb;AAAA,MACA,WAAW;AAAA,QACT,aAAa,MAAM;AAAA,QAAC;AAAA,QACpB,mBAAmB,MAAM;AAAA,QAAC;AAAA,QAC1B,UAAU,MAAM;AAAA,QAAC;AAAA,QACjB,cAAc,MAAM;AAAA,QAAC;AAAA,QACrB,QAAQ,MAAM;AAAA,QAAC;AAAA,QACf,SAAS,MAAM;AAAA,QAAC;AAAA,QAChB,QAAQ,MAAM;AAAA,QAAC;AAAA,QACf,GAAG,QAAQ;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,kBAA+B;AACrC,WAAO;AAAA,MACL,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,WAAW;AAAA,MACX,OAAO;AAAA,MACP,aAAa;AAAA,MACb,eAAe,CAAC;AAAA,MAChB,oBAAoB;AAAA,MACpB,YAAY,oBAAI,IAAI;AAAA,IACtB;AAAA,EACF;AAAA,EAEQ,SAAS,SAAqC;AACpD,WAAO,OAAO,KAAK,OAAO,OAAO;AAAA,EACnC;AAAA,EAEQ,iBAAuB;AAC7B,SAAK,UAAU,UAAU,IAAI,mBAAmB;AAChD,SAAK,UAAU,aAAa,cAAc,KAAK,QAAQ,KAAK;AAG5D,QAAI,OAAO,KAAK,QAAQ,UAAU,UAAU;AAC1C,WAAK,UAAU,MAAM,QAAQ,GAAG,KAAK,QAAQ,KAAK;AAAA,IACpD,OAAO;AACL,WAAK,UAAU,MAAM,QAAQ,KAAK,QAAQ;AAAA,IAC5C;AAEA,QAAI,OAAO,KAAK,QAAQ,WAAW,UAAU;AAC3C,WAAK,UAAU,MAAM,SAAS,GAAG,KAAK,QAAQ,MAAM;AAAA,IACtD,OAAO;AACL,WAAK,UAAU,MAAM,SAAS,KAAK,QAAQ;AAAA,IAC7C;AAAA,EACF;AAAA,EAEQ,sBAA4B;AAElC,QAAI,KAAK,QAAQ,SAAS,cAAc;AACtC,eAAS,iBAAiB,WAAW,MAAM,KAAK,oBAAoB,CAAC;AAAA,IACvE;AAGA,aAAS,iBAAiB,WAAW,CAAC,MAAM;AAC1C,UAAI,EAAE,WAAW,EAAE,SAAS;AAC1B,gBAAQ,EAAE,KAAK;AAAA,UACb,KAAK;AAAA,UACL,KAAK;AACH,gBAAI,KAAK,QAAQ,SAAS,QAAQ;AAChC,gBAAE,eAAe;AAEjB,mBAAK,KAAK,cAAc;AAAA,YAC1B;AACA;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AACH,cAAE,eAAe;AACjB,iBAAK,OAAO;AACZ;AAAA,UACF,KAAK;AACH,cAAE,eAAe;AACjB,iBAAK,QAAQ;AACb;AAAA,UACF,KAAK;AACH,cAAE,eAAe;AACjB,iBAAK,QAAQ,CAAG;AAChB;AAAA,QACJ;AAAA,MACF;AAAA,IACF,CAAC;AAGD,QAAI;AACJ,UAAM,eAAe,MAAM;AACzB,mBAAa,aAAa;AAC1B,sBAAgB,OAAO,WAAW,MAAM;AACtC,YAAI,KAAK,QAAQ,SAAS,cAAc;AACtC,eAAK,gBAAgB,wBAAwB;AAAA,QAC/C;AAAA,MACF,GAAG,GAAG;AAAA,IACR;AAGA,SAAK,UAAU,iBAAiB,UAAU,YAAY;AACtD,WAAO,iBAAiB,UAAU,YAAY;AAG9C,WAAO,iBAAiB,UAAU,MAAM;AACtC,UAAI,KAAK,QAAQ,SAAS,cAAc;AACtC,aAAK,gBAAgB,qBAAqB;AAAA,MAC5C;AACA,WAAK,YAAY,aAAa;AAAA,IAChC,CAAC;AAAA,EACH;AAAA,EAEQ,sBAA4B;AAClC,QAAI,OAAO,mBAAmB,aAAa;AACzC,WAAK,iBAAiB,IAAI,eAAe,MAAM;AAC7C,aAAK,YAAY,aAAa;AAAA,MAChC,CAAC;AACD,WAAK,eAAe,QAAQ,KAAK,SAAS;AAAA,IAC5C;AAAA,EACF;AAAA,EAEA,MAAc,sBAAqC;AACjD,UAAM,YAAY,OAAO,aAAa;AACtC,QAAI,CAAC,aAAa,CAAC,UAAU,SAAS,EAAE,KAAK,EAAG;AAEhD,UAAM,QAAQ,UAAU,WAAW,CAAC;AACpC,UAAM,OAAO,UAAU,SAAS;AAGhC,UAAM,cAAc,MAAM,wBAAwB,aAAa,KAAK,YAChE,MAAM,wBAAwB,eAAe,QAAQ,kBAAkB,IACtE,MAAM,wBAAoC,QAAQ,kBAAkB;AAEzE,QAAI,CAAC,YAAa;AAElB,UAAM,iBAAiB,YAAY,aAAa,kBAAkB;AAClE,UAAM,aAAa,SAAS,kBAAkB,GAAG;AAGjD,UAAM,aAAa,KAAK,gBAAgB;AAAA,MACtC;AAAA,MACA;AAAA,MACA,KAAK,QAAQ,aAAa;AAAA,IAC5B;AAEA,QAAI,YAAY;AAEd,iBAAW,QAAQ,eAAa;AAC9B,aAAK,MAAM,WAAW,IAAI,UAAU,IAAI,SAAS;AACjD,aAAK,KAAK,mBAAmB,SAAS;AACtC,aAAK,QAAQ,UAAU,cAAc,SAAS;AAAA,MAChD,CAAC;AAAA,IACH;AAGA,cAAU,gBAAgB;AAAA,EAC5B;AACF;;;AKvkBO,IAAM,uBAAN,MAA2B;AAAA;AAAA;AAAA;AAAA,EAOhC,OAAO,SACL,MACA,MACkC;AAClC,QAAI;AAEJ,WAAO,IAAI,SAAwB;AACjC,mBAAa,OAAO;AACpB,gBAAU,WAAW,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI;AAAA,IAChD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,SACL,MACA,OACkC;AAClC,QAAI;AAEJ,WAAO,IAAI,SAAwB;AACjC,UAAI,CAAC,YAAY;AACf,aAAK,GAAG,IAAI;AACZ,qBAAa;AACb,mBAAW,MAAM,aAAa,OAAO,KAAK;AAAA,MAC5C;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,UAAU,MAAwB;AACvC,SAAK,UAAU,KAAK,IAAI;AAExB,QAAI,KAAK,UAAU,MAAM;AACvB,WAAK,QAAQ,sBAAsB,MAAM;AACvC,aAAK,aAAa;AAClB,aAAK,QAAQ;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,OAAe,eAAqB;AAClC,UAAM,QAAQ,KAAK,UAAU,OAAO,CAAC;AACrC,UAAM,QAAQ,UAAQ;AACpB,UAAI;AACF,aAAK;AAAA,MACP,SAAS,OAAO;AACd,gBAAQ,MAAM,yBAAyB,KAAK;AAAA,MAC9C;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,yBACL,UACAA,QACwB;AACxB,UAAM,YAAY,WAAW,UAAUA,MAAK;AAE5C,WAAO;AAAA,MACL,QAAQ,MAAM,aAAa,SAAS;AAAA,IACtC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,mBACL,MACA,IACG;AACH,UAAM,QAAQ,YAAY,IAAI;AAC9B,UAAM,SAAS,GAAG;AAClB,UAAM,MAAM,YAAY,IAAI;AAE5B,YAAQ,IAAI,GAAG,IAAI,SAAS,MAAM,KAAK,eAAe;AACtD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,0BACL,UAC4B;AAC5B,QAAI,OAAO,wBAAwB,aAAa;AAC9C,aAAO;AAAA,IACT;AAEA,UAAM,WAAW,IAAI,oBAAoB,CAAC,SAAS;AACjD,eAAS,KAAK,WAAW,CAAC;AAAA,IAC5B,CAAC;AAED,QAAI;AACF,eAAS,QAAQ,EAAE,YAAY,CAAC,WAAW,cAAc,OAAO,EAAE,CAAQ;AAC1E,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,KAAK,uCAAuC,KAAK;AACzD,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAjHa,qBACI,QAAuB;AAD3B,qBAEI,YAA4B,CAAC;AAoHvC,IAAM,gBAAN,MAAoB;AAAA;AAAA;AAAA;AAAA,EAOzB,OAAO,SAAS,KAAa,OAAkB;AAC7C,QAAI,KAAK,MAAM,QAAQ,KAAK,cAAc;AACxC,YAAM,WAAW,KAAK,MAAM,KAAK,EAAE,KAAK,EAAE;AAC1C,WAAK,MAAM,OAAO,QAAQ;AAAA,IAC5B;AAEA,SAAK,MAAM,IAAI,KAAK,KAAK;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,SAAS,KAAkB;AAChC,WAAO,KAAK,MAAM,IAAI,GAAG,KAAK;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAmB;AACxB,SAAK,MAAM,MAAM;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,iBAAsB;AAC3B,QAAI,YAAY,aAAa;AAC3B,aAAQ,YAAoB;AAAA,IAC9B;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,UAAgB;AACrB,QAAI,QAAQ,UAAU,OAAQ,OAAe,OAAO,YAAY;AAC9D,MAAC,OAAe,GAAG;AAAA,IACrB;AAAA,EACF;AACF;AAhDa,cACI,QAAQ,oBAAI,IAAiB;AADjC,cAEI,eAAe;AAmDzB,IAAM,mBAAN,MAAuB;AAAA,EAM5B,YAAY,WAAwB,YAAoB;AAHxD,SAAQ,eAA+C,EAAE,OAAO,GAAG,KAAK,EAAE;AAC1E,SAAQ,aAAqB;AAG3B,SAAK,YAAY;AACjB,SAAK,aAAa;AAClB,YAAQ,IAAI,+CAA+C,UAAU,OAAO;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,WAAmB,iBAAyD;AAChG,UAAM,QAAQ,KAAK,MAAM,YAAY,KAAK,UAAU;AACpD,UAAM,eAAe,KAAK,KAAK,kBAAkB,KAAK,UAAU;AAChE,UAAM,MAAM,KAAK,IAAI,QAAQ,eAAe,GAAG,KAAK,aAAa,CAAC;AAElE,SAAK,eAAe,EAAE,OAAO,KAAK,IAAI,GAAG,QAAQ,CAAC,GAAG,IAAI;AACzD,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkD;AAChD,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,OAAqB;AACjC,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAyB;AACvB,WAAO,KAAK,aAAa,KAAK;AAAA,EAChC;AACF;;;ANhMO,IAAM,UAAU;","names":["delay"]}