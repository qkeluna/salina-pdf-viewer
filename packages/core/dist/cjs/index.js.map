{"version":3,"sources":["../../src/index.ts","../../src/SalinaPDFViewer.ts","../../src/highlighting/SimpleHighlighter.ts","../../src/search/SearchEngine.ts","../../src/highlighting/TextLayerHighlighter.ts","../../src/search/TextLayerSearchEngine.ts","../../src/highlighting/SelectionHighlightEngine.ts","../../src/rendering/PDFRenderer.ts","../../src/highlighting/HighlightEngine.ts","../../src/utils/helpers.ts","../../src/utils/performance.ts"],"sourcesContent":["// Main exports\nexport { SalinaPDFViewer } from \"./SalinaPDFViewer\";\n\n// Type exports\nexport type {\n  SalinaPDFViewerOptions,\n  Highlight,\n  SearchResult,\n  PDFPage,\n  ViewerState,\n  SalinaPDFPlugin,\n  EventMap,\n} from \"./types\";\n\nexport type { ActiveHighlight } from \"./highlighting/SimpleHighlighter\";\nexport type { HighlightOptions } from \"./highlighting/HighlightEngine\";  \nexport type { SelectionHighlightOptions, SelectionHighlight } from \"./highlighting/SelectionHighlightEngine\";\nexport type { TextLayerMatch } from \"./highlighting/TextLayerHighlighter\";\nexport type { SearchOptions, TextContent } from \"./search/SearchEngine\";\nexport type { TextLayerSearchOptions } from \"./search/TextLayerSearchEngine\";\n\n// Engine exports\nexport { SimpleHighlighter } from \"./highlighting/SimpleHighlighter\";\nexport { HighlightEngine } from \"./highlighting/HighlightEngine\";\nexport { SelectionHighlightEngine } from \"./highlighting/SelectionHighlightEngine\";\nexport { TextLayerHighlighter } from \"./highlighting/TextLayerHighlighter\";\nexport { SearchEngine } from \"./search/SearchEngine\";\nexport { TextLayerSearchEngine } from \"./search/TextLayerSearchEngine\";\nexport { PDFRenderer } from \"./rendering/PDFRenderer\";\n\n// Utility exports\nexport * from \"./utils/helpers\";\nexport {\n  PerformanceOptimizer,\n  MemoryManager,\n  VirtualScrolling,\n} from \"./utils/performance\";\n\n// Version\nexport const VERSION = \"3.0.2\";\n","import { EventEmitter } from \"eventemitter3\";\nimport type {\n  SalinaPDFViewerOptions,\n  ViewerState,\n  SearchResult,\n  SalinaPDFPlugin,\n} from \"./types\";\nimport {\n  SimpleHighlighter,\n  type ActiveHighlight,\n} from \"./highlighting/SimpleHighlighter\";\nimport { SearchEngine } from \"./search/SearchEngine\";\nimport { TextLayerSearchEngine } from \"./search/TextLayerSearchEngine\";\nimport { SelectionHighlightEngine } from \"./highlighting/SelectionHighlightEngine\";\nimport { PDFRenderer } from \"./rendering/PDFRenderer\";\nimport { generateId } from \"./utils/helpers\";\n\nexport class SalinaPDFViewer extends EventEmitter {\n  private container: HTMLElement;\n  private options: Required<SalinaPDFViewerOptions>;\n  private state: Omit<ViewerState, \"highlights\">;\n  private pdfRenderer: PDFRenderer;\n  private simpleHighlighter: SimpleHighlighter;\n  private searchEngine: SearchEngine;\n  private textLayerSearchEngine: TextLayerSearchEngine;\n  private selectionHighlightEngine: SelectionHighlightEngine;\n  private plugins: Map<string, SalinaPDFPlugin> = new Map();\n  private resizeObserver?: ResizeObserver;\n\n  constructor(options: SalinaPDFViewerOptions) {\n    super();\n\n    this.container = options.container;\n    this.options = this.mergeOptions(options);\n    this.state = this.initializeState();\n\n    // Initialize engines\n    this.pdfRenderer = new PDFRenderer(this.container, this.options);\n    this.simpleHighlighter = new SimpleHighlighter({\n      highlightColor:\n        this.options.highlighting.defaultColor || \"rgba(255, 255, 0, 0.3)\",\n      copyHintEnabled: true,\n    });\n    this.searchEngine = new SearchEngine({\n      highlightColor:\n        this.options.search.highlightColor || \"rgba(255, 165, 0, 0.6)\",\n      caseSensitive: this.options.search.caseSensitive || false,\n      wholeWords: this.options.search.wholeWords || false,\n    });\n    \n    // Initialize new PDF.js-style engines\n    this.textLayerSearchEngine = new TextLayerSearchEngine({\n      caseSensitive: this.options.search.caseSensitive || false,\n      wholeWords: this.options.search.wholeWords || false,\n      highlightAll: true,\n    });\n    \n    this.selectionHighlightEngine = new SelectionHighlightEngine({\n      defaultColor: this.options.highlighting.defaultColor || \"yellow\",\n      allowMultipleColors: true,\n      persistHighlights: true,\n      autoHighlight: this.options.highlighting.enableManualHighlighting || false,\n    });\n\n    // Setup\n    this.setupContainer();\n    this.setupEventListeners();\n    this.setupResizeObserver();\n\n    // Load file if provided\n    if (options.file) {\n      this.loadDocument(options.file);\n    }\n  }\n\n  async loadDocument(file: File | string | ArrayBuffer): Promise<void> {\n    try {\n      this.setState({ isLoading: true, error: null });\n\n      const totalPages = await this.pdfRenderer.loadDocument(file);\n\n      this.setState({\n        totalPages,\n        currentPage: 1,\n        isLoading: false,\n      });\n\n      this.emit(\"document:loaded\", totalPages);\n      this.options.callbacks.onLoad?.(totalPages);\n    } catch (error) {\n      const errorObj =\n        error instanceof Error ? error : new Error(String(error));\n      this.setState({ error: errorObj.message, isLoading: false });\n      this.emit(\"document:error\", errorObj);\n      this.options.callbacks.onError?.(errorObj);\n      throw errorObj;\n    }\n  }\n\n  destroy(): void {\n    this.resizeObserver?.disconnect();\n    this.pdfRenderer.destroy();\n    this.simpleHighlighter.destroy();\n    this.searchEngine.destroy();\n    this.textLayerSearchEngine.destroy();\n    this.selectionHighlightEngine.destroy();\n    this.removeAllListeners();\n    this.container.innerHTML = \"\";\n  }\n\n  // Navigation\n  goToPage(page: number): void {\n    if (page < 1 || page > this.state.totalPages) return;\n\n    this.setState({ currentPage: page });\n    this.pdfRenderer.goToPage(page);\n    this.emit(\"page:changed\", page, this.state.totalPages);\n    this.options.callbacks.onPageChange?.(page, this.state.totalPages);\n  }\n\n  nextPage(): void {\n    this.goToPage(this.state.currentPage + 1);\n  }\n\n  prevPage(): void {\n    this.goToPage(this.state.currentPage - 1);\n  }\n\n  // Zoom controls\n  zoomIn(): void {\n    const newScale = Math.min(\n      this.options.zoom.max,\n      this.state.scale + this.options.zoom.step\n    );\n    this.setZoom(newScale);\n  }\n\n  zoomOut(): void {\n    const newScale = Math.max(\n      this.options.zoom.min,\n      this.state.scale - this.options.zoom.step\n    );\n    this.setZoom(newScale);\n  }\n\n  setZoom(scale: number): void {\n    const clampedScale = Math.max(\n      this.options.zoom.min,\n      Math.min(this.options.zoom.max, scale)\n    );\n\n    if (clampedScale !== this.state.scale) {\n      this.state.scale = clampedScale;\n\n      // Update simple highlighter scale for accurate positioning\n      this.simpleHighlighter.updateScale(clampedScale);\n\n      // Update PDF renderer scale to re-render pages\n      this.pdfRenderer.setScale(clampedScale);\n\n      // Emit zoom change event\n      this.emit(\"zoom:changed\", clampedScale);\n      this.options.callbacks.onZoom?.(clampedScale);\n    }\n  }\n\n  fitToWidth(): void {\n    if (!this.container) return;\n\n    // Use PDFRenderer method to calculate and apply scale\n    const scale = this.pdfRenderer.calculateFitToWidthScale();\n    this.setZoom(scale);\n  }\n\n  fitToHeight(): void {\n    if (!this.container) return;\n\n    // Use PDFRenderer method to calculate and apply scale\n    const scale = this.pdfRenderer.calculateFitToHeightScale();\n    this.setZoom(scale);\n  }\n\n  // Search - Legacy method using coordinate-based highlighting\n  search(query: string): SearchResult[] {\n    if (!query.trim()) {\n      this.clearSearch();\n      return [];\n    }\n\n    this.setState({ searchQuery: query });\n    const results = this.searchEngine.search(\n      query,\n      this.pdfRenderer.getTextContent()\n    );\n\n    this.setState({\n      searchResults: results,\n      currentSearchIndex: results.length > 0 ? 0 : -1,\n    });\n\n    this.emit(\"search:results\", results);\n    this.options.callbacks.onSearch?.(results);\n\n    return results;\n  }\n\n  // Search using PDF.js-style text layer highlighting\n  searchInTextLayer(query: string): SearchResult[] {\n    if (!query.trim()) {\n      this.clearTextLayerSearch();\n      return [];\n    }\n    \n    this.setState({ searchQuery: query });\n    const results = this.textLayerSearchEngine.search(query);\n    \n    this.setState({\n      searchResults: results,\n      currentSearchIndex: results.length > 0 ? 0 : -1,\n    });\n    \n    this.emit(\"search:results\", results);\n    this.options.callbacks.onSearch?.(results);\n    return results;\n  }\n\n  clearSearch(): void {\n    this.setState({\n      searchQuery: \"\",\n      searchResults: [],\n      currentSearchIndex: -1,\n    });\n\n    this.searchEngine.clearResults();\n    this.emit(\"search:cleared\");\n  }\n\n  clearTextLayerSearch(): void {\n    this.setState({\n      searchQuery: \"\",\n      searchResults: [],\n      currentSearchIndex: -1,\n    });\n\n    this.textLayerSearchEngine.clear();\n    this.emit(\"search:cleared\");\n  }\n\n  nextSearchResult(): void {\n    if (this.state.searchResults.length === 0) return;\n\n    const nextIndex =\n      (this.state.currentSearchIndex + 1) % this.state.searchResults.length;\n    this.setState({ currentSearchIndex: nextIndex });\n\n    const result = this.state.searchResults[nextIndex];\n    this.goToPage(result.pageNumber);\n  }\n\n  prevSearchResult(): void {\n    if (this.state.searchResults.length === 0) return;\n\n    const prevIndex =\n      this.state.currentSearchIndex === 0\n        ? this.state.searchResults.length - 1\n        : this.state.currentSearchIndex - 1;\n\n    this.setState({ currentSearchIndex: prevIndex });\n\n    const result = this.state.searchResults[prevIndex];\n    this.goToPage(result.pageNumber);\n  }\n\n  // Text layer search navigation\n  nextTextLayerSearchResult(): void {\n    this.textLayerSearchEngine.nextMatch();\n  }\n\n  prevTextLayerSearchResult(): void {\n    this.textLayerSearchEngine.previousMatch();\n  }\n\n  getCurrentSearchMatch(): { index: number; total: number } | null {\n    return this.textLayerSearchEngine.getCurrentMatch();\n  }\n\n  // Simple highlighting methods\n  getActiveHighlight(): ActiveHighlight | null {\n    return this.simpleHighlighter.getActiveHighlight();\n  }\n\n  clearHighlights(): void {\n    this.simpleHighlighter.clearHighlights();\n    this.selectionHighlightEngine.clearHighlights();\n    this.emit(\"highlight:cleared\");\n  }\n\n  // Manual highlighting methods using browser selection\n  createHighlightFromSelection(color?: string): boolean {\n    const highlight = this.selectionHighlightEngine.createHighlightFromCurrentSelection(color);\n    if (highlight) {\n      this.emit(\"highlight:created\", highlight);\n      return true;\n    }\n    return false;\n  }\n\n  removeHighlight(highlightId: string): void {\n    this.selectionHighlightEngine.removeHighlight(highlightId);\n    this.emit(\"highlight:removed\", highlightId);\n  }\n\n  updateHighlightColor(highlightId: string, color: string): void {\n    this.selectionHighlightEngine.updateHighlightColor(highlightId, color);\n    this.emit(\"highlight:updated\", highlightId, color);\n  }\n\n  getHighlights() {\n    return this.selectionHighlightEngine.getHighlights();\n  }\n\n  getPageHighlights(pageNumber: number) {\n    return this.selectionHighlightEngine.getPageHighlights(pageNumber);\n  }\n\n  exportHighlights() {\n    return this.selectionHighlightEngine.exportHighlights();\n  }\n\n  importHighlights(highlights: any[]) {\n    this.selectionHighlightEngine.importHighlights(highlights);\n    this.emit(\"highlights:imported\", highlights.length);\n  }\n\n  // Legacy API methods for compatibility (simplified)\n  addSimpleHighlight(): void {\n    // Note: Simple highlighter doesn't support programmatic highlight addition\n    // This is for compatibility only\n    console.warn(\n      \"addSimpleHighlight: Simple highlighter only supports mouse-based highlighting\"\n    );\n  }\n\n  removeSimpleHighlight(): boolean {\n    // Note: Simple highlighter doesn't support individual highlight removal\n    // This clears all highlights for compatibility\n    this.clearHighlights();\n    return true;\n  }\n\n  getSimpleHighlights(): ActiveHighlight[] {\n    const active = this.getActiveHighlight();\n    return active ? [active] : [];\n  }\n\n  exportSimpleHighlights(): string {\n    const active = this.getActiveHighlight();\n    return JSON.stringify(active ? [active] : [], null, 2);\n  }\n\n  importSimpleHighlights(): void {\n    // Note: Simple highlighter doesn't support highlight importing\n    console.warn(\n      \"importSimpleHighlights: Simple highlighter doesn't support highlight importing\"\n    );\n  }\n\n  // Plugin System\n  use(plugin: SalinaPDFPlugin): void {\n    if (this.plugins.has(plugin.name)) {\n      throw new Error(`Plugin '${plugin.name}' is already installed`);\n    }\n\n    plugin.install(this);\n    this.plugins.set(plugin.name, plugin);\n  }\n\n  unuse(pluginName: string): void {\n    const plugin = this.plugins.get(pluginName);\n    if (plugin) {\n      plugin.uninstall(this);\n      this.plugins.delete(pluginName);\n    }\n  }\n\n  // Getters\n  getCurrentPage(): number {\n    return this.state.currentPage;\n  }\n\n  getTotalPages(): number {\n    return this.state.totalPages;\n  }\n\n  getScale(): number {\n    return this.state.scale;\n  }\n\n  getSearchResults(): SearchResult[] {\n    return this.state.searchResults;\n  }\n\n  getCurrentSearchIndex(): number {\n    return this.state.currentSearchIndex;\n  }\n\n  isLoading(): boolean {\n    return this.state.isLoading;\n  }\n\n  getError(): string | null {\n    return this.state.error;\n  }\n\n  // Private Methods\n\n  private mergeOptions(\n    options: SalinaPDFViewerOptions\n  ): Required<SalinaPDFViewerOptions> {\n    return {\n      container: options.container,\n      file: options.file ?? undefined,\n      theme: options.theme ?? \"light\",\n      width: options.width ?? \"100%\",\n      height: options.height ?? \"100%\",\n      features: {\n        highlighting: true,\n        search: true,\n        navigation: true,\n        zoom: true,\n        fullscreen: false,\n        print: false,\n        download: false,\n        export: true,\n        annotations: false,\n        ...options.features,\n      },\n      highlighting: {\n        defaultColor: \"rgba(255, 255, 0, 0.3)\",\n        allowMultipleColors: false, // Simple highlighter uses single color\n        persistHighlights: false, // Simple highlighter is non-persistent\n        ...options.highlighting,\n      },\n      search: {\n        highlightColor: \"rgba(255, 165, 0, 0.6)\",\n        caseSensitive: false,\n        wholeWords: false,\n        ...options.search,\n      },\n      zoom: {\n        min: options.zoom?.min ?? 0.5,\n        max: options.zoom?.max ?? 3.0,\n        step: options.zoom?.step ?? 0.2,\n        default: options.zoom?.default ?? 1.0,\n        fitToWidth: options.zoom?.fitToWidth ?? true,\n        fitToHeight: options.zoom?.fitToHeight ?? true,\n        ...options.zoom,\n      },\n      callbacks: {\n        onLoad: () => {},\n        onPageChange: () => {},\n        onSearch: () => {},\n        onHighlight: () => {},\n        onHighlightRemove: () => {},\n        onError: () => {},\n        onZoom: () => {},\n        ...options.callbacks,\n      },\n    };\n  }\n\n  private initializeState(): Omit<ViewerState, \"highlights\"> {\n    return {\n      currentPage: 1,\n      totalPages: 0,\n      scale: this.options.zoom.default,\n      isLoading: false,\n      error: null,\n      searchQuery: \"\",\n      searchResults: [],\n      currentSearchIndex: -1,\n    };\n  }\n\n  private setState(updates: Partial<Omit<ViewerState, \"highlights\">>): void {\n    Object.assign(this.state, updates);\n  }\n\n  private setupContainer(): void {\n    this.container.classList.add(\"salina-pdf-viewer\");\n    this.container.setAttribute(\"data-theme\", this.options.theme);\n\n    // Set container dimensions\n    if (typeof this.options.width === \"number\") {\n      this.container.style.width = `${this.options.width}px`;\n    } else {\n      this.container.style.width = this.options.width;\n    }\n\n    if (typeof this.options.height === \"number\") {\n      this.container.style.height = `${this.options.height}px`;\n    } else {\n      this.container.style.height = this.options.height;\n    }\n  }\n\n  private setupEventListeners(): void {\n    // Keyboard shortcuts\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case \"f\":\n          case \"F\":\n            if (this.options.features.search) {\n              e.preventDefault();\n              // Emit search focus event\n              this.emit(\"search:focus\");\n            }\n            break;\n          case \"+\":\n          case \"=\":\n            e.preventDefault();\n            this.zoomIn();\n            break;\n          case \"-\":\n            e.preventDefault();\n            this.zoomOut();\n            break;\n          case \"0\":\n            e.preventDefault();\n            this.setZoom(1.0);\n            break;\n        }\n      }\n    });\n\n    // Handle viewport changes for highlight accuracy\n    let scrollTimeout: number;\n    const handleScroll = () => {\n      clearTimeout(scrollTimeout);\n      scrollTimeout = window.setTimeout(() => {\n        // Simple highlighter handles its own viewport updates\n      }, 100);\n    };\n\n    // Listen for scroll events on the container and window\n    this.container.addEventListener(\"scroll\", handleScroll);\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Handle resize events\n    window.addEventListener(\"resize\", () => {\n      this.pdfRenderer.handleResize();\n    });\n  }\n\n  private setupResizeObserver(): void {\n    if (typeof ResizeObserver !== \"undefined\") {\n      this.resizeObserver = new ResizeObserver(() => {\n        this.pdfRenderer.handleResize();\n      });\n      this.resizeObserver.observe(this.container);\n    }\n  }\n}\n","import type { ViewerState } from \"../types\";\n\nexport interface SimpleHighlighterOptions {\n  highlightColor: string;\n  copyHintEnabled: boolean;\n}\n\nexport interface HighlightRectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface ActiveHighlight {\n  pageNumber: number;\n  text: string;\n  rectangles: HighlightRectangle[];\n  timestamp: number;\n}\n\nexport class SimpleHighlighter {\n  private options: SimpleHighlighterOptions;\n  private activeHighlight: ActiveHighlight | null = null;\n  private highlightElements: HTMLElement[] = [];\n  private copyHintElement: HTMLElement | null = null;\n  private scale: number = 1.0;\n\n  constructor(options: SimpleHighlighterOptions) {\n    this.options = options;\n    this.setupEventListeners();\n  }\n\n  updateScale(scale: number): void {\n    this.scale = scale;\n    this.rerenderHighlights();\n  }\n\n  private setupEventListeners(): void {\n    // Handle mouse up for text selection\n    document.addEventListener(\"mouseup\", this.handleMouseUp.bind(this));\n\n    // Handle clicks to clear highlights\n    document.addEventListener(\"click\", this.handleDocumentClick.bind(this));\n\n    // Handle escape key\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n\n  private handleMouseUp(): void {\n    // Small delay to ensure selection is stable\n    setTimeout(() => {\n      const selection = window.getSelection();\n\n      if (\n        !selection ||\n        !selection.toString().trim() ||\n        selection.rangeCount === 0\n      ) {\n        return;\n      }\n\n      const selectedText = selection.toString().trim();\n      const range = selection.getRangeAt(0);\n\n      // Find which page this selection belongs to\n      const pageNumber = this.findPageNumber(range);\n      if (!pageNumber) return;\n\n      const pageContainer = document.getElementById(`page-${pageNumber}`);\n      if (!pageContainer) return;\n\n      // Check if the selection is within the text layer\n      const textLayer =\n        pageContainer.querySelector(\".react-pdf__Page__textContent\") ||\n        pageContainer.querySelector(\".salina-pdf-text-layer\");\n      if (!textLayer) return;\n\n      const startContainer = range.startContainer;\n      const endContainer = range.endContainer;\n      const commonAncestor = range.commonAncestorContainer;\n\n      const isWithinTextLayer =\n        textLayer.contains(startContainer) ||\n        textLayer.contains(endContainer) ||\n        textLayer.contains(commonAncestor);\n\n      if (!isWithinTextLayer) return;\n\n      // Create highlights from selection\n      const rectangles = this.createHighlightRectangles(range, pageContainer);\n\n      if (rectangles.length > 0) {\n        this.setActiveHighlight({\n          pageNumber,\n          text: selectedText,\n          rectangles,\n          timestamp: Date.now(),\n        });\n\n        // Clear the browser selection\n        setTimeout(() => {\n          selection.removeAllRanges();\n        }, 10);\n      }\n    }, 10);\n  }\n\n  private handleDocumentClick(e: MouseEvent): void {\n    const target = e.target as HTMLElement;\n\n    // Don't clear if clicking on copy hint\n    if (target.closest(\".salina-copy-hint\")) {\n      return;\n    }\n\n    // Clear highlights if clicking outside the active page or on non-text areas\n    if (this.activeHighlight) {\n      const pageContainer = document.getElementById(\n        `page-${this.activeHighlight.pageNumber}`\n      );\n\n      if (!pageContainer?.contains(target)) {\n        this.clearHighlights();\n        return;\n      }\n\n      const textLayer =\n        pageContainer.querySelector(\".react-pdf__Page__textContent\") ||\n        pageContainer.querySelector(\".salina-pdf-text-layer\");\n\n      if (\n        textLayer &&\n        !textLayer.contains(target) &&\n        !target.closest(\".salina-highlight\")\n      ) {\n        this.clearHighlights();\n      }\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent): void {\n    if (e.key === \"Escape\") {\n      this.clearHighlights();\n    } else if (\n      (e.ctrlKey || e.metaKey) &&\n      e.key === \"c\" &&\n      this.activeHighlight\n    ) {\n      e.preventDefault();\n      this.copyToClipboard();\n    }\n  }\n\n  private findPageNumber(range: Range): number | null {\n    // Look for page container in the range hierarchy\n    let element = range.commonAncestorContainer;\n\n    while (element && element !== document) {\n      if (element.nodeType === Node.ELEMENT_NODE) {\n        const el = element as Element;\n\n        // Check for page container with id pattern\n        if (el.id && el.id.match(/^page-\\d+$/)) {\n          return parseInt(el.id.replace(\"page-\", \"\"));\n        }\n\n        // Check for page container with data attribute\n        const pageAttr = el.getAttribute(\"data-page-number\");\n        if (pageAttr) {\n          return parseInt(pageAttr);\n        }\n\n        // Look for parent page container\n        const pageContainer =\n          el.closest('[id^=\"page-\"]') || el.closest(\"[data-page-number]\");\n        if (pageContainer) {\n          if (pageContainer.id && pageContainer.id.match(/^page-\\d+$/)) {\n            return parseInt(pageContainer.id.replace(\"page-\", \"\"));\n          }\n          const pageAttr = pageContainer.getAttribute(\"data-page-number\");\n          if (pageAttr) {\n            return parseInt(pageAttr);\n          }\n        }\n      }\n\n      element = element.parentNode;\n    }\n\n    return null;\n  }\n\n  private createHighlightRectangles(\n    range: Range,\n    pageContainer: HTMLElement\n  ): HighlightRectangle[] {\n    const pageRect = pageContainer.getBoundingClientRect();\n    const rects = range.getClientRects();\n    const rectangles: HighlightRectangle[] = [];\n\n    Array.from(rects).forEach((rect) => {\n      if (rect.width > 0 && rect.height > 0) {\n        const relativeX = rect.left - pageRect.left;\n        const relativeY = rect.top - pageRect.top;\n\n        rectangles.push({\n          x: relativeX / this.scale,\n          y: relativeY / this.scale,\n          width: rect.width / this.scale,\n          height: rect.height / this.scale,\n        });\n      }\n    });\n\n    return rectangles;\n  }\n\n  private setActiveHighlight(highlight: ActiveHighlight): void {\n    this.clearHighlights();\n    this.activeHighlight = highlight;\n    this.renderHighlights();\n\n    if (this.options.copyHintEnabled) {\n      this.renderCopyHint();\n    }\n  }\n\n  private renderHighlights(): void {\n    if (!this.activeHighlight) return;\n\n    const pageContainer = document.getElementById(\n      `page-${this.activeHighlight.pageNumber}`\n    );\n    if (!pageContainer) return;\n\n    this.activeHighlight.rectangles.forEach((rect, index) => {\n      const highlightElement = document.createElement(\"div\");\n      highlightElement.className = \"salina-highlight salina-simple-highlight\";\n      highlightElement.setAttribute(\n        \"data-page\",\n        this.activeHighlight!.pageNumber.toString()\n      );\n      highlightElement.title = this.activeHighlight!.text;\n\n      Object.assign(highlightElement.style, {\n        position: \"absolute\",\n        left: `${rect.x * this.scale}px`,\n        top: `${rect.y * this.scale}px`,\n        width: `${rect.width * this.scale}px`,\n        height: `${rect.height * this.scale}px`,\n        backgroundColor: this.options.highlightColor,\n        borderRadius: \"2px\",\n        pointerEvents: \"none\",\n        zIndex: \"5\",\n        mixBlendMode: \"multiply\",\n        transition: \"background-color 0.2s ease\",\n      });\n\n      pageContainer.appendChild(highlightElement);\n      this.highlightElements.push(highlightElement);\n    });\n  }\n\n  private renderCopyHint(): void {\n    if (!this.activeHighlight || this.activeHighlight.rectangles.length === 0)\n      return;\n\n    const pageContainer = document.getElementById(\n      `page-${this.activeHighlight.pageNumber}`\n    );\n    if (!pageContainer) return;\n\n    const firstRect = this.activeHighlight.rectangles[0];\n\n    const copyHint = document.createElement(\"div\");\n    copyHint.className = \"salina-copy-hint\";\n\n    Object.assign(copyHint.style, {\n      position: \"absolute\",\n      left: `${firstRect.x * this.scale}px`,\n      top: `${(firstRect.y - 30) * this.scale}px`,\n      zIndex: \"10\",\n      animation: \"fadeIn 0.3s ease-out\",\n      pointerEvents: \"auto\",\n    });\n\n    const bubble = document.createElement(\"div\");\n    bubble.className = \"salina-copy-hint-bubble\";\n    bubble.textContent = \"📋 Copy (Ctrl+C)\";\n\n    Object.assign(bubble.style, {\n      background: \"rgba(0, 0, 0, 0.8)\",\n      color: \"white\",\n      padding: \"4px 8px\",\n      borderRadius: \"4px\",\n      fontSize: \"12px\",\n      fontFamily:\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      cursor: \"pointer\",\n      userSelect: \"none\",\n      whiteSpace: \"nowrap\",\n      boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.3)\",\n      transition: \"all 0.2s ease\",\n      opacity: \"0.9\",\n    });\n\n    bubble.addEventListener(\"click\", this.copyToClipboard.bind(this));\n    bubble.addEventListener(\"mouseenter\", () => {\n      bubble.style.background = \"rgba(0, 0, 0, 0.9)\";\n      bubble.style.opacity = \"1\";\n      bubble.style.transform = \"translateY(-1px)\";\n    });\n    bubble.addEventListener(\"mouseleave\", () => {\n      bubble.style.background = \"rgba(0, 0, 0, 0.8)\";\n      bubble.style.opacity = \"0.9\";\n      bubble.style.transform = \"translateY(0)\";\n    });\n\n    copyHint.appendChild(bubble);\n    pageContainer.appendChild(copyHint);\n    this.copyHintElement = copyHint;\n  }\n\n  private async copyToClipboard(): Promise<void> {\n    if (!this.activeHighlight) return;\n\n    try {\n      await navigator.clipboard.writeText(this.activeHighlight.text);\n      console.log(\n        \"Highlighted text copied to clipboard:\",\n        this.activeHighlight.text\n      );\n\n      // Show visual feedback\n      this.highlightElements.forEach((element) => {\n        element.classList.add(\"copied\");\n        element.style.backgroundColor = \"rgba(0, 255, 0, 0.6)\";\n        element.style.transform = \"scale(1.02)\";\n\n        setTimeout(() => {\n          element.classList.remove(\"copied\");\n          element.style.backgroundColor = this.options.highlightColor;\n          element.style.transform = \"scale(1)\";\n        }, 500);\n      });\n    } catch (err) {\n      console.error(\"Failed to copy text:\", err);\n    }\n  }\n\n  private rerenderHighlights(): void {\n    if (this.activeHighlight) {\n      this.clearHighlights();\n      this.renderHighlights();\n      if (this.options.copyHintEnabled) {\n        this.renderCopyHint();\n      }\n    }\n  }\n\n  clearHighlights(): void {\n    // Remove highlight elements\n    this.highlightElements.forEach((element) => {\n      element.remove();\n    });\n    this.highlightElements = [];\n\n    // Remove copy hint\n    if (this.copyHintElement) {\n      this.copyHintElement.remove();\n      this.copyHintElement = null;\n    }\n\n    this.activeHighlight = null;\n  }\n\n  getActiveHighlight(): ActiveHighlight | null {\n    return this.activeHighlight;\n  }\n\n  destroy(): void {\n    this.clearHighlights();\n    document.removeEventListener(\"mouseup\", this.handleMouseUp.bind(this));\n    document.removeEventListener(\"click\", this.handleDocumentClick.bind(this));\n    document.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n}\n","import type { SearchResult } from \"../types\";\n\nexport interface SearchOptions {\n  highlightColor: string;\n  caseSensitive: boolean;\n  wholeWords: boolean;\n}\n\nexport interface TextContent {\n  pageNumber: number;\n  items: Array<{\n    str: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }>;\n}\n\n// Security: Add regex validation and timeout protection\nconst MAX_REGEX_LENGTH = 100;\nconst SEARCH_TIMEOUT_MS = 5000;\nconst DANGEROUS_REGEX_PATTERNS = [\n  /(\\.\\*){2,}/, // Multiple .* patterns\n  /(\\+\\*)|(\\*\\+)/, // Catastrophic backtracking patterns\n  /(.*){2,}/, // Nested quantifiers\n  /(\\(.+\\+){2,}/, // Nested groups with quantifiers\n];\n\nfunction validateSearchQuery(query: string): boolean {\n  // Prevent excessively long queries\n  if (query.length > MAX_REGEX_LENGTH) {\n    return false;\n  }\n\n  // Check for dangerous regex patterns\n  const escapedQuery = query.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  const testPattern = `\\\\b${escapedQuery}\\\\b`;\n\n  return !DANGEROUS_REGEX_PATTERNS.some((pattern) => pattern.test(testPattern));\n}\n\nfunction createSafeRegex(searchQuery: string): RegExp | null {\n  try {\n    if (!validateSearchQuery(searchQuery)) {\n      console.warn(\"Search query rejected for security reasons\");\n      return null;\n    }\n\n    const escapedQuery = searchQuery.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    return new RegExp(`\\\\b${escapedQuery}\\\\b`, \"g\");\n  } catch (error) {\n    console.warn(\"Invalid regex pattern:\", error);\n    return null;\n  }\n}\n\nexport class SearchEngine {\n  private searchResults: SearchResult[] = [];\n  private searchElements: HTMLElement[] = [];\n  private options: SearchOptions;\n\n  constructor(options: SearchOptions) {\n    this.options = options;\n  }\n\n  search(query: string, textContent: TextContent[]): SearchResult[] {\n    this.clearResults();\n\n    if (!query.trim()) return [];\n\n    const results: SearchResult[] = [];\n    let globalIndex = 0;\n\n    // Optimize search by preprocessing query once\n    const searchQuery = this.options.caseSensitive\n      ? query\n      : query.toLowerCase();\n\n    // Security: Use safe regex construction with validation\n    const regex = this.options.wholeWords ? createSafeRegex(searchQuery) : null;\n\n    // If regex creation failed due to security concerns, fall back to simple search\n    if (this.options.wholeWords && !regex) {\n      console.warn(\n        \"Falling back to simple search due to invalid regex pattern\"\n      );\n      // Continue with simple indexOf search instead of returning empty results\n    }\n\n    textContent.forEach((pageContent) => {\n      pageContent.items.forEach((item) => {\n        // Skip empty items early\n        if (!item.str.trim()) return;\n\n        const text = this.options.caseSensitive\n          ? item.str\n          : item.str.toLowerCase();\n        const indices = this.findMatchIndices(text, searchQuery, regex);\n\n        indices.forEach(({ index, length }) => {\n          results.push({\n            pageNumber: pageContent.pageNumber,\n            text: item.str.substr(index, length),\n            position: {\n              x: item.x,\n              y: item.y,\n              width: item.width,\n              height: item.height,\n            },\n            textIndex: globalIndex,\n            context: this.getContext(item.str, index, length),\n          });\n          globalIndex++;\n        });\n      });\n    });\n\n    this.searchResults = results;\n    this.renderSearchResultsOptimized();\n    return results;\n  }\n\n  private findMatchIndices(\n    text: string,\n    searchQuery: string,\n    regex: RegExp | null\n  ): Array<{ index: number; length: number }> {\n    const matches: Array<{ index: number; length: number }> = [];\n\n    if (regex) {\n      regex.lastIndex = 0; // Reset regex state\n      let match;\n      let iterationCount = 0;\n      const maxIterations = 10000; // Prevent infinite loops\n\n      while (\n        (match = regex.exec(text)) !== null &&\n        iterationCount < maxIterations\n      ) {\n        matches.push({ index: match.index, length: match[0].length });\n        iterationCount++;\n\n        // Break infinite loop protection\n        if (match.index === regex.lastIndex) {\n          regex.lastIndex++;\n        }\n      }\n    } else {\n      let index = text.indexOf(searchQuery);\n      let iterationCount = 0;\n      const maxIterations = 10000; // Prevent infinite loops\n\n      while (index !== -1 && iterationCount < maxIterations) {\n        matches.push({ index, length: searchQuery.length });\n        index = text.indexOf(searchQuery, index + 1);\n        iterationCount++;\n      }\n    }\n\n    return matches;\n  }\n\n  clearResults(): void {\n    this.searchResults = [];\n    this.clearSearchHighlights();\n  }\n\n  getResults(): SearchResult[] {\n    return this.searchResults;\n  }\n\n  destroy(): void {\n    this.clearResults();\n  }\n\n  private renderSearchResultsOptimized(): void {\n    // Group results by page for batch DOM operations\n    const resultsByPage = new Map<number, SearchResult[]>();\n\n    this.searchResults.forEach((result, index) => {\n      if (!resultsByPage.has(result.pageNumber)) {\n        resultsByPage.set(result.pageNumber, []);\n      }\n      resultsByPage\n        .get(result.pageNumber)!\n        .push({ ...result, originalIndex: index } as any);\n    });\n\n    // Render highlights for each page in batch\n    resultsByPage.forEach((pageResults, pageNumber) => {\n      this.renderPageHighlights(pageNumber, pageResults);\n    });\n  }\n\n  private renderPageHighlights(pageNumber: number, results: any[]): void {\n    const pageContainer = document.querySelector(\n      `[data-page-number=\"${pageNumber}\"]`\n    ) as HTMLElement;\n\n    if (!pageContainer) return;\n\n    const fragment = document.createDocumentFragment();\n\n    results.forEach((result) => {\n      const highlightElement = document.createElement(\"div\");\n      highlightElement.className = \"salina-search-highlight\";\n      highlightElement.setAttribute(\n        \"data-search-index\",\n        result.originalIndex.toString()\n      );\n\n      // Use CSS class for styling instead of inline styles for better performance\n      highlightElement.style.cssText = `\n        position: absolute;\n        left: ${result.position.x}px;\n        top: ${result.position.y}px;\n        width: ${result.position.width}px;\n        height: ${result.position.height}px;\n        background-color: ${this.options.highlightColor};\n        pointer-events: none;\n        border-radius: 2px;\n        z-index: 15;\n        mix-blend-mode: multiply;\n      `;\n\n      fragment.appendChild(highlightElement);\n      this.searchElements.push(highlightElement);\n    });\n\n    pageContainer.appendChild(fragment);\n  }\n\n  private clearSearchHighlights(): void {\n    this.searchElements.forEach((element) => element.remove());\n    this.searchElements = [];\n  }\n\n  private getContext(text: string, index: number, length: number): string {\n    const contextLength = 50;\n    const start = Math.max(0, index - contextLength);\n    const end = Math.min(text.length, index + length + contextLength);\n\n    let context = text.substring(start, end);\n\n    if (start > 0) context = \"...\" + context;\n    if (end < text.length) context = context + \"...\";\n\n    return context;\n  }\n\n  private escapeRegExp(string: string): string {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  highlightSearchResult(index: number): void {\n    // Remove previous highlighting\n    this.searchElements.forEach((el) => el.classList.remove(\"current\"));\n\n    // Highlight current result\n    const element = this.searchElements[index];\n    if (element) {\n      element.classList.add(\"current\");\n      element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  }\n}\n","import type { SearchResult } from '../types'\n\nexport interface TextLayerMatch {\n  pageIndex: number\n  matchIndex: number\n  textDivs: HTMLElement[]\n  textContent: string\n  begin: { divIdx: number; offset: number }\n  end: { divIdx: number; offset: number }\n}\n\n/**\n * PDF.js-style text layer highlighter that works with native browser selection\n * and text layer spans for pixel-perfect highlighting\n */\nexport class TextLayerHighlighter {\n  private matches: Map<string, TextLayerMatch[]> = new Map()\n  private selectedMatchIndex: number = -1\n  private highlightClassName = 'salina-highlight'\n  private selectedClassName = 'salina-highlight-selected'\n  \n  /**\n   * Find all text matches in a text layer using PDF.js approach\n   */\n  findTextInLayer(\n    textLayer: HTMLElement,\n    query: string,\n    caseSensitive: boolean = false\n  ): TextLayerMatch[] {\n    const textDivs = Array.from(textLayer.querySelectorAll('span')) as HTMLElement[]\n    const matches: TextLayerMatch[] = []\n    \n    if (!textDivs.length || !query) return matches\n    \n    const pageText = textDivs.map(div => div.textContent || '').join('')\n    const searchQuery = caseSensitive ? query : query.toLowerCase()\n    const searchText = caseSensitive ? pageText : pageText.toLowerCase()\n    \n    let matchIndex = 0\n    let searchIndex = 0\n    \n    while ((searchIndex = searchText.indexOf(searchQuery, searchIndex)) !== -1) {\n      // Find which divs contain this match\n      const matchEnd = searchIndex + searchQuery.length\n      \n      let charCount = 0\n      let beginDiv = -1\n      let beginOffset = -1\n      let endDiv = -1\n      let endOffset = -1\n      \n      for (let divIdx = 0; divIdx < textDivs.length; divIdx++) {\n        const divText = textDivs[divIdx].textContent || ''\n        const divLength = divText.length\n        \n        if (beginDiv === -1 && charCount + divLength > searchIndex) {\n          beginDiv = divIdx\n          beginOffset = searchIndex - charCount\n        }\n        \n        if (charCount < matchEnd && charCount + divLength >= matchEnd) {\n          endDiv = divIdx\n          endOffset = matchEnd - charCount\n          break\n        }\n        \n        charCount += divLength\n      }\n      \n      if (beginDiv !== -1 && endDiv !== -1) {\n        const matchDivs = textDivs.slice(beginDiv, endDiv + 1)\n        \n        matches.push({\n          pageIndex: parseInt(textLayer.dataset.pageNumber || '0'),\n          matchIndex: matchIndex++,\n          textDivs: matchDivs,\n          textContent: pageText.substring(searchIndex, matchEnd),\n          begin: { divIdx: beginDiv, offset: beginOffset },\n          end: { divIdx: endDiv, offset: endOffset }\n        })\n      }\n      \n      searchIndex = matchEnd\n    }\n    \n    return matches\n  }\n  \n  /**\n   * Highlight matches using PDF.js approach with wrapped text nodes\n   */\n  highlightMatches(matches: TextLayerMatch[], highlightAll: boolean = true): void {\n    const pageMatches = new Map<number, TextLayerMatch[]>()\n    \n    // Group matches by page\n    matches.forEach(match => {\n      if (!pageMatches.has(match.pageIndex)) {\n        pageMatches.set(match.pageIndex, [])\n      }\n      pageMatches.get(match.pageIndex)!.push(match)\n    })\n    \n    // Highlight each page's matches\n    pageMatches.forEach((pageMatchList, pageIndex) => {\n      this.highlightPageMatches(pageMatchList, highlightAll)\n    })\n  }\n  \n  private highlightPageMatches(matches: TextLayerMatch[], highlightAll: boolean): void {\n    // Sort matches by position to handle overlaps correctly\n    matches.sort((a, b) => {\n      if (a.begin.divIdx !== b.begin.divIdx) {\n        return a.begin.divIdx - b.begin.divIdx\n      }\n      return a.begin.offset - b.begin.offset\n    })\n    \n    // Process each match\n    matches.forEach((match, index) => {\n      this.highlightMatch(match, highlightAll || index === this.selectedMatchIndex)\n    })\n  }\n  \n  private highlightMatch(match: TextLayerMatch, isSelected: boolean = false): void {\n    const { begin, end, textDivs } = match\n    \n    if (begin.divIdx === end.divIdx) {\n      // Match within single div\n      this.highlightTextRange(\n        textDivs[0],\n        begin.offset,\n        end.offset,\n        isSelected\n      )\n    } else {\n      // Match spans multiple divs\n      for (let i = 0; i < textDivs.length; i++) {\n        const div = textDivs[i]\n        \n        if (i === 0) {\n          // First div: highlight from offset to end\n          this.highlightTextRange(\n            div,\n            begin.offset,\n            div.textContent!.length,\n            isSelected\n          )\n        } else if (i === textDivs.length - 1) {\n          // Last div: highlight from start to offset\n          this.highlightTextRange(div, 0, end.offset, isSelected)\n        } else {\n          // Middle divs: highlight entirely\n          this.highlightTextRange(div, 0, div.textContent!.length, isSelected)\n        }\n      }\n    }\n  }\n  \n  private highlightTextRange(\n    element: HTMLElement,\n    start: number,\n    end: number,\n    isSelected: boolean\n  ): void {\n    const text = element.textContent || ''\n    if (start >= end || start < 0 || end > text.length) return\n    \n    const textNode = element.firstChild as Text\n    if (!textNode || textNode.nodeType !== Node.TEXT_NODE) return\n    \n    // Create highlight wrapper\n    const highlightSpan = document.createElement('span')\n    highlightSpan.className = this.highlightClassName\n    if (isSelected) {\n      highlightSpan.classList.add(this.selectedClassName)\n    }\n    \n    // Handle text node splitting for partial highlights\n    if (start > 0) {\n      textNode.splitText(start)\n    }\n    \n    const highlightedNode = textNode.nextSibling as Text || textNode\n    if (end < text.length) {\n      highlightedNode.splitText(end - start)\n    }\n    \n    // Wrap the text node with highlight span\n    const highlightedText = highlightedNode.cloneNode(true)\n    highlightSpan.appendChild(highlightedText)\n    highlightedNode.parentNode!.replaceChild(highlightSpan, highlightedNode)\n  }\n  \n  /**\n   * Clear all highlights from text layers\n   */\n  clearHighlights(): void {\n    const highlights = document.querySelectorAll(`.${this.highlightClassName}`)\n    \n    highlights.forEach(highlight => {\n      const parent = highlight.parentNode\n      if (!parent) return\n      \n      // Extract text content and replace highlight span with text node\n      const text = highlight.textContent || ''\n      const textNode = document.createTextNode(text)\n      parent.replaceChild(textNode, highlight)\n      \n      // Normalize to merge adjacent text nodes\n      parent.normalize()\n    })\n    \n    this.matches.clear()\n    this.selectedMatchIndex = -1\n  }\n  \n  /**\n   * Navigate to specific match\n   */\n  navigateToMatch(matchIndex: number): void {\n    const allMatches = Array.from(this.matches.values()).flat()\n    \n    if (matchIndex < 0 || matchIndex >= allMatches.length) return\n    \n    // Clear previous selection\n    document.querySelectorAll(`.${this.selectedClassName}`).forEach(el => {\n      el.classList.remove(this.selectedClassName)\n    })\n    \n    // Highlight new selection\n    this.selectedMatchIndex = matchIndex\n    const match = allMatches[matchIndex]\n    \n    // Re-highlight with selection\n    this.highlightMatch(match, true)\n    \n    // Scroll into view\n    const firstDiv = match.textDivs[0]\n    firstDiv.scrollIntoView({ behavior: 'smooth', block: 'center' })\n  }\n  \n  /**\n   * Get selection from text layer for manual highlighting\n   */\n  getSelectionInfo(selection: Selection): {\n    text: string\n    range: Range\n    rects: DOMRect[]\n  } | null {\n    if (!selection.rangeCount) return null\n    \n    const range = selection.getRangeAt(0)\n    const text = selection.toString().trim()\n    \n    if (!text) return null\n    \n    // Get all client rects for the selection\n    const rects = Array.from(range.getClientRects())\n    \n    return {\n      text,\n      range,\n      rects\n    }\n  }\n  \n  /**\n   * Create persistent highlight from selection\n   */\n  createHighlightFromSelection(\n    selection: Selection,\n    color: string = 'yellow',\n    id?: string\n  ): string | null {\n    const selectionInfo = this.getSelectionInfo(selection)\n    if (!selectionInfo) return null\n    \n    const { range } = selectionInfo\n    const highlightId = id || `highlight_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    \n    // Create highlight wrapper\n    const highlightSpan = document.createElement('span')\n    highlightSpan.className = 'salina-persistent-highlight'\n    highlightSpan.dataset.highlightId = highlightId\n    highlightSpan.style.backgroundColor = color\n    highlightSpan.style.opacity = '0.3'\n    highlightSpan.style.cursor = 'pointer'\n    \n    try {\n      // Wrap the range content with highlight span\n      range.surroundContents(highlightSpan)\n    } catch (e) {\n      // If surroundContents fails (e.g., range spans multiple elements),\n      // extract and wrap the contents\n      const contents = range.extractContents()\n      highlightSpan.appendChild(contents)\n      range.insertNode(highlightSpan)\n    }\n    \n    // Clear selection\n    selection.removeAllRanges()\n    \n    return highlightId\n  }\n  \n  /**\n   * Remove persistent highlight by ID\n   */\n  removeHighlight(highlightId: string): void {\n    const highlight = document.querySelector(`[data-highlight-id=\"${highlightId}\"]`)\n    if (!highlight) return\n    \n    const parent = highlight.parentNode\n    if (!parent) return\n    \n    // Move all child nodes out of highlight\n    while (highlight.firstChild) {\n      parent.insertBefore(highlight.firstChild, highlight)\n    }\n    \n    // Remove empty highlight element\n    highlight.remove()\n    \n    // Normalize to merge adjacent text nodes\n    parent.normalize()\n  }\n}","import type { SearchResult } from '../types'\nimport { TextLayerHighlighter, type TextLayerMatch } from '../highlighting/TextLayerHighlighter'\n\nexport interface TextLayerSearchOptions {\n  caseSensitive: boolean\n  wholeWords: boolean\n  highlightAll: boolean\n}\n\n/**\n * Enhanced search engine that uses PDF.js text layer for accurate highlighting\n */\nexport class TextLayerSearchEngine {\n  private highlighter: TextLayerHighlighter\n  private currentQuery: string = ''\n  private currentMatchIndex: number = -1\n  private matches: TextLayerMatch[] = []\n  private options: TextLayerSearchOptions\n  \n  constructor(options: Partial<TextLayerSearchOptions> = {}) {\n    this.highlighter = new TextLayerHighlighter()\n    this.options = {\n      caseSensitive: false,\n      wholeWords: false,\n      highlightAll: true,\n      ...options\n    }\n  }\n  \n  /**\n   * Search across all text layers\n   */\n  search(query: string): SearchResult[] {\n    this.clear()\n    \n    if (!query.trim()) return []\n    \n    this.currentQuery = query\n    const results: SearchResult[] = []\n    \n    // Find all text layers\n    const textLayers = document.querySelectorAll('.salina-pdf-text-layer') as NodeListOf<HTMLElement>\n    \n    textLayers.forEach(textLayer => {\n      const pageNumber = parseInt(textLayer.dataset.pageNumber || '0')\n      const matches = this.searchInTextLayer(textLayer, query)\n      \n      // Convert TextLayerMatch to SearchResult\n      matches.forEach((match, index) => {\n        const bounds = this.getMatchBounds(match)\n        results.push({\n          pageNumber,\n          text: match.textContent,\n          position: bounds,\n          textIndex: results.length,\n          context: this.getMatchContext(match)\n        })\n      })\n      \n      this.matches.push(...matches)\n    })\n    \n    // Highlight all matches if enabled\n    if (this.options.highlightAll && this.matches.length > 0) {\n      this.highlighter.highlightMatches(this.matches, true)\n    }\n    \n    return results\n  }\n  \n  private searchInTextLayer(textLayer: HTMLElement, query: string): TextLayerMatch[] {\n    let searchQuery = query\n    \n    // Handle whole words search\n    if (this.options.wholeWords) {\n      // For whole words, we'll check boundaries after finding matches\n      // This is more accurate than using regex on the concatenated text\n    }\n    \n    const matches = this.highlighter.findTextInLayer(\n      textLayer,\n      searchQuery,\n      this.options.caseSensitive\n    )\n    \n    // Filter for whole words if needed\n    if (this.options.wholeWords) {\n      return matches.filter(match => this.isWholeWordMatch(match))\n    }\n    \n    return matches\n  }\n  \n  private isWholeWordMatch(match: TextLayerMatch): boolean {\n    const { textDivs, begin, end } = match\n    \n    // Check start boundary\n    const startDiv = textDivs[0]\n    const startText = startDiv.textContent || ''\n    if (begin.offset > 0) {\n      const charBefore = startText[begin.offset - 1]\n      if (charBefore && /\\w/.test(charBefore)) {\n        return false\n      }\n    }\n    \n    // Check end boundary\n    const endDiv = textDivs[textDivs.length - 1]\n    const endText = endDiv.textContent || ''\n    if (end.offset < endText.length) {\n      const charAfter = endText[end.offset]\n      if (charAfter && /\\w/.test(charAfter)) {\n        return false\n      }\n    }\n    \n    return true\n  }\n  \n  private getMatchBounds(match: TextLayerMatch): {\n    x: number\n    y: number\n    width: number\n    height: number\n  } {\n    const rects: DOMRect[] = []\n    \n    // Collect bounding rects from all involved text divs\n    match.textDivs.forEach(div => {\n      const rect = div.getBoundingClientRect()\n      rects.push(rect)\n    })\n    \n    if (rects.length === 0) {\n      return { x: 0, y: 0, width: 0, height: 0 }\n    }\n    \n    // Calculate overall bounds\n    const bounds = {\n      x: Math.min(...rects.map(r => r.left)),\n      y: Math.min(...rects.map(r => r.top)),\n      width: 0,\n      height: 0\n    }\n    \n    const right = Math.max(...rects.map(r => r.right))\n    const bottom = Math.max(...rects.map(r => r.bottom))\n    \n    bounds.width = right - bounds.x\n    bounds.height = bottom - bounds.y\n    \n    // Convert to page-relative coordinates\n    const pageContainer = match.textDivs[0].closest('[data-page-number]')\n    if (pageContainer) {\n      const pageRect = pageContainer.getBoundingClientRect()\n      bounds.x -= pageRect.left\n      bounds.y -= pageRect.top\n    }\n    \n    return bounds\n  }\n  \n  private getMatchContext(match: TextLayerMatch, contextLength: number = 30): string {\n    const fullText = match.textDivs.map(div => div.textContent || '').join('')\n    const matchText = match.textContent\n    const matchStart = fullText.indexOf(matchText)\n    \n    if (matchStart === -1) return matchText\n    \n    const contextStart = Math.max(0, matchStart - contextLength)\n    const contextEnd = Math.min(fullText.length, matchStart + matchText.length + contextLength)\n    \n    let context = fullText.substring(contextStart, contextEnd)\n    \n    if (contextStart > 0) context = '...' + context\n    if (contextEnd < fullText.length) context = context + '...'\n    \n    return context\n  }\n  \n  /**\n   * Navigate to next/previous match\n   */\n  nextMatch(): void {\n    if (this.matches.length === 0) return\n    \n    this.currentMatchIndex = (this.currentMatchIndex + 1) % this.matches.length\n    this.highlighter.navigateToMatch(this.currentMatchIndex)\n  }\n  \n  previousMatch(): void {\n    if (this.matches.length === 0) return\n    \n    this.currentMatchIndex = this.currentMatchIndex - 1\n    if (this.currentMatchIndex < 0) {\n      this.currentMatchIndex = this.matches.length - 1\n    }\n    \n    this.highlighter.navigateToMatch(this.currentMatchIndex)\n  }\n  \n  /**\n   * Clear search results and highlights\n   */\n  clear(): void {\n    this.highlighter.clearHighlights()\n    this.matches = []\n    this.currentQuery = ''\n    this.currentMatchIndex = -1\n  }\n  \n  /**\n   * Update search options\n   */\n  setOptions(options: Partial<TextLayerSearchOptions>): void {\n    this.options = { ...this.options, ...options }\n    \n    // Re-run search if we have a current query\n    if (this.currentQuery) {\n      this.search(this.currentQuery)\n    }\n  }\n  \n  /**\n   * Get current match information\n   */\n  getCurrentMatch(): { index: number; total: number } | null {\n    if (this.matches.length === 0) return null\n    \n    return {\n      index: this.currentMatchIndex + 1,\n      total: this.matches.length\n    }\n  }\n  \n  destroy(): void {\n    this.clear()\n  }\n}","import type { Highlight } from '../types'\nimport { TextLayerHighlighter } from './TextLayerHighlighter'\n\nexport interface SelectionHighlight extends Highlight {\n  serializedRange?: string\n  rects: DOMRect[]\n}\n\nexport interface SelectionHighlightOptions {\n  defaultColor: string\n  allowMultipleColors: boolean\n  persistHighlights: boolean\n  autoHighlight: boolean\n}\n\n/**\n * Enhanced highlight engine that uses native browser selection and text layer\n * for pixel-perfect highlighting across zoom levels\n */\nexport class SelectionHighlightEngine {\n  private highlighter: TextLayerHighlighter\n  private highlights: Map<string, SelectionHighlight> = new Map()\n  private options: SelectionHighlightOptions\n  private selectionHandler: ((event: MouseEvent) => void) | null = null\n  \n  constructor(options: Partial<SelectionHighlightOptions> = {}) {\n    this.highlighter = new TextLayerHighlighter()\n    this.options = {\n      defaultColor: 'yellow',\n      allowMultipleColors: true,\n      persistHighlights: true,\n      autoHighlight: false,\n      ...options\n    }\n    \n    this.setupSelectionHandling()\n  }\n  \n  private setupSelectionHandling(): void {\n    if (!this.options.autoHighlight) return\n    \n    this.selectionHandler = (event: MouseEvent) => {\n      // Only handle mouse up events in text layers\n      const target = event.target as HTMLElement\n      if (!target.closest('.salina-pdf-text-layer')) return\n      \n      // Small delay to ensure selection is complete\n      setTimeout(() => {\n        const selection = window.getSelection()\n        if (selection && selection.toString().trim()) {\n          this.createHighlightFromCurrentSelection()\n        }\n      }, 10)\n    }\n    \n    document.addEventListener('mouseup', this.selectionHandler)\n  }\n  \n  /**\n   * Create highlight from current browser selection\n   */\n  createHighlightFromCurrentSelection(\n    color: string = this.options.defaultColor\n  ): SelectionHighlight | null {\n    const selection = window.getSelection()\n    if (!selection || !selection.rangeCount) return null\n    \n    const selectionInfo = this.highlighter.getSelectionInfo(selection)\n    if (!selectionInfo) return null\n    \n    // Determine which page the selection is on\n    const range = selection.getRangeAt(0)\n    const container = range.commonAncestorContainer\n    const textLayer = (container instanceof Element ? container : container.parentElement)\n      ?.closest('.salina-pdf-text-layer') as HTMLElement\n    \n    if (!textLayer) return null\n    \n    const pageNumber = parseInt(textLayer.dataset.pageNumber || '1')\n    \n    // Create highlight using text layer highlighter\n    const highlightId = this.highlighter.createHighlightFromSelection(selection, color)\n    if (!highlightId) return null\n    \n    // Create highlight object\n    const highlight: SelectionHighlight = {\n      id: highlightId,\n      text: selectionInfo.text,\n      color,\n      position: this.rectsToPosition(selectionInfo.rects, textLayer),\n      pageNumber,\n      timestamp: Date.now(),\n      rects: selectionInfo.rects,\n      serializedRange: this.serializeRange(range)\n    }\n    \n    // Store highlight\n    this.highlights.set(highlightId, highlight)\n    \n    // Add interaction handlers\n    this.addHighlightInteraction(highlightId)\n    \n    // Emit event\n    this.emitHighlightEvent('create', highlight)\n    \n    return highlight\n  }\n  \n  /**\n   * Convert DOMRects to position relative to page\n   */\n  private rectsToPosition(\n    rects: DOMRect[],\n    textLayer: HTMLElement\n  ): { x: number; y: number; width: number; height: number } {\n    if (rects.length === 0) {\n      return { x: 0, y: 0, width: 0, height: 0 }\n    }\n    \n    const pageRect = textLayer.getBoundingClientRect()\n    \n    // Calculate bounding box\n    const minX = Math.min(...rects.map(r => r.left)) - pageRect.left\n    const minY = Math.min(...rects.map(r => r.top)) - pageRect.top\n    const maxX = Math.max(...rects.map(r => r.right)) - pageRect.left\n    const maxY = Math.max(...rects.map(r => r.bottom)) - pageRect.top\n    \n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    }\n  }\n  \n  /**\n   * Serialize a range for persistence\n   */\n  private serializeRange(range: Range): string {\n    const startContainer = range.startContainer\n    const endContainer = range.endContainer\n    \n    // Find the path to the containers\n    const startPath = this.getNodePath(startContainer)\n    const endPath = this.getNodePath(endContainer)\n    \n    return JSON.stringify({\n      startPath,\n      startOffset: range.startOffset,\n      endPath,\n      endOffset: range.endOffset\n    })\n  }\n  \n  /**\n   * Get path to a node for serialization\n   */\n  private getNodePath(node: Node): number[] {\n    const path: number[] = []\n    let current: Node | null = node\n    \n    while (current && current.parentNode) {\n      const parent = current.parentNode\n      const index = Array.from(parent.childNodes).indexOf(current as ChildNode)\n      path.unshift(index)\n      current = parent\n      \n      // Stop at text layer\n      if (current instanceof Element && current.classList.contains('salina-pdf-text-layer')) {\n        break\n      }\n    }\n    \n    return path\n  }\n  \n  /**\n   * Restore highlights from serialized data\n   */\n  restoreHighlights(highlights: SelectionHighlight[]): void {\n    highlights.forEach(highlight => {\n      if (highlight.serializedRange) {\n        try {\n          const range = this.deserializeRange(highlight.serializedRange, highlight.pageNumber)\n          if (range) {\n            // Create selection and highlight\n            const selection = window.getSelection()\n            selection?.removeAllRanges()\n            selection?.addRange(range)\n            \n            this.highlighter.createHighlightFromSelection(\n              selection!,\n              highlight.color,\n              highlight.id\n            )\n            \n            selection?.removeAllRanges()\n            \n            // Store and setup interaction\n            this.highlights.set(highlight.id, highlight)\n            this.addHighlightInteraction(highlight.id)\n          }\n        } catch (e) {\n          console.warn('Failed to restore highlight:', e)\n        }\n      }\n    })\n  }\n  \n  /**\n   * Deserialize a range\n   */\n  private deserializeRange(serialized: string, pageNumber: number): Range | null {\n    try {\n      const data = JSON.parse(serialized)\n      const textLayer = document.querySelector(\n        `[data-page-number=\"${pageNumber}\"] .salina-pdf-text-layer`\n      )\n      \n      if (!textLayer) return null\n      \n      // Navigate to nodes\n      const startNode = this.getNodeFromPath(textLayer, data.startPath)\n      const endNode = this.getNodeFromPath(textLayer, data.endPath)\n      \n      if (!startNode || !endNode) return null\n      \n      const range = document.createRange()\n      range.setStart(startNode, data.startOffset)\n      range.setEnd(endNode, data.endOffset)\n      \n      return range\n    } catch (e) {\n      return null\n    }\n  }\n  \n  /**\n   * Get node from path\n   */\n  private getNodeFromPath(root: Element, path: number[]): Node | null {\n    let current: Node = root\n    \n    for (const index of path) {\n      if (!current.childNodes[index]) return null\n      current = current.childNodes[index]\n    }\n    \n    return current\n  }\n  \n  /**\n   * Add interaction handlers to highlight\n   */\n  private addHighlightInteraction(highlightId: string): void {\n    const element = document.querySelector(`[data-highlight-id=\"${highlightId}\"]`)\n    if (!element) return\n    \n    element.addEventListener('click', (e) => {\n      e.stopPropagation()\n      const highlight = this.highlights.get(highlightId)\n      if (highlight) {\n        this.emitHighlightEvent('click', highlight)\n      }\n    })\n    \n    element.addEventListener('contextmenu', (e) => {\n      e.preventDefault()\n      e.stopPropagation()\n      const highlight = this.highlights.get(highlightId)\n      if (highlight) {\n        this.emitHighlightEvent('contextmenu', highlight)\n      }\n    })\n    \n    // Add hover effects via CSS classes\n    element.addEventListener('mouseenter', () => {\n      element.classList.add('salina-highlight-hover')\n    })\n    \n    element.addEventListener('mouseleave', () => {\n      element.classList.remove('salina-highlight-hover')\n    })\n  }\n  \n  /**\n   * Remove highlight\n   */\n  removeHighlight(highlightId: string): void {\n    const highlight = this.highlights.get(highlightId)\n    if (!highlight) return\n    \n    this.highlighter.removeHighlight(highlightId)\n    this.highlights.delete(highlightId)\n    \n    this.emitHighlightEvent('remove', highlight)\n  }\n  \n  /**\n   * Update highlight color\n   */\n  updateHighlightColor(highlightId: string, color: string): void {\n    const highlight = this.highlights.get(highlightId)\n    if (!highlight) return\n    \n    const element = document.querySelector(`[data-highlight-id=\"${highlightId}\"]`) as HTMLElement\n    if (element) {\n      element.style.backgroundColor = color\n      highlight.color = color\n      this.emitHighlightEvent('update', highlight)\n    }\n  }\n  \n  /**\n   * Get all highlights\n   */\n  getHighlights(): SelectionHighlight[] {\n    return Array.from(this.highlights.values())\n  }\n  \n  /**\n   * Get highlights for a specific page\n   */\n  getPageHighlights(pageNumber: number): SelectionHighlight[] {\n    return Array.from(this.highlights.values()).filter(\n      h => h.pageNumber === pageNumber\n    )\n  }\n  \n  /**\n   * Clear all highlights\n   */\n  clearHighlights(): void {\n    this.highlights.forEach((_, id) => {\n      this.highlighter.removeHighlight(id)\n    })\n    this.highlights.clear()\n  }\n  \n  /**\n   * Emit highlight events\n   */\n  private emitHighlightEvent(\n    type: 'create' | 'click' | 'contextmenu' | 'remove' | 'update',\n    highlight: SelectionHighlight\n  ): void {\n    const event = new CustomEvent(`salina:highlight:${type}`, {\n      detail: { highlight },\n      bubbles: true\n    })\n    document.dispatchEvent(event)\n  }\n  \n  /**\n   * Export highlights for persistence\n   */\n  exportHighlights(): SelectionHighlight[] {\n    return this.getHighlights()\n  }\n  \n  /**\n   * Import highlights\n   */\n  importHighlights(highlights: SelectionHighlight[]): void {\n    this.clearHighlights()\n    this.restoreHighlights(highlights)\n  }\n  \n  destroy(): void {\n    if (this.selectionHandler) {\n      document.removeEventListener('mouseup', this.selectionHandler)\n    }\n    this.clearHighlights()\n  }\n}","import type { SalinaPDFViewerOptions, PDFPage } from '../types'\nimport type { TextContent } from '../search/SearchEngine'\n\n// PDF.js types and declarations\ninterface PDFJSLib {\n  getDocument: (src: any) => any\n  GlobalWorkerOptions: {\n    workerSrc: string\n  }\n  Util: {\n    transform: (matrix1: number[], matrix2: number[]) => number[]\n  }\n}\n\n// Global PDF.js reference\nlet pdfjsLib: PDFJSLib | null = null\n\n// Load PDF.js dynamically\nfunction loadPDFJS(): Promise<PDFJSLib> {\n  return new Promise((resolve, reject) => {\n    if (pdfjsLib) {\n      resolve(pdfjsLib)\n      return\n    }\n\n    // Check if already loaded globally\n    if (typeof window !== 'undefined' && (window as any).pdfjsLib) {\n      pdfjsLib = (window as any).pdfjsLib\n      // Setup worker if not already set\n      if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = \n          'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js'\n      }\n      resolve(pdfjsLib)\n      return\n    }\n\n    // Try to load from CDN\n    const script = document.createElement('script')\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js'\n    script.onload = () => {\n      if ((window as any).pdfjsLib) {\n        pdfjsLib = (window as any).pdfjsLib\n        // Setup worker\n        pdfjsLib!.GlobalWorkerOptions.workerSrc = \n          'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js'\n        resolve(pdfjsLib!)\n      } else {\n        reject(new Error('PDF.js failed to load'))\n      }\n    }\n    script.onerror = () => reject(new Error('Failed to load PDF.js script'))\n    document.head.appendChild(script)\n  })\n}\n\nexport class PDFRenderer {\n  private container: HTMLElement\n  private options: Required<SalinaPDFViewerOptions>\n  private pdfDocument: any = null\n  private pages: Map<number, PDFPage> = new Map()\n  private scale: number = 1.0\n  private textContent: TextContent[] = []\n\n  constructor(container: HTMLElement, options: Required<SalinaPDFViewerOptions>) {\n    this.container = container\n    this.options = options\n    this.setupPDFWorker()\n  }\n\n  async loadDocument(file: File | string | ArrayBuffer): Promise<number> {\n    try {\n      // Cancel any existing rendering\n      if (this.pdfDocument) {\n        try {\n          this.pdfDocument.destroy()\n        } catch (error) {\n          console.warn('PDFRenderer: Error destroying previous document:', error)\n        }\n      }\n      \n      // Ensure PDF.js is loaded\n      const pdfjs = await loadPDFJS()\n      \n      // Convert file to appropriate format for PDF.js\n      let data: any\n      \n      if (file instanceof File) {\n        data = await this.fileToArrayBuffer(file)\n      } else if (typeof file === 'string') {\n        // URL or base64\n        data = file\n      } else {\n        data = file\n      }\n\n      const loadingTask = pdfjs.getDocument(data)\n      this.pdfDocument = await loadingTask.promise\n      \n      // Extract text content for search\n      await this.extractTextContent()\n      \n      // Render all pages\n      await this.renderAllPages()\n      \n      return this.pdfDocument.numPages\n      \n    } catch (error) {\n      // Handle specific PDF.js errors\n      if (error.name === 'RenderingCancelledException') {\n        console.warn('PDFRenderer: Rendering was cancelled (expected during cleanup)')\n        throw new Error('PDF rendering was cancelled')\n      }\n      throw new Error(`Failed to load PDF: ${error}`)\n    }\n  }\n\n  async renderAllPages(): Promise<void> {\n    if (!this.pdfDocument) return\n\n    // Use request animation frame to prevent blocking UI\n    await new Promise(resolve => requestAnimationFrame(resolve))\n\n    const fragment = document.createDocumentFragment()\n    \n    for (let pageNum = 1; pageNum <= this.pdfDocument.numPages; pageNum++) {\n      const pageElement = await this.renderPage(pageNum)\n      fragment.appendChild(pageElement)\n      \n      // Yield control every 3 pages to prevent blocking\n      if (pageNum % 3 === 0) {\n        await new Promise(resolve => setTimeout(resolve, 0))\n      }\n    }\n    \n    // Clear container and add all pages\n    this.container.innerHTML = ''\n    this.container.appendChild(fragment)\n  }\n\n  async renderPage(pageNumber: number): Promise<HTMLElement> {\n    if (!pdfjsLib) {\n      await loadPDFJS()\n    }\n\n    const page = await this.pdfDocument.getPage(pageNumber)\n    const viewport = page.getViewport({ scale: this.scale })\n    \n    // Create page container\n    const pageContainer = document.createElement('div')\n    pageContainer.className = 'salina-pdf-page'\n    pageContainer.setAttribute('data-page-number', pageNumber.toString())\n    pageContainer.style.cssText = `\n      position: relative;\n      display: inline-block;\n      margin: 10px;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      background: white;\n    `\n    \n    // Create and setup canvas\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')!\n    canvas.width = viewport.width\n    canvas.height = viewport.height\n    canvas.style.display = 'block'\n    \n    pageContainer.appendChild(canvas)\n    \n    // Render PDF page with cancellation handling\n    try {\n      const renderTask = page.render({\n        canvasContext: context,\n        viewport: viewport\n      })\n      await renderTask.promise\n    } catch (error) {\n      if (error.name === 'RenderingCancelledException') {\n        console.warn(`PDFRenderer: Rendering cancelled for page ${pageNumber}`)\n        // Return empty container for cancelled renders\n        return pageContainer\n      }\n      throw error\n    }\n    \n    // Create text layer if enabled\n    let textLayer: HTMLElement | null = null\n    if (this.options.features.search || this.options.features.highlighting) {\n      textLayer = await this.createTextLayer(page, viewport, pageContainer)\n    }\n    \n    // Store page info\n    const pdfPage: PDFPage = {\n      pageNumber,\n      canvas,\n      textLayer: textLayer!,\n      scale: this.scale,\n      viewport\n    }\n    \n    this.pages.set(pageNumber, pdfPage)\n    return pageContainer\n  }\n\n  async createTextLayer(page: any, viewport: any, container: HTMLElement): Promise<HTMLElement> {\n    if (!pdfjsLib) {\n      await loadPDFJS()\n    }\n\n    const textContent = await page.getTextContent()\n    \n    const textLayer = document.createElement('div')\n    textLayer.className = 'salina-pdf-text-layer'\n    textLayer.dataset.pageNumber = container.dataset.pageNumber || '1'\n    textLayer.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: auto;\n      user-select: text;\n    `\n    \n    // Render text items\n    textContent.items.forEach((item: any) => {\n      const pdfjs = pdfjsLib!\n      const tx = pdfjs.Util.transform(\n        pdfjs.Util.transform(viewport.transform, item.transform),\n        [1, 0, 0, -1, 0, 0]\n      )\n      \n      const textElement = document.createElement('span')\n      textElement.textContent = item.str\n      textElement.style.cssText = `\n        position: absolute;\n        left: ${tx[4]}px;\n        top: ${tx[5]}px;\n        font-size: ${Math.sqrt(tx[0] * tx[0] + tx[1] * tx[1])}px;\n        font-family: sans-serif;\n        pointer-events: auto;\n        user-select: text;\n      `\n      \n      textLayer.appendChild(textElement)\n    })\n    \n    container.appendChild(textLayer)\n    return textLayer\n  }\n\n  setScale(scale: number): void {\n    this.scale = scale\n    this.updatePageScale()\n  }\n\n  private updatePageScale(): void {\n    // Optimize by only updating visible pages when possible\n    if (this.isInViewport()) {\n      this.renderVisiblePages()\n    } else {\n      this.renderAllPages()\n    }\n  }\n\n  private renderVisiblePages(): void {\n    const visiblePages = this.getVisiblePages()\n    visiblePages.forEach(pageNum => {\n      const pageElement = this.container.querySelector(`[data-page-number=\"${pageNum}\"]`) as HTMLElement\n      if (pageElement) {\n        this.updatePageElement(pageElement, pageNum)\n      }\n    })\n  }\n\n  private getVisiblePages(): number[] {\n    const containerRect = this.container.getBoundingClientRect()\n    const visiblePages: number[] = []\n    \n    this.pages.forEach((_, pageNum) => {\n      const pageElement = this.container.querySelector(`[data-page-number=\"${pageNum}\"]`) as HTMLElement\n      if (pageElement) {\n        const pageRect = pageElement.getBoundingClientRect()\n        if (pageRect.bottom >= containerRect.top && pageRect.top <= containerRect.bottom) {\n          visiblePages.push(pageNum)\n        }\n      }\n    })\n    \n    return visiblePages\n  }\n\n  private async updatePageElement(pageElement: HTMLElement, pageNumber: number): Promise<void> {\n    const page = await this.pdfDocument.getPage(pageNumber)\n    const viewport = page.getViewport({ scale: this.scale })\n    \n    const canvas = pageElement.querySelector('canvas') as HTMLCanvasElement\n    if (canvas) {\n      canvas.width = viewport.width\n      canvas.height = viewport.height\n      \n      const context = canvas.getContext('2d')!\n      const renderTask = page.render({\n        canvasContext: context,\n        viewport: viewport\n      })\n      await renderTask.promise\n    }\n  }\n\n  private isInViewport(): boolean {\n    return this.container.clientHeight > 0 && this.container.clientWidth > 0\n  }\n\n  goToPage(pageNumber: number): void {\n    const pageElement = this.container.querySelector(\n      `[data-page-number=\"${pageNumber}\"]`\n    ) as HTMLElement\n    \n    if (pageElement) {\n      pageElement.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n  }\n\n  calculateFitToWidthScale(): number {\n    if (!this.pdfDocument || this.pages.size === 0) return 1.0\n    \n    const firstPage = this.pages.values().next().value as PDFPage\n    const containerWidth = this.container.clientWidth - 40 // margin\n    const pageWidth = firstPage.viewport.width\n    \n    return containerWidth / pageWidth\n  }\n\n  calculateFitToHeightScale(): number {\n    if (!this.pdfDocument || this.pages.size === 0) return 1.0\n    \n    const firstPage = this.pages.values().next().value as PDFPage\n    const containerHeight = this.container.clientHeight - 40 // margin\n    const pageHeight = firstPage.viewport.height\n    \n    return containerHeight / pageHeight\n  }\n\n  getTextContent(): TextContent[] {\n    return this.textContent\n  }\n\n  handleResize(): void {\n    // Re-render if fit-to-width/height is enabled\n    if (this.options.zoom.fitToWidth) {\n      const scale = this.calculateFitToWidthScale()\n      this.setScale(scale)\n    } else if (this.options.zoom.fitToHeight) {\n      const scale = this.calculateFitToHeightScale()\n      this.setScale(scale)\n    }\n  }\n\n  destroy(): void {\n    try {\n      // Clear container first to prevent DOM conflicts\n      if (this.container) {\n        this.container.innerHTML = ''\n      }\n      \n      // Destroy PDF document\n      if (this.pdfDocument) {\n        this.pdfDocument.destroy()\n        this.pdfDocument = null\n      }\n      \n      // Clear internal data\n      this.pages.clear()\n      this.textContent = []\n    } catch (error) {\n      console.warn('PDFRenderer: Error during destruction:', error)\n    }\n  }\n\n  private async extractTextContent(): Promise<void> {\n    if (!this.pdfDocument) return\n    \n    this.textContent = []\n    \n    // Process pages in chunks to avoid blocking the main thread\n    const chunkSize = 5\n    const totalPages = this.pdfDocument.numPages\n    \n    for (let startPage = 1; startPage <= totalPages; startPage += chunkSize) {\n      const endPage = Math.min(startPage + chunkSize - 1, totalPages)\n      \n      const chunkPromises = []\n      for (let pageNum = startPage; pageNum <= endPage; pageNum++) {\n        chunkPromises.push(this.extractPageTextContent(pageNum))\n      }\n      \n      const chunkResults = await Promise.all(chunkPromises)\n      this.textContent.push(...chunkResults)\n      \n      // Yield control between chunks\n      if (endPage < totalPages) {\n        await new Promise(resolve => setTimeout(resolve, 0))\n      }\n    }\n  }\n\n  private async extractPageTextContent(pageNum: number): Promise<TextContent> {\n    if (!pdfjsLib) {\n      await loadPDFJS()\n    }\n\n    const page = await this.pdfDocument.getPage(pageNum)\n    const textContent = await page.getTextContent()\n    const viewport = page.getViewport({ scale: 1.0 })\n    \n    return {\n      pageNumber: pageNum,\n      items: textContent.items.map((item: any) => {\n        const pdfjs = pdfjsLib!\n        const tx = pdfjs.Util.transform(\n          pdfjs.Util.transform(viewport.transform, item.transform),\n          [1, 0, 0, -1, 0, 0]\n        )\n        \n        return {\n          str: item.str,\n          x: tx[4],\n          y: tx[5],\n          width: item.width,\n          height: item.height\n        }\n      })\n    }\n  }\n\n  private setupPDFWorker(): void {\n    // PDF.js worker will be setup in loadPDFJS function\n    // This ensures proper initialization order\n  }\n\n  private async fileToArrayBuffer(file: File): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => resolve(reader.result as ArrayBuffer)\n      reader.onerror = () => reject(reader.error)\n      reader.readAsArrayBuffer(file)\n    })\n  }\n}","import type { Highlight } from '../types'\n\nexport interface HighlightOptions {\n  defaultColor: string\n  allowMultipleColors: boolean\n  persistHighlights: boolean\n}\n\ninterface PositionInfo {\n  pageContainer: HTMLElement\n  textLayer: HTMLElement | null\n  containerRect: DOMRect\n  textLayerRect: DOMRect | null\n  scrollOffset: { x: number; y: number }\n}\n\nexport class HighlightEngine {\n  private highlights: Map<string, Highlight> = new Map()\n  private highlightElements: Map<string, HTMLElement> = new Map()\n  private scale: number = 1.0\n  private options: HighlightOptions\n\n  constructor(options: HighlightOptions) {\n    this.options = options\n    console.log('HighlightEngine initialized with options:', options)\n  }\n\n  addHighlight(highlight: Highlight): void {\n    this.highlights.set(highlight.id, highlight)\n    this.renderHighlight(highlight)\n  }\n\n  removeHighlight(id: string): void {\n    this.highlights.delete(id)\n    const element = this.highlightElements.get(id)\n    if (element) {\n      element.remove()\n      this.highlightElements.delete(id)\n    }\n  }\n\n  clearHighlights(): void {\n    this.highlights.clear()\n    this.highlightElements.forEach(element => element.remove())\n    this.highlightElements.clear()\n  }\n\n  updateScale(scale: number): void {\n    this.scale = scale\n    // Re-render all highlights with new scale\n    this.highlights.forEach(highlight => this.renderHighlight(highlight))\n  }\n\n  getHighlights(): Highlight[] {\n    return Array.from(this.highlights.values())\n  }\n\n  getHighlightById(id: string): Highlight | undefined {\n    return this.highlights.get(id)\n  }\n\n  destroy(): void {\n    this.clearHighlights()\n  }\n\n  /**\n   * Handle viewport changes (scroll, resize) to maintain highlight accuracy\n   */\n  public handleViewportChange(): void {\n    // Re-render all highlights to account for viewport changes\n    this.highlights.forEach(highlight => this.renderHighlight(highlight))\n  }\n\n  /**\n   * Optimize highlight rendering by only updating visible highlights\n   */\n  public updateVisibleHighlights(): void {\n    const viewportRect = {\n      top: window.scrollY,\n      bottom: window.scrollY + window.innerHeight,\n      left: window.scrollX,\n      right: window.scrollX + window.innerWidth\n    }\n\n    this.highlights.forEach((highlight, id) => {\n      const element = this.highlightElements.get(id)\n      if (element) {\n        const elementRect = element.getBoundingClientRect()\n        const isVisible = !(\n          elementRect.bottom < viewportRect.top ||\n          elementRect.top > viewportRect.bottom ||\n          elementRect.right < viewportRect.left ||\n          elementRect.left > viewportRect.right\n        )\n\n        // Only re-render visible highlights for performance\n        if (isVisible) {\n          this.renderHighlight(highlight)\n        }\n      }\n    })\n  }\n\n  /**\n   * Get comprehensive positioning information for a page\n   */\n  private getPositionInfo(pageNumber: number): PositionInfo | null {\n    const pageContainer = document.querySelector(\n      `[data-page-number=\"${pageNumber}\"]`\n    ) as HTMLElement\n    \n    if (!pageContainer) return null\n\n    // Try multiple selectors for text layer (different PDF libraries use different classes)\n    const textLayer = pageContainer.querySelector('.textLayer') as HTMLElement ||\n                     pageContainer.querySelector('.react-pdf__Page__textContent') as HTMLElement ||\n                     pageContainer.querySelector('.salina-pdf-text-layer') as HTMLElement\n\n    const containerRect = pageContainer.getBoundingClientRect()\n    const textLayerRect = textLayer?.getBoundingClientRect() || null\n\n    // Get scroll offset from the PDF viewer container\n    const viewerContainer = pageContainer.closest('.salina-pdf-viewer, .pdf-container, .pdf-viewer') as HTMLElement\n    const scrollOffset = {\n      x: viewerContainer?.scrollLeft || 0,\n      y: viewerContainer?.scrollTop || 0\n    }\n\n    return {\n      pageContainer,\n      textLayer,\n      containerRect,\n      textLayerRect,\n      scrollOffset\n    }\n  }\n\n  /**\n   * Calculate accurate highlight position with proper coordinate transformation\n   */\n  private renderHighlight(highlight: Highlight): void {\n    // Remove existing element if it exists\n    const existingElement = this.highlightElements.get(highlight.id)\n    if (existingElement) {\n      existingElement.remove()\n    }\n\n    const positionInfo = this.getPositionInfo(highlight.pageNumber)\n    if (!positionInfo) return\n\n    const { pageContainer, textLayer, containerRect, textLayerRect, scrollOffset } = positionInfo\n\n    // Create highlight element\n    const highlightElement = document.createElement('div')\n    highlightElement.className = 'salina-highlight'\n    highlightElement.setAttribute('data-highlight-id', highlight.id)\n    highlightElement.title = highlight.text\n    \n    // Calculate positioning with proper coordinate system and viewport compensation\n    // Highlights should be positioned relative to the page container\n    // The stored coordinates are already normalized to the page coordinate system\n    const scaledPosition = {\n      x: highlight.position.x * this.scale,\n      y: highlight.position.y * this.scale,\n      width: highlight.position.width * this.scale,\n      height: highlight.position.height * this.scale\n    }\n\n    // Apply styles with accurate positioning\n    Object.assign(highlightElement.style, {\n      position: 'absolute',\n      left: `${scaledPosition.x}px`,\n      top: `${scaledPosition.y}px`,\n      width: `${scaledPosition.width}px`,\n      height: `${scaledPosition.height}px`,\n      backgroundColor: highlight.color,\n      pointerEvents: 'auto',\n      borderRadius: '2px',\n      zIndex: '10',\n      mixBlendMode: 'multiply',\n      opacity: '0.4',\n      transition: 'opacity 0.2s ease, transform 0.2s ease',\n      cursor: 'pointer',\n      // Add a subtle outline to improve visibility\n      outline: '1px solid transparent',\n      boxSizing: 'border-box'\n    })\n\n    // Enhanced interaction handlers\n    highlightElement.addEventListener('click', (e) => {\n      e.stopPropagation()\n      this.handleHighlightClick(highlight)\n    })\n\n    highlightElement.addEventListener('mouseenter', () => {\n      highlightElement.style.opacity = '0.6'\n      highlightElement.style.transform = 'scale(1.01)'\n      highlightElement.style.outline = '1px solid rgba(0, 123, 255, 0.3)'\n    })\n\n    highlightElement.addEventListener('mouseleave', () => {\n      highlightElement.style.opacity = '0.4'\n      highlightElement.style.transform = 'scale(1)'\n      highlightElement.style.outline = '1px solid transparent'\n    })\n\n    // Add to page container\n    pageContainer.appendChild(highlightElement)\n    this.highlightElements.set(highlight.id, highlightElement)\n  }\n\n  /**\n   * Create highlight from text selection with accurate coordinate calculation\n   */\n  public createHighlightFromSelection(\n    selection: Selection,\n    pageNumber: number,\n    color: string = this.options.defaultColor\n  ): Highlight[] | null {\n    if (!selection.rangeCount) return null\n\n    const range = selection.getRangeAt(0)\n    const text = selection.toString().trim()\n    if (!text) return null\n\n    const positionInfo = this.getPositionInfo(pageNumber)\n    if (!positionInfo) return null\n\n    const { pageContainer, containerRect } = positionInfo\n    const rects = range.getClientRects()\n    const highlights: Highlight[] = []\n\n    Array.from(rects).forEach((rect, index) => {\n      if (rect.width > 0 && rect.height > 0) {\n        // Calculate coordinates relative to the page container\n        const relativeX = rect.left - containerRect.left\n        const relativeY = rect.top - containerRect.top\n\n        // Store coordinates normalized by scale (so they remain consistent across zoom levels)\n        const normalizedPosition = {\n          x: relativeX / this.scale,\n          y: relativeY / this.scale,\n          width: rect.width / this.scale,\n          height: rect.height / this.scale\n        }\n\n        const highlight: Highlight = {\n          id: this.generateHighlightId(),\n          text,\n          color,\n          position: normalizedPosition,\n          pageNumber,\n          timestamp: Date.now()\n        }\n\n        highlights.push(highlight)\n        this.addHighlight(highlight)\n      }\n    })\n\n    return highlights.length > 0 ? highlights : null\n  }\n\n  private generateHighlightId(): string {\n    return `highlight_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private handleHighlightClick(highlight: Highlight): void {\n    // Emit custom event for highlight interaction\n    const event = new CustomEvent('salina:highlight:click', {\n      detail: { highlight },\n      bubbles: true\n    })\n    document.dispatchEvent(event)\n  }\n}","/**\n * Generate a unique ID for highlights and other entities\n */\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9) + Date.now().toString(36)\n}\n\n/**\n * Debounce function calls\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: any\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => func(...args), wait)\n  }\n}\n\n/**\n * Throttle function calls\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args)\n      inThrottle = true\n      setTimeout(() => inThrottle = false, limit)\n    }\n  }\n}\n\n/**\n * Clamp a number between min and max values\n */\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max)\n}\n\n/**\n * Check if an element is in viewport\n */\nexport function isInViewport(element: HTMLElement): boolean {\n  const rect = element.getBoundingClientRect()\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  )\n}\n\n/**\n * Get the bounding rect of a text range\n */\nexport function getRangeRect(range: Range): DOMRect {\n  const rects = range.getClientRects()\n  if (rects.length === 0) {\n    throw new Error('Range has no client rects')\n  }\n  \n  // Get the combined bounding rect\n  let left = Infinity\n  let top = Infinity\n  let right = -Infinity\n  let bottom = -Infinity\n  \n  for (let i = 0; i < rects.length; i++) {\n    const rect = rects[i]\n    left = Math.min(left, rect.left)\n    top = Math.min(top, rect.top)\n    right = Math.max(right, rect.right)\n    bottom = Math.max(bottom, rect.bottom)\n  }\n  \n  return new DOMRect(left, top, right - left, bottom - top)\n}\n\n/**\n * Download a blob as a file\n */\nexport function downloadBlob(blob: Blob, filename: string): void {\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n}\n\n/**\n * Convert data to blob and download\n */\nexport function downloadData(data: string, filename: string, mimeType: string = 'application/json'): void {\n  const blob = new Blob([data], { type: mimeType })\n  downloadBlob(blob, filename)\n}\n\n/**\n * Load a file and return its content as text\n */\nexport function loadFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = () => resolve(reader.result as string)\n    reader.onerror = () => reject(reader.error)\n    reader.readAsText(file)\n  })\n}\n\n/**\n * Deep merge two objects\n */\nexport function deepMerge<T extends Record<string, any>>(target: T, source: Partial<T>): T {\n  const result = { ...target }\n  \n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const sourceValue = source[key]\n      const targetValue = result[key]\n      \n      if (\n        sourceValue && \n        typeof sourceValue === 'object' && \n        !Array.isArray(sourceValue) &&\n        targetValue &&\n        typeof targetValue === 'object' &&\n        !Array.isArray(targetValue)\n      ) {\n        result[key] = deepMerge(targetValue, sourceValue)\n      } else {\n        result[key] = sourceValue as any\n      }\n    }\n  }\n  \n  return result\n}\n\n/**\n * Check if code is running in browser environment\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined'\n}\n\n/**\n * Check if touch events are supported\n */\nexport function isTouchDevice(): boolean {\n  return isBrowser() && ('ontouchstart' in window || navigator.maxTouchPoints > 0)\n}\n\n/**\n * Format file size in human readable format\n */\nexport function formatFileSize(bytes: number): string {\n  const units = ['B', 'KB', 'MB', 'GB']\n  let size = bytes\n  let unitIndex = 0\n  \n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024\n    unitIndex++\n  }\n  \n  return `${size.toFixed(1)} ${units[unitIndex]}`\n}\n\n/**\n * Create a promise that resolves after a delay\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Retry a function with exponential backoff\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  maxAttempts: number = 3,\n  baseDelay: number = 1000\n): Promise<T> {\n  let lastError: Error\n  \n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn()\n    } catch (error) {\n      lastError = error as Error\n      if (attempt === maxAttempts) break\n      \n      const delayTime = baseDelay * Math.pow(2, attempt - 1)\n      await delay(delayTime)\n    }\n  }\n  \n  throw lastError!\n}","// Performance utilities for the PDF viewer\nexport class PerformanceOptimizer {\n  private static rafId: number | null = null\n  private static taskQueue: (() => void)[] = []\n  \n  /**\n   * Debounce function calls to improve performance\n   */\n  static debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: any\n    \n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => func(...args), wait)\n    }\n  }\n  \n  /**\n   * Throttle function calls to limit execution frequency\n   */\n  static throttle<T extends (...args: any[]) => any>(\n    func: T,\n    limit: number\n  ): (...args: Parameters<T>) => void {\n    let inThrottle: boolean\n    \n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args)\n        inThrottle = true\n        setTimeout(() => inThrottle = false, limit)\n      }\n    }\n  }\n  \n  /**\n   * Queue tasks to be executed on next animation frame\n   */\n  static queueTask(task: () => void): void {\n    this.taskQueue.push(task)\n    \n    if (this.rafId === null) {\n      this.rafId = requestAnimationFrame(() => {\n        this.processTasks()\n        this.rafId = null\n      })\n    }\n  }\n  \n  private static processTasks(): void {\n    const tasks = this.taskQueue.splice(0)\n    tasks.forEach(task => {\n      try {\n        task()\n      } catch (error) {\n        console.error('Task execution error:', error)\n      }\n    })\n  }\n  \n  /**\n   * Create a cancellable timeout\n   */\n  static createCancellableTimeout(\n    callback: () => void,\n    delay: number\n  ): { cancel: () => void } {\n    const timeoutId = setTimeout(callback, delay)\n    \n    return {\n      cancel: () => clearTimeout(timeoutId)\n    }\n  }\n  \n  /**\n   * Measure and log performance metrics\n   */\n  static measurePerformance<T>(\n    name: string,\n    fn: () => T\n  ): T {\n    const start = performance.now()\n    const result = fn()\n    const end = performance.now()\n    \n    console.log(`${name} took ${end - start} milliseconds`)\n    return result\n  }\n  \n  /**\n   * Create a performance observer for monitoring\n   */\n  static createPerformanceObserver(\n    callback: (entries: PerformanceEntry[]) => void\n  ): PerformanceObserver | null {\n    if (typeof PerformanceObserver === 'undefined') {\n      return null\n    }\n    \n    const observer = new PerformanceObserver((list) => {\n      callback(list.getEntries())\n    })\n    \n    try {\n      observer.observe({ entryTypes: ['measure', 'navigation', 'paint'] } as any)\n      return observer\n    } catch (error) {\n      console.warn('Performance observer not supported:', error)\n      return null\n    }\n  }\n}\n\n/**\n * Memory management utilities\n */\nexport class MemoryManager {\n  private static cache = new Map<string, any>()\n  private static maxCacheSize = 50\n  \n  /**\n   * Store item in cache with automatic cleanup\n   */\n  static setCache(key: string, value: any): void {\n    if (this.cache.size >= this.maxCacheSize) {\n      const firstKey = this.cache.keys().next().value\n      this.cache.delete(firstKey)\n    }\n    \n    this.cache.set(key, value)\n  }\n  \n  /**\n   * Get item from cache\n   */\n  static getCache(key: string): any {\n    return this.cache.get(key) || null\n  }\n  \n  /**\n   * Clear cache\n   */\n  static clearCache(): void {\n    this.cache.clear()\n  }\n  \n  /**\n   * Get current memory usage (if available)\n   */\n  static getMemoryUsage(): any {\n    if ('memory' in performance) {\n      return (performance as any).memory\n    }\n    return null\n  }\n  \n  /**\n   * Force garbage collection (development only)\n   */\n  static forceGC(): void {\n    if ('gc' in window && typeof (window as any).gc === 'function') {\n      (window as any).gc()\n    }\n  }\n}\n\n/**\n * Virtual scrolling utilities for large PDF documents\n */\nexport class VirtualScrolling {\n  private container: HTMLElement\n  private itemHeight: number\n  private visibleRange: { start: number; end: number } = { start: 0, end: 0 }\n  private totalItems: number = 0\n  \n  constructor(container: HTMLElement, itemHeight: number) {\n    this.container = container\n    this.itemHeight = itemHeight\n    console.log('VirtualScrolling initialized for container:', container.tagName)\n  }\n  \n  /**\n   * Calculate visible range based on scroll position\n   */\n  calculateVisibleRange(scrollTop: number, containerHeight: number): { start: number; end: number } {\n    const start = Math.floor(scrollTop / this.itemHeight)\n    const visibleCount = Math.ceil(containerHeight / this.itemHeight)\n    const end = Math.min(start + visibleCount + 1, this.totalItems - 1)\n    \n    this.visibleRange = { start: Math.max(0, start - 1), end }\n    return this.visibleRange\n  }\n  \n  /**\n   * Get current visible range\n   */\n  getVisibleRange(): { start: number; end: number } {\n    return this.visibleRange\n  }\n  \n  /**\n   * Set total number of items\n   */\n  setTotalItems(count: number): void {\n    this.totalItems = count\n  }\n  \n  /**\n   * Get total height of all items\n   */\n  getTotalHeight(): number {\n    return this.totalItems * this.itemHeight\n  }\n}"],"mappings":"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","names":["pageAttr","delay"]}